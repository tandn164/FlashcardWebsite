{"version":3,"sources":["firebase/firebaseIndex.js","provider/AuthProvider.js","hooks/useOnDecksSnapshot.js","hooks/useOnSavedDecksSnapshot.js","hooks/useOnAllDecksSnapshot.js","components/Spinner.js","firebase/dbMethods.js","components/TextInput.js","components/PageHeading.js","components/decks-and-cards/UploadAndDisplayImage.js","components/decks-and-cards/CardEditor.js","components/decks-and-cards/CardCreator.js","components/Accordion.js","components/decks-and-cards/DeckEditor.js","components/decks-and-cards/SelectableDeck.js","components/decks-and-cards/DeckList.js","components/Home.js","hooks/useAuth.js","components/account-management/Login.js","components/account-management/Logout.js","components/account-management/ChangePassword.js","components/account-management/DeleteAccount.js","components/account-management/UpdateProfile.js","components/account-management/MyAccount.js","components/Navlinks.js","components/Nav.js","components/admin/AdminUser.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","db","firestore","fb","storage","firebaseAuth","React","createContext","AuthProvider","props","useState","user","setUser","useEffect","unsub","onAuthStateChanged","Provider","value","children","useOnDecksSnapshot","decks","setDecks","unsubscribe","collection","where","uid","onSnapshot","snapshot","arr","forEach","deck","push","data","error","console","log","message","useOnSavedDecksSnapshot","saveDecks","doc","save_decks","localStorage","setItem","JSON","stringify","useOnAllDecksSnapshot","allDecks","Spinner","size","icon","faSpinner","className","dbMethods","deckId","delete","then","catch","err","update","FieldValue","arrayUnion","id","saveCount","increment","arrayRemove","numCards","owner","title","description","cards","isPublic","get","updatedDeck","length","TextInput","labelText","type","name","placeholder","onChange","autocomplete","isHidden","setIsHidden","faLock","htmlFor","style","outline","autoComplete","onClick","event","preventDefault","prev","faEye","faEyeSlash","PageHeading","titleElement","styles","textAlign","UploadAndDisplayImage","onSetImage","imageRef","image","setImage","filePath","setFilePath","useContext","ref","getDownloadURL","downloadURL","paddingBottom","alt","width","src","uploadTask","target","files","put","on","progress","bytesTransferred","totalBytes","state","child","CardEditor","index","card","onSubmit","onUpdate","onDelete","front","setFront","back","setBack","handleInput","faTrash","CardCreator","onCreateCard","isOpen","setIsOpen","faMinus","faPlus","Accordion","listCards","onCards","setCards","setCard","cardEditorElements","setCardEditorElements","handleClick","onDeleteCard","splice","updateElements","onUpdateCard","elements","map","ele","classes","Fragment","faAngleUp","faAngleDown","newCard","DeckEditor","deckToEdit","setDeckToEdit","history","useHistory","localDeck","parse","getItem","setTitle","updateSuccess","setUpdateSuccess","setDescription","setListCards","setIsPublic","updateDeck","setTimeout","item","faPaperclip","faBook","checked","SelectableDeck","toggleDeck","setSelectedDecks","mine","saved","setSaved","savedDecksRaw","isSaved","savedDecks","filterArray","filter","background","marginBottom","borderRadius","fontWeight","color","stopPropagation","faEdit","faSave","Items","currentItems","PaginatedItems","itemsPerPage","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","slice","Math","ceil","nextLabel","onPageChange","newOffset","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","DeckList","deckList","setDeckList","private","Home","deckToEdit1","path","to","useAuth","username","email","password","newPassword","avatarUrl","userData","setUserData","setError","status","setStatus","login","setLogin","signup","setSignup","logout","setLogout","changeEmail","setChangeEmail","changePassword","setChangePassword","deleteAccount","setDeleteAccount","signInWithEmailAndPassword","userCredential","_user","signOut","createUserWithEmailAndPassword","set","updateProfile","displayName","removeItem","code","credential","EmailAuthProvider","currentUser","reauthenticateWithCredential","updateEmail","photoURL","updatePassword","handleLogin","handleSignup","handleLogout","handleChangeEmail","handleChangePassword","handleDeleteAccount","resetStatus","Login","errorMessage","setErrorMessage","inputs","setInputs","handleChange","e","display","flexDirection","justifyContent","marginRight","faEnvelope","backgroundColor","borderColor","borderWidth","disabled","Logout","ChangePassword","border","DeleteAccount","UpdateProfile","onBack","faUser","MyAccount","photoUrl","loading","margin","exact","faAngleRight","Navlinks","closeMenu","userName","firstChar","setFirstChar","bgColor","setBgColor","getRandomColor","charAt","toUpperCase","floor","random","toString","position","Nav","isMenuOpen","mobile","onSearch","navClasses","setNavClasses","btnClasses","location","useLocation","searchText","setSearchText","pathname","height","marginLeft","paddingLeft","AdminUser","App","selectedDecks","setIsMenuOpen","setDecksData","setSaveDecksData","allDecksData","setAllDecksData","isSearching","setIsSearching","element","includes","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aa85cb9.chunk.js","sourcesContent":["/**\n * Initialize firebase authentication and firestore.\n */\n\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyB25ZqbIrDuXWUokLFcsbltpjUf5pjhb-w\",\n  authDomain: \"flashcardapp-d3306.firebaseapp.com\",\n  databaseURL: \"https://flashcardapp-d3306.firebaseio.com\",\n  projectId: \"flashcardapp-d3306\",\n  storageBucket: \"flashcardapp-d3306.appspot.com\",\n  messagingSenderId: \"635798969664\",\n  appId: \"1:635798969664:web:562fb322eeb9d31667eea5\",\n  measurementId: \"G-XSQ0TX77TY\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth=firebase.auth();\nexport const db=firebase.firestore();\nexport const fb=firebase;\nexport const storage=firebase.storage();\n\nexport default { firebaseConfig }","/**\n * Context Provider for the current user.\n */\n\nimport React, {useState, useEffect} from 'react';\nimport { auth } from '../firebase/firebaseIndex';\n\nexport const firebaseAuth = React.createContext();\n\nconst AuthProvider = (props) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsub = auth.onAuthStateChanged((user) => {\n      user ? setUser(user) : setUser(null);\n    });\n\n    return () => unsub();\n  });\n\n  return (\n    <firebaseAuth.Provider\n      value={{\n        user\n      }}\n    >\n      {props.children}\n    </firebaseAuth.Provider>\n  )\n}\n\nexport default AuthProvider;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnDecksSnapshot = (user) => {\n  const db = firebase.firestore();\n  const [decks, setDecks] = useState([]);\n\n  // Get decks from collection where owner is the current user.\n  useEffect(() => {\n    if (!user) {\n      setDecks([]);\n      return;\n    }\n\n    let ref = db.collection('decks');\n    let unsubscribe = ref.where(\"owner\", \"==\", user.uid).onSnapshot((snapshot) => {\n      let arr = [];\n      snapshot.forEach(deck => arr.push(deck.data()));\n      setDecks(arr);\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, [user]);\n\n  return { decks };\n}\n\nexport default useOnDecksSnapshot;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnSavedDecksSnapshot = (user) => {\n    const db = firebase.firestore();\n    const [saveDecks, setDecks] = useState([]);\n    useEffect(() => {\n      if (!user) {\n        setDecks([]);\n        return;\n      }\n\n      let unsubscribe = db.collection('users').doc(user.uid).onSnapshot((snapshot) => {\n        let arr = [];\n        snapshot.data().save_decks.forEach(deck => arr.push(deck));\n        setDecks(arr)\n        localStorage.setItem('save_decks', JSON.stringify(arr))\n      }, error => console.log(\"Error: \", error.message))\n      return () => unsubscribe();\n    }, [user]);\n    return { saveDecks };\n  }\n\n  export default useOnSavedDecksSnapshot;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnAllDecksSnapshot = () => {\n  const db = firebase.firestore();\n  const [allDecks, setDecks] = useState([]);\n\n  useEffect(() => {\n    let ref = db.collection('decks');\n    let unsubscribe = ref.where(\"isPublic\", \"==\", true).onSnapshot((snapshot) => {\n      let arr = [];\n      snapshot.forEach(deck => arr.push(deck.data()));\n      setDecks(arr);\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, []);\n\n  return { allDecks };\n}\n\nexport default useOnAllDecksSnapshot;","/**\n * A simple loading icon.\n */\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nconst Spinner = ({\n  size=\"1x\"\n}) => {\n  return <FontAwesomeIcon icon={faSpinner} size={size} className=\"spinner\"/>\n}\n\nexport default Spinner;","/**\n * Methods for accessing the firestore database:\n *\n * createDeck\n * deleteDeck\n * updateDeck\n * createCard\n * updateCard\n * deleteCard\n */\n\nimport { db } from \"./firebaseIndex\";\nimport firebase from \"firebase\";\n\nexport const dbMethods = {\n  createDeck: (user, title, description, cards, isPublic = true) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const document = db.collection(\"decks\").doc();\n\n    const newDeck = {\n      id: document.id,\n      numCards: cards.length,\n      title,\n      description,\n      owner: user.uid,\n      cards: cards,\n      isPublic: isPublic,\n    };\n\n    document\n      .set(newDeck)\n      .then(console.log(\"Created new deck.\"))\n      .catch((err) => {\n        console.error(\"Error creating deck: \", err.message);\n      });\n  },\n\n  deleteDeck: (user, deckId) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    db.collection(\"decks\")\n      .doc(deckId)\n      .delete()\n      .then(console.log(\"Deck successfully deleted.\"))\n      .catch((err) => {\n        console.error(\"Error deleting deck: \", err.message);\n      });\n  },\n\n  saveDeck: (user, deck) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n    return db\n      .collection(\"users\")\n      .doc(user.uid)\n      .update({\n        save_decks: firebase.firestore.FieldValue.arrayUnion(deck),\n      })\n      .then(() => {\n        db.collection(\"decks\")\n          .doc(deck.id)\n          .update({\n            saveCount: firebase.firestore.FieldValue.increment(1)\n          })\n          .then(() => {\n            console.log(\"Updated save count number of deck with id: \", deck.id);\n          })\n          .catch((err) => {\n            console.error(\"Error updating document: \", err.message);\n          });\n        console.log(\"Updated deck with id: \", deck.id);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n\n  unsaveDeck: (user, deck) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n    return db\n      .collection(\"users\")\n      .doc(user.uid)\n      .update({\n        save_decks: firebase.firestore.FieldValue.arrayRemove({\n          id: deck.id,\n          numCards: deck.numCards,\n          owner: deck.owner,\n          title: deck.title,\n          description: deck.description,\n          cards: deck.cards,\n          isPublic: deck.isPublic,\n        }),\n      })\n      .then(() => {\n        let ref = db\n          .collection(\"decks\")\n          .doc(deck.id)\n          .get()\n          .then((doc) => {\n            if (doc.data().saveCount > 0) {\n              db.collection(\"decks\")\n                .doc(deck.id)\n                .update({\n                  saveCount: firebase.firestore.FieldValue.increment(-1),\n                })\n                .then(() => {\n                  console.log(\n                    \"Updated save count number of deck with id: \",\n                    deck.id\n                  );\n                })\n                .catch((err) => {\n                  console.error(\"Error updating document: \", err.message);\n                });\n            } else {\n              db.collection(\"decks\")\n                .doc(deck.id)\n                .update({\n                  saveCount: 0,\n                })\n                .then(() => {\n                  console.log(\n                    \"Updated save count number of deck with id: \",\n                    deck.id\n                  );\n                })\n                .catch((err) => {\n                  console.error(\"Error updating document: \", err.message);\n                });\n            }\n          })\n          .catch((err) => {\n            console.error(\"Error getting document data: \", err.message);\n          });\n        console.log(\"Updated deck with id: \", deck.id);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n\n  updateDeck: (user, deckId, title, description, cards, isPublic = true) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const updatedDeck = {\n      title,\n      description,\n      cards,\n      numCards: cards.length,\n      isPublic: isPublic,\n    };\n\n    return db\n      .collection(\"decks\")\n      .doc(deckId)\n      .update(updatedDeck)\n      .then(() => {\n        console.log(\"Updated deck with id: \", deckId);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n};\n","/**\n * Displays a text or password input, dependinding on \n * the type prop. The password input can toggle between\n * password and text types.\n */\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash, faLock } from '@fortawesome/free-solid-svg-icons';\n\nconst TextInput = ({\n  labelText,\n  icon=null,\n  type=\"text\",\n  id=\"\",\n  name=\"\",\n  placeholder=\"\",\n  value,\n  onChange,\n  autocomplete=\"on\"\n}) => {\n  const [isHidden, setIsHidden] = useState(true);\n\n  const toggleHidden = (event) => {\n    event.preventDefault();\n    setIsHidden(prev => !prev);\n  }\n\n  if (icon === null && type===\"password\")\n    icon = <FontAwesomeIcon icon={faLock} />\n\n  return (\n    <div className=\"input-block\">\n      <label htmlFor={id}>{labelText}</label>\n      <div className=\"input-row\">\n        {icon}\n        <input \n          type={type === \"password\" ? isHidden ? \"password\" : \"text\" : type}\n          name={name}\n          id={id}\n          value={value}\n          onChange={onChange}\n          style={{outline: \"none\"}}\n          autoComplete={autocomplete}\n        >\n        </input>\n        {type === \"password\" &&\n          <button\n            type=\"button\"\n            className=\"btn btn-icon\"\n            onClick={toggleHidden}\n          >\n            {isHidden ?\n              <FontAwesomeIcon icon={faEye} />\n            :\n              <FontAwesomeIcon icon={faEyeSlash} />\n            }\n          </button>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default TextInput;","/**\n * Displays a heading with a subtitle.\n */\n\nimport React from 'react';\n\nconst PageHeading = ({\n  title,\n  styles = {textAlign: 'center'}\n}) => {\n  let titleElement = null;\n  titleElement=<h1 style={styles}>{title}</h1>\n\n  return (\n    <header className=\"page-heading\">\n      {titleElement}\n    </header>\n  )\n}\n\nexport default PageHeading;","import React, { useContext, useEffect, useState } from \"react\";\nimport { storage } from \"../../firebase/firebaseIndex\";\nimport { firebaseAuth } from \"../../provider/AuthProvider\";\n\nconst UploadAndDisplayImage = ({\n    onSetImage,\n    imageRef\n}) => {\n    const [image, setImage] = useState(null);\n    const [filePath, setFilePath] = useState(imageRef);\n    const { user } = useContext(firebaseAuth);\n\n    useEffect(() => {\n        if (imageRef) {\n            console.log(imageRef);\n            storage.ref(imageRef).getDownloadURL().then((downloadURL) => {\n                setImage(downloadURL)\n            });\n            setFilePath(imageRef)\n        }\n    }, [imageRef]);\n\n    return (\n        <div style={{paddingBottom: 20}}>\n            {filePath && (\n                <div>\n                    <img alt=\"not fount\" width={\"250px\"} src={image} />\n                    <br />\n                    <button onClick={() => {\n                        const deleteTask = storage.ref(filePath).delete();\n                        deleteTask.then(() => {\n                            console.log('File deleted successfully');\n                            onSetImage(null)\n                        }).catch((error) => {\n                        });\n                    }}>Remove</button>\n                </div>\n            )}\n            <br />\n\n            <br />\n            <input\n                type=\"file\"\n                name=\"myImage\"\n                onChange={(event) => {\n                    if (filePath) {\n                        const deleteTask = storage.ref(filePath).delete();\n                        deleteTask.then(() => {\n                            console.log('File deleted successfully');\n                            onSetImage(null)\n                        }).catch((error) => {\n                            \n                        });\n                    }\n\n                    const uploadTask = storage.ref(`${user.uid}/${event.target.files[0].name}`).put(event.target.files[0]);\n                    uploadTask.on('state_changed',\n                        (snapshot) => {\n                            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                            console.log('Upload is ' + progress + '% done');\n                            switch (snapshot.state) {\n                                case 'paused':\n                                    console.log('Upload is paused');\n                                    break;\n                                case 'running':\n                                    console.log('Upload is running');\n                                    break;\n                            }\n                        },\n                        (error) => {\n                        },\n                        () => {\n                            storage.ref(`${user.uid}`).child(event.target.files[0].name).getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                                console.log('File available at', downloadURL);\n                                onSetImage(`${user.uid}/${event.target.files[0].name}`);\n                                setImage(downloadURL)\n                                setFilePath(`${user.uid}/${event.target.files[0].name}`)\n                            });\n                        }\n                    );\n                }}\n            />\n        </div>\n    );\n};\n\nexport default UploadAndDisplayImage;","/**\n * Handles displaying each card editor.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport UploadAndDisplayImage from './UploadAndDisplayImage';\n\nconst CardEditor = ({\n  index,\n  card,\n  onSubmit,\n  onUpdate,\n  onDelete\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    setFront(card.front);\n    setBack(card.back);\n    setImage(card.imageRef);\n  }, [card])\n\n  const handleInput = (event) => {\n    if (event.target.name === \"front\") {\n      setFront(event.target.value);\n    } else if (event.target.name === \"back\") {\n      setBack(event.target.value);\n    }\n  }\n\n  const updateCard = (event) => {\n    event.preventDefault();\n    console.log(\"Card to update: \", card.id);\n    onUpdate(index, front, back, image)\n    onSubmit();\n  }\n\n  const deleteCard = (event) => {\n    event.preventDefault();\n    onDelete(index)\n  }\n\n  return (\n    <form className=\"card-editor\" onSubmit={updateCard}>\n      <div className=\"input-block\">\n        <textarea\n          name=\"front\"\n          id={card.id + \"-front\"}\n          value={front}\n          onChange={handleInput}\n        />\n        <label htmlFor={card.id + \"-front\"}>Front</label>\n      </div>\n      <div className=\"input-block\">\n        <textarea\n          name=\"back\"\n          id={card.id + \"-back\"}\n          value={back}\n          onChange={handleInput}\n        />\n        <label htmlFor={card.id + \"-back\"}>Back</label>\n      </div>\n      <UploadAndDisplayImage onSetImage={(image)=>{\n        setImage(image);\n      }} imageRef={image}/>\n      <button className=\"btn\">Update</button>\n      <button className=\"btn btn-warning\"\n        onClick={deleteCard}\n      >\n        <FontAwesomeIcon icon={faTrash} /> Delete card\n      </button>\n    </form>\n  );\n}\n\nexport default CardEditor;","/**\n * Renders the toggleable card creator box.\n */\n\nimport React, { useState } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport UploadAndDisplayImage from './UploadAndDisplayImage';\n\nconst CardCreator = ({\n  onCreateCard\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  const handleInput = (event) => {\n    if (event.target.name === \"front\") {\n      setFront(event.target.value);\n    } else if (event.target.name === \"back\") {\n      setBack(event.target.value);\n    }\n  }\n\n  const createCard = (event) => {\n    event.preventDefault();\n    console.log(\"Creating new card.\");\n    onCreateCard(front, back, image);\n    setFront(\"\");\n    setBack(\"\");\n    setImage(null);\n    setIsOpen(false);\n  }\n\n  if (!isOpen) return (\n    <button className=\"btn btn-tertiary\"\n      onClick={() => setIsOpen(true)}\n    >\n      Add card <FontAwesomeIcon icon={faPlus} className=\"icon\" />\n    </button>\n  );\n\n  return (\n    <>\n      <button id=\"add\" className=\"btn btn-tertiary highlighted\"\n        onClick={() => setIsOpen(false)}\n      >\n        Add card <FontAwesomeIcon icon={faMinus} className=\"icon\"/>\n      </button>\n      <form className=\"card-editor\" onSubmit={createCard}>\n        <div className=\"input-block\">\n          <textarea\n            name=\"front\"\n            id=\"new-front\"\n            value={front}\n            onChange={handleInput}\n          />\n          <label htmlFor=\"new-front\">Front</label>\n        </div>\n        <div className=\"input-block\">\n          <textarea\n            name=\"back\"\n            id=\"new-back\"\n            value={back}\n            onChange={handleInput}\n            style={{outline: \"none\"}}\n          />        \n          <label htmlFor=\"new-back\">Back</label>\n        </div>\n        <UploadAndDisplayImage onSetImage={(image)=>{\n            setImage(image);\n        }} imageRef={image}/>\n        <button className=\"btn\">Create</button>\n      </form>\n    </>\n  );\n}\n\nexport default CardCreator;","/**\n * Generates and displays all the toggleable card editor boxes\n * in an accordion.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\n\nimport CardEditor from './decks-and-cards/CardEditor';\nimport CardCreator from './decks-and-cards/CardCreator';\n\nconst Accordion = ({\n  listCards,\n  onCards,\n}) => {\n  const [cards, setCards] = useState(listCards || []);\n  const [card, setCard] = useState(-1);\n  const [cardEditorElements, setCardEditorElements] = useState([]);\n\n  const handleClick = (event) => {\n    console.log(event.target.value)\n    setCard(prev => prev === event.target.value ? -1 : event.target.value);\n  }\n\n  const onCreateCard = (front, back, imageRef) => {\n    let newCard = {front: front, back: back, imageRef: imageRef}\n    console.log(28888, newCard);\n    cards.push(newCard)\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  const onDeleteCard = (index) => {\n    cards.splice(index, 1);\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  const onUpdateCard = (index, front, back, imageRef) => {\n    cards[index] = {front: front, back: back, imageRef: imageRef};\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  useEffect(() => {\n    setCards(listCards)\n  },[listCards])\n\n  useEffect(() => {\n    updateElements()\n  }, [card, cards]);\n\n  const updateElements = () => {\n    const elements = cards.map( (ele, index) => {\n      let classes = index === card ? \"btn btn-tertiary highlighted\" : \"btn btn-tertiary\";\n      console.log(index)\n      console.log(ele);\n      return (\n        <React.Fragment key={index} >\n          <button \n            className={classes}\n            value={index}\n            onClick={handleClick}\n          >\n            <span className=\"truncate\">\"{ele.front}\"</span> \n            {card === `${index}` ?\n              <FontAwesomeIcon icon={faAngleUp} />\n            :\n              <FontAwesomeIcon icon={faAngleDown} />\n            }\n          </button>\n          {card === `${index}` && \n            <CardEditor\n              index={index}\n              card={ele}\n              onSubmit={() => setCard(\"\")}\n              onDelete={onDeleteCard}\n              onUpdate={onUpdateCard}\n            />\n          }\n        </React.Fragment>\n      )\n    })\n\n    setCardEditorElements(elements);\n  }\n\n  return (\n    <>\n      {cardEditorElements}\n      <CardCreator\n        onCreateCard={onCreateCard}\n      />\n    </>\n  );\n}\n\nexport default Accordion;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { useHistory } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook, faHeading, faPaperclip } from '@fortawesome/free-solid-svg-icons';\n\nimport Accordion from '../Accordion';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\nimport firebase from 'firebase';\n\nconst DeckEditor = ({\n  deckToEdit,\n  setDeckToEdit,\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n  const localDeck = JSON.parse(localStorage.getItem('deck'))\n  const deck = deckToEdit || localDeck;\n  const [title, setTitle] = useState(deck.title);\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n  const [description, setDescription] = useState(deck.description);\n  const [listCards, setListCards] = useState([])\n  console.log(deck);\n  const [isPublic, setIsPublic] = useState(deck.isPublic ?? true);\n\n  const updateDeck = () => {\n    dbMethods.updateDeck(user, deck.id, title, description, listCards, isPublic)\n    setDeckToEdit({...deckToEdit, title});\n    setUpdateSuccess(true);\n    setTimeout(() => setUpdateSuccess(false), 3000);\n  }\n\n  const deleteDeck = (event) => {\n    event.preventDefault();\n    dbMethods.deleteDeck(user, deck.id);\n    history.push('/app');\n    setDeckToEdit(null);\n  }\n\n  const db = firebase.firestore();\n\n  useEffect(() => {\n    if (!deck) {\n      return\n    }\n    console.log(deck)\n    let ref = db.collection('decks').doc(deck.id);\n    ref.get()\n      .then(snapshot => {\n        let arr = [];\n        snapshot.data().cards?.forEach(item => arr.push(item));\n        setListCards(arr);\n      })\n      .catch(error => console.log(\"Error: \", error.message))\n  }, [])\n\n  const onUpdateCards = (cards) => {\n    setListCards(cards)\n  }\n\n  const onUpdateDecks = (event) => {\n    updateDeck();\n  }\n\n  return (\n    <div style={{textAlign: 'left'}}>\n      <PageHeading\n        title=\"セットを編集する\"\n        styles={{textAlign: 'left'}}\n      />\n      <form onSubmit={updateDeck}>\n        <TextInput \n          labelText=\"題名\"\n          icon={<FontAwesomeIcon icon={faPaperclip} />}\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          placeholder=\"New Deck\"\n          autocomplete=\"off\"\n        />\n        <TextInput \n        labelText=\"説明\"\n        icon={<FontAwesomeIcon icon={faBook} />}\n        id=\"description\"\n        name=\"description\"\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n        autocomplete=\"off\"\n        />\n        <input\n        id=\"public\"\n        name=\"public\"\n        type=\"checkbox\"\n        checked={isPublic ? false : true}\n        onChange={() => setIsPublic(!isPublic)}\n      />\n      <label htmlFor=\"public\">\n        <span></span>\n        私だけが編集する権利を持っています?\n      </label>\n      </form>\n      <div>\n        <PageHeading \n          title=\"カード\"\n          styles={{textAlign: 'left'}}\n        />\n        <Accordion\n          listCards={listCards}\n          onCards={onUpdateCards}\n        />\n      </div>\n      <button\n          className=\"btn btn-primary\"\n          onClick={onUpdateDecks}\n        >\n          {updateSuccess ? \"Success!\" : \"編集\" }\n        </button>\n      <div>\n        <PageHeading \n          title=\"デッキを削除する\"\n          styles={{textAlign: 'left'}}\n        />\n        <form onSubmit={deleteDeck}>\n          <button\n            className=\"btn btn-warning\"\n          >削除する</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default DeckEditor;","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faSave, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { db } from '../../firebase/firebaseIndex';\n\nconst SelectableDeck = ({\n  toggleDeck,\n  setSelectedDecks,\n  length,\n  deck,\n  setDeckToEdit,\n  mine\n}) => {\n  const history = useHistory();\n  const {user} = useContext(firebaseAuth)\n  const [saved, setSaved] = useState(false);\n  const savedDecksRaw = localStorage.getItem('save_decks')\n\n  useEffect(() => {\n    setSaved(isSaved())\n  },[])\n\n  const isSaved = () => {\n    if (!savedDecksRaw || savedDecksRaw.length == 0) {\n      return false\n    }\n    let savedDecks = JSON.parse(savedDecksRaw)\n    if (!savedDecks || savedDecks.length == 0) {\n      return false\n    }\n    let filterArray = savedDecks.filter(item => item.id == deck.id)\n    return (filterArray && filterArray.length > 0)\n  }\n\n  return (\n    <li style={{background: '#EAB2AE', marginBottom: 20, borderRadius: 10}}\n      // className={selectedDecks?.includes(id) ? \"selected\" : \"\"}\n      // onClick={(event) => {\n      //   event.stopPropagation();\n      //   toggleDeck(id);\n      // }}\n      // role=\"checkbox\"\n      // aria-checked={selectedDecks?.includes(id) ? \"true\" : \"false\"}\n    >\n      <div\n        onClick={() => {\n          history.push('/app/d/'+deck.id)\n        }}\n      >\n        {/* <input\n          name={id}\n          type=\"checkbox\"\n          checked={selectedDecks?.includes(id)}\n          onChange={() => null}\n        /> */}\n        <label htmlFor=\"checkbox\" className=\"truncate\">\n          <span></span>\n          <strong>{deck.title}</strong> ({length} {\"カード\"})\n          \n        </label>\n      </div>\n      <div>\n      <span>保存する人の数:&nbsp;</span><span style={{fontWeight: '700'}}>{deck.saveCount}</span>\n      </div>\n      <div className=\"button-row\">\n        {mine ? <button \n          className=\"btn btn-icon\"\n          style={{color: 'black'}}\n          onClick={(event) => {\n            event.stopPropagation();\n            setDeckToEdit();\n            localStorage.setItem('deck', JSON.stringify(deck));\n            history.push(\"/app/edit\");\n          }}\n        >\n          <FontAwesomeIcon icon={faEdit} /> 編集する\n        </button>\n        : <button \n        className=\"btn btn-icon\"\n        style={{color: 'black'}}\n        onClick={(event) => {\n          event.stopPropagation();\n          if (saved) {\n            console.log(deck)\n            dbMethods.unsaveDeck(user, deck)\n            setSaved(false)\n          } else {\n            dbMethods.saveDeck(user, deck)\n            setSaved(true)\n          }\n        }}\n      >\n        <FontAwesomeIcon icon={saved ? faTrash : faSave} /> {saved ? \"削除する\" : \"保存する\"}\n      </button>\n        }\n      </div>\n    </li>\n  );\n}\n\nexport default SelectableDeck;","import React, { useState, useEffect, useContext } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport SelectableDeck from './SelectableDeck';\n\nfunction Items({ currentItems, user, setDeckToEdit}) {\n  return (\n    <React.Fragment>\n        {currentItems}\n    </React.Fragment>\n  );\n}\n\nfunction PaginatedItems({ itemsPerPage, decks, user, setDeckToEdit}) {\n  // We start with an empty list of items.\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    setCurrentItems(decks.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(decks.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage, decks]);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    const newOffset = event.selected * itemsPerPage % decks.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  return (\n    <>\n      <Items currentItems={currentItems} user={user} />\n      <ReactPaginate\n        nextLabel=\"next >\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={2}\n        pageCount={pageCount}\n        previousLabel=\"< previous\"\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel=\"...\"\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n}\n\nconst DeckList = ({\n  decks,\n  setDeckToEdit,\n}) => {\n  const [deckList, setDeckList] = useState([]);\n  const { user } = useContext(firebaseAuth);\n\n  useEffect(() => {\n    if (!decks) {return}\n    setDeckList(decks.map(deck => {\n      return (\n        <SelectableDeck \n          key={deck.id}\n          length={deck.numCards}\n          deck={deck}\n          mine={user && deck.owner == user.uid}\n          setDeckToEdit={() => {\n            setDeckToEdit({ id: deck.id, title: deck.title, private: deck.private, description: deck.description, isPublic: deck.isPublic });\n          }}\n        />\n      );}\n    ));\n  }, [decks]);\n\n  useEffect(() => {\n  }, [deckList])\n\n  return (\n    <div className=\"deck-list\">\n      <ul>\n        {deckList.length > 0 ? \n          <PaginatedItems itemsPerPage={4} decks={deckList} user={user} setDeckToEdit={setDeckToEdit}/>\n        :\n          <p>セットがありません。 作成して開始してください！</p>\n        }\n      </ul>\n      \n    </div>\n  );\n}\n\nexport default DeckList;","import React, { useContext, useState } from 'react';\nimport { Link, useHistory, Switch, Route } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nimport PageHeading from './PageHeading';\nimport DeckList from './decks-and-cards/DeckList';\nimport DeckEditor from './decks-and-cards/DeckEditor';\n\nconst Home = ({\n  allDecks,\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const [deckToEdit1, setDeckToEdit] = useState(null);\n  const history = useHistory();\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n  return (\n    <Switch>\n      <Route path=\"/app-edit\" >\n        <DeckEditor\n          deckToEdit={deckToEdit1}\n          setDeckToEdit={setDeckToEdit}\n        />\n      </Route>\n      <Route path=\"/\">\n        <>\n          <header className=\"hero\">\n            <section>\n              <div className=\"hero-content\">\n                <div className=\"buttons\">\n                  <>\n                    <Link\n                      className=\"btn btn-cta\"\n                      to=\"/app\"\n                    >\n                      ダッシュボード\n                    </Link>\n                  </>\n                </div>\n              </div>\n            </section>\n            <div className=\"card-design\">\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          </header>\n\n          <section className=\"public-decks\">\n            <div>\n              <PageHeading\n                title=\"全てセット\"\n              />\n              <div style={{textAlign: 'left'}}>\n                <DeckList\n                  decks={allDecks}\n                  setDeckToEdit={setDeckToEdit}\n                />\n              </div>\n            </div>\n          </section>\n        </>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Home;","/**\n * Hook for user authentication and account management:\n * \n * Logging user in\n * Signing user up\n * Logging user out\n * Updating user email\n * Changing user password\n * Deleting account\n */\n\nimport { useState, useEffect, useContext } from 'react';\nimport { auth, db, fb } from '../firebase/firebaseIndex';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nconst useAuth = (username = null, email = null, password = null, newPassword = null, avatarUrl = null) => {\n  const { user } = useContext(firebaseAuth);\n\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(\"pending\");\n\n  const [login, setLogin] = useState(0);\n  const [signup, setSignup] = useState(0);\n  const [logout, setLogout] = useState(0);\n  const [changeEmail, setChangeEmail] = useState(0);\n  const [changePassword, setChangePassword] = useState(0);\n  const [deleteAccount, setDeleteAccount] = useState(0);\n\n  // Logging user in\n  useEffect(() => {\n    if (login === 0 || user != null) return;\n    setError(null);\n    setStatus(\"loading\");\n    auth.signInWithEmailAndPassword(email, password)\n    .then((userCredential) => {\n      let _user = userCredential.user;\n      if (_user.uid != \"u1UXlHy2wvUC0LfSb5lQxO5d2jh1\") {\n        auth.signOut();\n        setStatus(\"error\");\n      } else {\n        setUserData(_user);\n        setStatus(\"success\");\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error logging user in: \", error.message);\n      setError(error);\n      setStatus(\"error\");\n    })\n  }, [login]);\n\n  // Signing user up\n  useEffect(() => {\n    if (signup === 0 || user != null) return;\n    setError(null);\n    setStatus(\"loading\");\n    auth.createUserWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        let _user = userCredential.user;\n        db.collection('users').doc(_user.uid).set({\n          save_decks: []\n        });\n        userCredential.user.updateProfile({displayName: username})\n        setUserData(_user);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        console.error(\"Error signing user in: \", error.message);\n        setError(error);\n        setStatus(\"error\");\n      })\n\n  }, [signup]);\n\n  // Logging user out\n  useEffect(() => {\n    if (logout === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    auth.signOut()\n    .then(() => {\n      console.log(\"Logged out\");\n      setUserData(null);\n      localStorage.removeItem('deck')\n      localStorage.removeItem('save_decks')\n      setStatus(\"success\");\n    })\n    .catch(error => {\n      console.error(\"Error logging user out: \", error.message);\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [logout]);\n\n  useEffect(() => {\n    if (changeEmail === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\")\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      console.log(\"User successfully reauthenticated.\");\n      auth.currentUser.updateEmail(email)\n      .then(() => {\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n      setStatus(\"loading\")\n      auth.currentUser.updateProfile({displayName: username, photoURL: avatarUrl})\n      .then(() => {\n        setUserData(auth.currentUser);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [changeEmail]);\n\n  // Changing password\n  useEffect(() => {\n    if (changePassword === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n    \n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      console.log(\"User successfully reauthenticated.\");\n      auth.currentUser.updatePassword(newPassword).then(function() {\n        setStatus(\"success\");\n      }).catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [changePassword])\n\n  // Delete account\n  useEffect(() => {\n    if (deleteAccount === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n\n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      auth.currentUser.delete().then(() => {\n        setStatus(\"success\");\n      }).catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      })\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    });\n\n  }, [deleteAccount])\n\n  const handleLogin = () => setLogin(prev => prev + 1);\n  const handleSignup = () => setSignup(prev => prev + 1);\n  const handleLogout = () => setLogout(prev => prev + 1);\n  const handleChangeEmail = () => setChangeEmail(prev => prev + 1);\n  const handleChangePassword = () => setChangePassword(prev => prev + 1);\n  const handleDeleteAccount = () => setDeleteAccount(prev => prev + 1);\n  const resetStatus = () => setStatus('pending');\n\n  return { \n    userData, \n    error, \n    status,\n    handleLogin, \n    handleSignup, \n    handleLogout,\n    handleChangeEmail,\n    handleChangePassword,\n    handleDeleteAccount,\n    resetStatus\n  };\n}\n\nexport default useAuth;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst Login = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n  const [inputs, setInputs] = useState({ email: \"\", password: \"\" });\n\n  const { status, error, handleLogin} = useAuth(null, inputs.email, inputs.password);\n  const { user } = useContext(firebaseAuth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleLogin();\n  }\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/user\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/user-not-found\":\n        setErrorMessage(\"メールアドレスとパスワードが一致しません。\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"メールアドレスとパスワードが一致しません。\");\n        return;\n      case \"auth/invalid-email\":\n        setErrorMessage(\"有効なメールアドレスを入力してください。\");\n        return;\n      default:\n        setErrorMessage(\"何かがうまくいかなかった。もう一度やり直してください。\");\n        return;\n    }\n\n  }, [error]);\n\n  return (\n    <div className=\"login\" style={{textAlign: 'center'}}>\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', marginRight: 200}}>\n        <PageHeading \n          title=\"ログイン\"\n        />\n      </div>\n      <form style={{display: 'inline-block'}} onSubmit={handleSubmit}>\n        <TextInput\n          labelText=\"メールアドレス\"\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n          id=\"email\"\n          name=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          placeholder=\"メールアドレス\"\n        />\n        <TextInput \n          labelText=\"パスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button \n          className=\"btn btn-primary\"\n          style={{backgroundColor: '#526CC6', borderColor: 'unset', borderRadius: 20, borderWidth: 0}}\n          disabled={inputs.password === \"\" || inputs.email === \"\"}        \n        >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"ログイン\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;","/**\n * Displays a spinner for 1 second when logging out.\n */\n\nimport React, { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport useAuth from '../../hooks/useAuth';\n\nimport Spinner from '../Spinner';\n\nconst Logout = () => {\n  const { user } = useContext(firebaseAuth);\n  const { handleLogout } = useAuth()\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!user) return;\n    handleLogout();\n    setTimeout(() => history.push(\"/\"), 1000);\n  }, [user]);\n\n  return (\n    <div className=\"container center\">\n      <p><Spinner /> Logging out . . .</p>\n    </div>\n  );\n}\n\nexport default Logout;","/**\n * Displays the update password page.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from '../Breadcrumb';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst ChangePassword = ({\n  handleChange,\n  inputs,\n  error,\n  onSubmit,\n  status\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n  \n  return (\n    <>\n      <PageHeading\n        title=\"パスワードを変更してください\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"新しいパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"new-password\"\n          name=\"newPassword\"\n          value={inputs.newPassword}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-primary\"　style={{color: 'white', background: '#526CC6', border: 'unset'}}>\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"パスワードを変更する\"}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default ChangePassword;","/**\n * Displays the delete account page.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from '../Breadcrumb';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst DeleteAccount = ({\n  handleChange,\n  inputs,\n  error,\n  onSubmit\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    switch (error) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n  \n  return (\n    <>\n      <PageHeading\n        title=\"アカウントを削除する\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-warning\">アカウントを完全に削除する</button>\n      </form>\n    </>\n  );\n}\n\nexport default DeleteAccount;","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faEnvelope, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst UpdateProfile = ({\n  handleChange,\n  inputs,\n  onSubmit,\n  error,\n  status,\n  onBack\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n\n  useEffect(() => {\n    return () => onBack();\n  }, [])\n\n  return (\n    <>\n      <PageHeading\n        title=\"メールを更新する\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"ユーザー名\"\n          icon={<FontAwesomeIcon icon={faUser} />}\n          id=\"username\"\n          name=\"username\"\n          value={inputs.username}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"メルアドレス\"\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n          id=\"email\"\n          name=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          placeholder=\"メルアドレス\"\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-primary\" \n        style={{color: 'white', background: '#526CC6', border: 'unset'}}\n        disabled={inputs.password === \"\" || inputs.email === \"\" || inputs.username === \"\"}   >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"メールを更新する\"}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default UpdateProfile;","/**\n * Shows the My Account page and sets up the useAuth\n * hook to be used on ChangePassword, UpdateEmail and\n * DeleteAccount components.\n */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport ChangePassword from './ChangePassword';\nimport DeleteAccount from './DeleteAccount';\nimport PageHeading from '../PageHeading';\nimport UpdateProfile from './UpdateProfile';\n\nconst MyAccount = () => {\n  const { user } = useContext(firebaseAuth);\n  const [inputs, setInputs] = useState({ \n    email: user.email || \"\",\n    password: \"\", \n    newPassword: \"\", \n    username: user.displayName || \"\", \n    avatarUrl: user.photoUrl || \"\"});\n\n  const { \n    loading, \n    error, \n    status, \n    handleChangeEmail, \n    handleChangePassword, \n    handleDeleteAccount,\n    resetStatus\n  } = useAuth(inputs.username, inputs.email, inputs.password, inputs.newPassword);\n\n  const history = useHistory();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"my-account\">\n      <div className=\"my-account-inner\" style={{width: '50%', margin: '0 auto'}}>\n        <Switch>\n          <Route exact path=\"/my-account\">\n            <div>\n              <PageHeading\n                title=\"アカウント\"\n              />\n              <div className=\"account-data\">\n                  <Link to=\"/my-account/change-email\" className=\"btn btn-tertiary\">\n                    <span>メールを更新する</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                  </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/my-account/change-password\" className=\"btn btn-tertiary\">\n                  <span>パスワードを変更してください</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/my-account/delete-account\" className=\"btn btn-warning\">\n                  <FontAwesomeIcon icon={faTrash} />&nbsp;&nbsp;&nbsp;アカウントを削除する\n                </Link>\n              </div>\n            </div>\n          </Route>\n\n          <Route exact path=\"/my-account/change-email\">\n            <UpdateProfile \n              handleChange={handleChange}\n              inputs={inputs}\n              loading={loading}\n              onSubmit={handleChangeEmail}\n              error={error}\n              status={status}\n              onBack={resetStatus}\n            />\n          </Route>\n\n          <Route exact path=\"/my-account/change-password\">\n            <ChangePassword \n              handleChange={handleChange}\n              loading={loading}\n              inputs={inputs}\n              onSubmit={handleChangePassword}\n              error={error}\n              status={status}\n            />\n          </Route>\n          \n          <Route exact path=\"/my-account/delete-account\">\n            <DeleteAccount \n              handleChange={handleChange}\n              inputs={inputs}\n              onSubmit={handleDeleteAccount}\n              error={error}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default MyAccount;","import React, {useEffect, useState} from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navlinks = ({ closeMenu, userName }) => {\n  const [firstChar, setFirstChar] = useState('');\n  const [bgColor, setBgColor] = useState('');\n\n  const getFirstChar = () => {\n    if (userName) {\n      setFirstChar(userName.charAt(0).toUpperCase());\n    }\n  }\n\n  useEffect(() => {\n    setBgColor('#' + getRandomColor());\n    console.log(bgColor);\n    getFirstChar();\n  },[userName]);\n\n  const getRandomColor = () => {\n    return Math.floor(Math.random()*16777215).toString(16)\n  }\n\n\n  \n  return (\n    <div style={{position: 'relative', display: 'flex'}}>\n      <div className=\"avatar-btn\" style={{backgroundColor: `${bgColor}`}}>\n        <div className=\"name\">{firstChar}</div>\n      </div>\n      <div className=\"avt-links\">\n        <ul>\n        <li>\n          <NavLink\n            to=\"/my-account\"\n            className=\"link\"\n            onClick={() => closeMenu()}\n          >\n            プロフィール\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/log-out\" className=\"link\" onClick={() => closeMenu()}>\n            ログアウト\n          </NavLink>\n        </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Navlinks;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReply, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\n\nimport Navlinks from './Navlinks';\nimport TextInput from './TextInput';\n\nconst Nav = ({\n  onClick,\n  isMenuOpen,\n  mobile=false,\n  onSearch,\n}) => {\n  const [navClasses, setNavClasses] = useState(\"navbar\");\n  const btnClasses= \"btn btn-hamburger small-screen-only \" + (isMenuOpen && \"open\"); \n  let location = useLocation();\n  const { user } = useContext(firebaseAuth);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n\n    if (mobile) {\n      setNavClasses(\"navbar\");\n      return;\n    }\n\n    if (location.pathname !== \"/\") {\n      setNavClasses(\"navbar light\");\n      return;\n    }\n\n    setNavClasses(\"navbar\");\n  }, [location, mobile])\n\n  if (!user) {\n    return null\n  }\n\n  return (\n    <header className={navClasses} style={{background: '#526CC6'}}>\n      <div className=\"navbar-inner\">\n        <div className=\"logo\">\n        <Link to=\"/\" className=\"logo\" >\n        ホーム\n        </Link>\n        <div style={{height: 30, width: 2, backgroundColor: 'black', marginLeft: 20, marginRight: 20}}></div>\n        <Link to=\"/app\" className=\"logo\">\n          私のフラッシュカード\n        </Link>\n          </div>\n          <input\n          style={{outline: 'unset', height: 30, borderRadius: 15, paddingLeft: 10, borderColor: 'white'}}\n          id=\"search\"\n          name=\"search\"\n          placeholder='Search'\n          value={searchText}\n          onChange={(e) => {\n            setSearchText(e.target.value)\n            onSearch(e.target.value)\n          }}\n        />\n          \n        <div className=\"right-nav\">\n          <nav className=\"large-screen-only\">\n            <Navlinks closeMenu={() => null } userName={user.displayName}/>\n          </nav>\n          <button \n            className={btnClasses}\n            name=\"toggle-menu\"\n            onClick={onClick}\n          >\n            <span></span>\n            <span></span>\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Nav;","import React, { useContext, useState } from 'react';\nimport { Link, useHistory, Switch, Route } from 'react-router-dom';\n\nimport { firebaseAuth } from '../../provider/AuthProvider';\n\nconst AdminUser = ({\n  allDecks,\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n  console.log(user);\n  \n  return (\n    <Switch>\n      <Route path=\"/user\">\n        <>\n          <header className=\"hero\">\n            <section>\n              <div className=\"hero-content\">\n                <div className=\"buttons\">\n                  <>\n                    <Link\n                      className=\"btn btn-cta\"\n                      to=\"/app\"\n                    >\n                      ダッシュボード\n                    </Link>\n                  </>\n                </div>\n              </div>\n            </section>\n          </header>\n\n          <section className=\"public-decks\">\n            \n          </section>\n        </>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default AdminUser;","/**\n * Main wrapper for the app, containing the shuffle functionality\n * used by Deck and Dashboard components.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport { firebaseAuth } from './provider/AuthProvider';\nimport useOnDecksSnapshot from './hooks/useOnDecksSnapshot';\nimport useOnSavedDecksSnapshot from './hooks/useOnSavedDecksSnapshot';\nimport useOnAllDecksSnapshot from './hooks/useOnAllDecksSnapshot';\n\nimport Deck from './components/decks-and-cards/Deck';\nimport Dashboard from './components/Dashboard';\nimport Home from './components/Home';\nimport Login from './components/account-management/Login';\nimport Logout from './components/account-management/Logout';\nimport MyAccount from './components/account-management/MyAccount';\nimport Nav from './components/Nav';\nimport Signup from './components/account-management/Signup';\nimport MobileMenu from './components/MobileMenu';\nimport AdminUser from './components/admin/AdminUser';\n\nconst App = () => {\n  const [selectedDecks, setSelectedDecks] = useState([]);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const history = useHistory();\n  const { user } = useContext(firebaseAuth);\n  const { decks } = useOnDecksSnapshot(user);\n  const { saveDecks } = useOnSavedDecksSnapshot(user);\n  const { allDecks } = useOnAllDecksSnapshot();\n\n  const [decksData, setDecksData] = useState([]);\n  const [saveDecksData, setSaveDecksData] = useState([]);\n  const [allDecksData, setAllDecksData] = useState([]);\n\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    if (!isSearching) {\n      setDecksData(decks)\n    }\n  }, [decks])\n\n  useEffect(() => {\n    if (!isSearching) {\n      setSaveDecksData(saveDecks)\n    }\n  }, [saveDecks])\n\n  useEffect(() => {\n    if (!isSearching) {\n      setAllDecksData(allDecks)\n    }\n  }, [allDecks])\n\n  useEffect(() => {\n    if (!searchText || searchText.length == 0) {\n      setIsSearching(false)\n      setDecksData(decks)\n      setSaveDecksData(saveDecks)\n      setAllDecksData(allDecks)\n    } else {\n      setIsSearching(true)\n      setDecksData(decks.filter((element) => {return element.title.includes(searchText)}));\n      setSaveDecksData(saveDecks.filter((element) => {return element.title.includes(searchText)}));\n      setAllDecksData(allDecks.filter((element) => {return element.title.includes(searchText)}));\n    }\n  }, [searchText])\n\n  useEffect(() => {\n    if (user) return;\n    setSelectedDecks([]);\n  }, [user]);\n\n  const onSearch = (text) => {\n    setSearchText(text);\n  }\n\n  const handleButtons = (event) => {\n    switch (event.target.name) {\n      case \"exit\":\n        if (user) {\n          history.push(\"/app\");\n          return;\n        }\n        history.push(\"/\");\n        return;\n  \n      case \"toggle-menu\":\n        setIsMenuOpen(prev => !prev);\n        return;\n      default:\n        return;\n    }\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"app\">\n      <Nav \n        onClick={handleButtons}\n        isMenuOpen={isMenuOpen}\n        onSearch={onSearch}\n      />\n      <Switch>\n        <Route path=\"/log-in\">\n          <Login />\n        </Route>\n        <Route path=\"/log-out\">\n          <main>\n            <Logout />\n          </main>\n        </Route>\n        <Route path=\"/my-account\">\n          <main>\n            <MyAccount />\n          </main>\n        </Route>\n        <Route path=\"/user\">\n          <main>\n            <AdminUser \n              allDecks={allDecksData}\n            />\n          </main>\n        </Route>\n        <Route path=\"/set\">\n          <main>\n            <Home \n              allDecks={allDecksData} \n              setSelectedDecks={setSelectedDecks} \n              selectedDecks={selectedDecks}\n              />\n          </main>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport AuthProvider from './provider/AuthProvider';\n\nimport './styles/normalize.css';\nimport './styles/styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <AuthProvider>\n        \n        <App />\n      </AuthProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}