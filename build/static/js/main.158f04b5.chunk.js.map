{"version":3,"sources":["firebase/firebaseIndex.js","provider/AuthProvider.js","hooks/useOnDecksSnapshot.js","hooks/useOnSavedDecksSnapshot.js","hooks/useOnAllDecksSnapshot.js","components/Carousel.js","components/Header.js","components/decks-and-cards/CardContent.js","components/decks-and-cards/FlippableCard.js","components/Spinner.js","components/decks-and-cards/Deck.js","firebase/dbMethods.js","components/TextInput.js","components/PageHeading.js","components/decks-and-cards/CardEditor.js","components/decks-and-cards/CardCreator.js","components/Accordion.js","components/decks-and-cards/DeckCreator.js","components/decks-and-cards/DeckEditor.js","components/decks-and-cards/SelectableDeck.js","components/decks-and-cards/DeckList.js","components/SavedDecks.js","components/CreatedDecks.js","components/decks-and-cards/Test.js","components/Dashboard.js","components/Home.js","hooks/useAuth.js","components/account-management/Login.js","components/account-management/Logout.js","components/account-management/ChangePassword.js","components/account-management/DeleteAccount.js","components/account-management/UpdateProfile.js","components/account-management/MyAccount.js","components/Navlinks.js","components/Nav.js","components/account-management/Signup.js","components/MobileMenu.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","db","firestore","fb","firebaseAuth","React","createContext","AuthProvider","props","useState","user","setUser","useEffect","unsub","onAuthStateChanged","Provider","value","children","useOnDecksSnapshot","decks","setDecks","unsubscribe","collection","where","uid","onSnapshot","snapshot","arr","forEach","deck","push","data","error","console","log","message","useOnSavedDecksSnapshot","saveDecks","doc","save_decks","localStorage","setItem","JSON","stringify","useOnAllDecksSnapshot","allDecks","Carousel","leftButtonText","rightButtonText","animTime","items","previousCallback","nextCallback","showButtons","index","setIndex","carouselItems","setCarouselItems","canSlide","setCanSlide","carousel","useRef","modifiedItems","map","ele","className","key","handleClick","event","target","name","length","idx","undefined","setTimeout","ref","style","marginLeft","width","transition","onClick","disabled","Header","title","CardContent","text","FlippableCard","frontTitle","backTitle","frontText","backText","isFlipped","setIsFlipped","header","icon","faTimes","backHeader","cloneElement","footer","prev","faReply","size","Spinner","faSpinner","Deck","cards","setCards","setTitle","hashCards","setHashCards","isCardFlipped","setIsCardFlipped","canView","isLoaded","setIsLoaded","hash","useParams","shuffle","setShuffle","cardShuffle","setCardShuffle","history","useHistory","get","then","catch","item","_cards","front","back","id","slideCallback","display","flexDirection","justifyContent","alignItems","backgroundColor","position","top","background","height","textAlign","zIndex","color","lineHeight","verticalAlign","borderRadius","marginTop","marginBottom","array","randomIndex","currentIndex","Math","floor","random","shuffleCard","faAngleLeft","faAngleRight","window","alert","border","fontSize","paddingBottom","faPlus","marginRight","dbMethods","description","document","newDeck","numCards","owner","set","err","deckId","delete","update","FieldValue","arrayUnion","arrayRemove","updatedDeck","TextInput","labelText","type","placeholder","onChange","autocomplete","isHidden","setIsHidden","faLock","htmlFor","outline","autoComplete","preventDefault","faEye","faEyeSlash","PageHeading","titleElement","styles","CardEditor","card","onSubmit","onUpdate","onDelete","useContext","setFront","setBack","handleInput","faTrash","CardCreator","onCreateCard","isOpen","setIsOpen","faMinus","Accordion","listCards","onCards","setCard","cardEditorElements","setCardEditorElements","onDeleteCard","splice","updateElements","onUpdateCard","elements","classes","Fragment","faAngleUp","faAngleDown","newCard","DeckCreator","setDescription","updateSuccess","setUpdateSuccess","setListCards","createDeck","faPaperclip","faBook","DeckEditor","deckToEdit","setDeckToEdit","localDeck","parse","getItem","updateDeck","SelectableDeck","toggleDeck","setSelectedDecks","mine","saved","setSaved","savedDecksRaw","isSaved","savedDecks","filterArray","filter","stopPropagation","faEdit","faSave","DeckList","selectedDecks","deckList","setDeckList","private","SavedDecks","path","margin","paddingRight","CreatedDecks","paddingTop","paddingLeft","Test","correctAnswer","setCorrectAnswer","selectedAnswer","setSelectedAnswer","result","setResult","_listCorrectAnswer","cardIndex","question","answers","includes","Array","fill","padding","element","newAnswer","slice","totalResult","Dashboard","handleButtons","Home","deckToEdit1","to","useAuth","username","email","password","newPassword","avatarUrl","userData","setUserData","setError","status","setStatus","login","setLogin","signup","setSignup","logout","setLogout","changeEmail","setChangeEmail","changePassword","setChangePassword","deleteAccount","setDeleteAccount","signInWithEmailAndPassword","userCredential","_user","createUserWithEmailAndPassword","updateProfile","displayName","signOut","removeItem","code","credential","EmailAuthProvider","currentUser","reauthenticateWithCredential","updateEmail","photoURL","updatePassword","handleLogin","handleSignup","handleLogout","handleChangeEmail","handleChangePassword","handleDeleteAccount","resetStatus","Login","errorMessage","setErrorMessage","inputs","setInputs","handleChange","e","faEnvelope","borderColor","borderWidth","Logout","ChangePassword","DeleteAccount","UpdateProfile","onBack","faUser","MyAccount","photoUrl","loading","exact","Navlinks","closeMenu","userName","firstChar","setFirstChar","bgColor","setBgColor","getRandomColor","charAt","toUpperCase","toString","Nav","isMenuOpen","mobile","navClasses","setNavClasses","btnClasses","location","useLocation","pathname","Signup","MobileMenu","App","setIsMenuOpen","ReactDOM","render","StrictMode","getElementById"],"mappings":"6NASIA,G,kBAAiB,CACnBC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjBC,IAASC,cAAcV,GAChB,IAAMW,EAAKF,IAASE,OACdC,EAAGH,IAASI,YACZC,EAAGL,I,OChBHM,EAAeC,IAAMC,gBAwBnBC,EAtBM,SAACC,GACpB,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,qBAAU,WACR,IAAMC,EAAQb,EAAKc,oBAAmB,SAACJ,GAC9BC,EAAPD,GAA+B,SAGjC,OAAO,kBAAMG,QAIb,cAACT,EAAaW,SAAd,CACEC,MAAO,CACLN,QAFJ,SAKGF,EAAMS,Y,sBCCEC,EAxBY,SAACR,GAC1B,IAAMT,EAAKH,IAASI,YACpB,EAA0BO,mBAAS,IAAnC,mBAAOU,EAAP,KAAcC,EAAd,KAmBA,OAhBAR,qBAAU,WACR,GAAKF,EAAL,CAKA,IACIW,EADMpB,EAAGqB,WAAW,SACFC,MAAM,QAAS,KAAMb,EAAKc,KAAKC,YAAW,SAACC,GAC/D,IAAIC,EAAM,GACVD,EAASE,SAAQ,SAAAC,GAAI,OAAIF,EAAIG,KAAKD,EAAKE,WACvCX,EAASO,MACR,SAAAK,GAAK,OAAIC,QAAQC,IAAI,UAAWF,EAAMG,YAEzC,OAAO,kBAAMd,KAXXD,EAAS,MAYV,CAACV,IAEG,CAAES,UCDMiB,EApBe,SAAC1B,GAC7B,IAAMT,EAAKH,IAASI,YACpB,EAA8BO,mBAAS,IAAvC,mBAAO4B,EAAP,KAAkBjB,EAAlB,KAeA,OAdAR,qBAAU,WACR,GAAKF,EAAL,CAKA,IAAIW,EAAcpB,EAAGqB,WAAW,SAASgB,IAAI5B,EAAKc,KAAKC,YAAW,SAACC,GACjE,IAAIC,EAAM,GACVD,EAASK,OAAOQ,WAAWX,SAAQ,SAAAC,GAAI,OAAIF,EAAIG,KAAKD,MACpDT,EAASO,GACTa,aAAaC,QAAQ,aAAcC,KAAKC,UAAUhB,OACjD,SAAAK,GAAK,OAAIC,QAAQC,IAAI,UAAWF,EAAMG,YACzC,OAAO,kBAAMd,KAVXD,EAAS,MAWV,CAACV,IACG,CAAE2B,cCCEO,EAlBe,WAC5B,IAAM3C,EAAKH,IAASI,YACpB,EAA6BO,mBAAS,IAAtC,mBAAOoC,EAAP,KAAiBzB,EAAjB,KAaA,OAXAR,qBAAU,WACR,IACIS,EADMpB,EAAGqB,WAAW,SACFG,YAAW,SAACC,GAChC,IAAIC,EAAM,GACVD,EAASE,SAAQ,SAAAC,GAAI,OAAIF,EAAIG,KAAKD,EAAKE,WACvCX,EAASO,MACR,SAAAK,GAAK,OAAIC,QAAQC,IAAI,UAAWF,EAAMG,YAEzC,OAAO,kBAAMd,OACZ,IAEI,CAAEwB,a,cC6EIC,EArFE,SAAC,GAQX,IAAD,IAPJC,sBAOI,MAPW,IAOX,MANJC,uBAMI,MANY,IAMZ,MALJC,gBAKI,MALK,GAKL,EAJJC,EAII,EAJJA,MACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,aAEI,IADJC,mBACI,SACJ,EAA0B5C,mBAAS,GAAnC,mBAAO6C,EAAP,KAAcC,EAAd,KACA,EAA0C9C,mBAAS,IAAnD,mBAAO+C,EAAP,KAAsBC,EAAtB,KACA,EAAgChD,oBAAS,GAAzC,mBAAOiD,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,iBAAO,MAKxBjD,qBAAU,WACR,IAAIkD,EAAgBZ,EAAMa,KAAI,SAACC,GAC7B,OACE,qBACEC,UAAU,iBADZ,SAIGD,GAFIA,EAAIE,QAOfT,EAAiBK,KAChB,CAACZ,IAEJ,IAAMiB,EAAc,SAACC,GACnB,GAAKV,EAAL,CACA,GAA0B,UAAtBU,EAAMC,OAAOC,KAAkB,CACjC,GAAIhB,GAASE,EAAce,OAAS,EAAK,OACzChB,GAAS,SAAAiB,GAAG,OAAIA,EAAM,UACDC,IAAjBrB,GACFA,EAAaE,EAAM,QAEhB,GAA0B,SAAtBc,EAAMC,OAAOC,KAAiB,CACvC,GAAa,GAAThB,EAAc,OAClBC,GAAS,SAAAiB,GAAG,OAAIA,EAAM,UACGC,IAArBtB,GACFA,EAAiBG,EAAM,GAG3BK,GAAY,GACZe,YAAW,kBAAMf,GAAY,KAAkB,IAAXV,EAlDpB,MAqDlB,OACE,sBAAKgB,UAAU,WAAf,UACE,qBACEU,IAAKf,EACLK,UAAU,kBACVW,MAAO,CACLC,WAAY,gBAAkBvB,EAAQ,IACtCwB,MAA+B,IAAvBtB,EAAce,OAAgB,IACtCQ,WAAY,UAAY9B,EAAW,KANvC,SASGO,IAEH,qBAAKS,UAAU,WACdZ,GACC,qCACGC,EAAQ,GAAK,wBACZW,UAAU,oBACVe,QAAS,SAACZ,GAAD,OAAWD,EAAYC,IAChCE,KAAK,OACLW,UAAWvB,EAJC,SAKZX,IACDO,EAAQE,EAAce,OAAS,GAAK,wBACnCN,UAAU,qBACVe,QAAS,SAACZ,GAAD,OAAWD,EAAYC,IAChCE,KAAK,QACLW,UAAWvB,EAJwB,SAKnCV,WClEGkC,EAhBA,SAAC,GAGT,IAFLC,EAEI,EAFJA,MACAlE,EACI,EADJA,SAEA,OACE,yBAAQgD,UAAU,cAAlB,UACE,4BACGkB,IAEH,8BACGlE,QCEMmE,EAZK,SAAC,GAEd,IADLC,EACI,EADJA,KAEA,OACE,mCACE,mBAAGpB,UAAU,UAAb,SACGoB,OCoDMC,EArDO,SAAC,GAQhB,IAPLN,EAOI,EAPJA,QACAO,EAMI,EANJA,WACAC,EAKI,EALJA,UACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,UACAC,EACI,EADJA,aAEMC,EACJ,cAAC,EAAD,CAAQV,MAAOI,EAAf,SACE,yBACEtB,UAAU,qBACVK,KAAK,OACLU,QAASA,EAHX,UAKE,cAAC,IAAD,CAAiBc,KAAMC,MALzB,iBAUEC,EAAa3F,IAAM4F,aAAaJ,EAAQ,CAAEV,MAAOK,IAEjDU,EACJ,iCACE,wBACEjC,UAAU,OACVK,KAAK,SACLU,QAAU,kBAAMY,GAAa,SAAAO,GAAI,OAAKA,MAHxC,SAKE,cAAC,IAAD,CAAiBL,KAAMM,IAASC,KAAK,KAAKpC,UAAU,aAK1D,OACE,qBAAKA,UAAW0B,EAAY,oBAAsB,YAAlD,SACE,sBAAK1B,UAAU,mBAAf,UACE,sBAAKA,UAAU,2BAAf,UACG4B,EACC,cAAC,EAAD,CAAaR,KAAMI,IACpBS,KAEH,sBAAKjC,UAAU,0BAAf,UACG+B,EACC,cAAC,EAAD,CAAaX,KAAMK,IACpBQ,WC3CII,EANC,SAAC,GAEV,IAAD,IADJD,YACI,MADC,KACD,EACJ,OAAO,cAAC,IAAD,CAAiBP,KAAMS,IAAWF,KAAMA,EAAMpC,UAAU,aCkNlDuC,EA3MF,SAAC,GAEP,IADLxB,EACI,EADJA,QAEA,EAA0BvE,mBAAS,IAAnC,mBAAOgG,EAAP,KAAcC,EAAd,KACA,EAA0BjG,mBAAS,IAAnC,mBAAO0E,EAAP,KAAcwB,EAAd,KACA,EAAkClG,mBAAS,MAA3C,mBAAOmG,EAAP,KAAkBC,EAAlB,KACA,EAA0CpG,oBAAS,GAAnD,mBAAOqG,EAAP,KAAsBC,EAAtB,KACA,EAA8BtG,oBAAS,GAAvC,mBAAOuG,EAAP,KACA,GADA,KACgCvG,oBAAS,IAAzC,mBAAOwG,EAAP,KAAiBC,EAAjB,KACQC,EAASC,cAATD,KACR,EAA8B1G,mBAAS,GAAvC,mBAAO4G,EAAP,KAAgBC,EAAhB,KACA,EAAsC7G,mBAAS,IAA/C,mBAAO8G,EAAP,KAAoBC,EAApB,KACMC,EAAUC,cA6EhB,GA3EA9G,qBAAU,WAMR,GALAsG,GAAY,GACZL,EAAa,MACbH,EAAS,MAETzE,QAAQC,IAAIiF,QACC1C,IAAT0C,EAAJ,CAEA,IAAMlH,EAAKH,IAASI,YAEpBD,EAAGqB,WAAW,SAASgB,IAAI6E,GAAMQ,MAC9BC,MAAK,SAAAlG,GACJwF,GAAY,MAEbW,OAAM,SAAA7F,GACLkF,GAAY,GACZjF,QAAQC,IAAI,UAAWF,EAAMG,YAGvBlC,EAAGqB,WAAW,SAASgB,IAAI6E,GACjCQ,MACDC,MAAK,SAAAlG,GAAa,IAAD,EACZC,EAAM,GACV,UAAAD,EAASK,OAAO0E,aAAhB,SAAuB7E,SAAQ,SAAAkG,GAAI,OAAInG,EAAIG,KAAKgG,MAChDjB,EAAalF,GACbgF,EAASjF,EAASK,OAAOoD,UAE1B0C,OAAM,SAAA7F,GAAK,OAAIC,QAAQC,IAAI,UAAWF,EAAMG,eAC9C,CAACgF,IAEJvG,qBAAU,WACRsG,GAAY,GACZ,IAAIa,EAAS,IAGXA,EADe,MAAbnB,EACOA,EAEA,IAGArC,OAAS,IAClBmC,EAASqB,EAAOhE,KAAI,SAACC,GACnB,OACE,cAAC,EAAD,CAEEuB,WAAW,QACXC,UAAU,OACVC,UAAWzB,EAAIgE,MACftC,SAAU1B,EAAIiE,KACdjD,QAASA,EACTW,UAAWmB,EACXlB,aAAcmB,GAPT/C,EAAIkE,QAWfV,EAAeO,EAAOhE,KAAI,SAACC,GACzB,OACE,cAAC,EAAD,CAEEuB,WAAW,QACXC,UAAU,OACVC,UAAWzB,EAAIgE,MACftC,SAAU1B,EAAIiE,KACdjD,QAASA,EACTW,UAAWmB,EACXlB,aAAcmB,GAPT/C,EAAIkE,QAWfhB,GAAY,MAGb,CAACJ,EAAe9B,EAAS4B,KAGvBK,EAAU,OACb,+BACE,qBAAKhD,UAAU,mBAAf,SACE,cAAC,EAAD,QAKN,IAAKwC,EAAO,OACV,qBAAKxC,UAAU,mBAAf,SACE,iEAIJ,IAAK+C,GAA4B,IAAjBP,EAAMlC,OAAc,OAClC,qBAAKN,UAAU,mBAAf,SACE,sJAIJ,IAAMkE,EAAgB,WACpBpB,GAAiB,IAkBnB,OACE,sBAAKnC,MAAO,CAAEwD,QAAS,QAAvB,UACE,sBAAKxD,MAAO,CAAEE,MAAO,IAAKsD,QAAS,OAAQC,cAAe,SAAUC,eAAgB,WAAYC,WAAY,SAAUC,gBAAiB,WAAvI,UACE,qBAAK5D,MAAO,CACV6D,SAAU,WACVC,IAAK,KAFP,SAIGvD,IAEH,qBAAKP,MAAO,CACV+D,WAAuB,GAAXtB,EAAe,QAAU,QACrCuB,OAAQ,GACR9D,MAAO,IACP+D,UAAW,SACXC,OAAQ,EACRC,MAAkB,GAAX1B,EAAe,QAAU,QAChC2B,WAAY,EACZC,cAAe,SACfC,aAAc,IACblE,QAAS,SAACZ,GACXkD,EAAW,IAXb,4CAaA,qBAAK1C,MAAO,CACV+D,WAAuB,GAAXtB,EAAe,QAAU,QACrCuB,OAAQ,GACR9D,MAAO,IACP+D,UAAW,SACXC,OAAQ,EACRC,MAAkB,GAAX1B,EAAe,QAAU,QAChC8B,UAAW,GACXC,aAAc,IACdJ,WAAY,EACZC,cAAe,SACfC,aAAc,IACblE,QAAS,SAACZ,GACXoD,EAlDY,SAAC6B,GAGnB,IAFA,IAAiCC,EAA7BC,EAAeF,EAAM9E,OAEF,GAAhBgF,GAAmB,CAExBD,EAAcE,KAAKC,MAAMD,KAAKE,SAAWH,GACzCA,IAHwB,MAKoB,CAC1CF,EAAMC,GAAcD,EAAME,IAD3BF,EAAME,GALiB,KAKFF,EAAMC,GALJ,KAS1B,OAAOD,EAsCcM,CAAYpC,IAC3BD,GAAW,SAAAnB,GAAI,OAAIA,EAAO,MAd5B,yCAiBF,cAAC,EAAD,CACEjD,MAAkB,GAAXmE,EAAeE,EAAcd,EACpC1D,eAAgB,cAAC,IAAD,CAAiB+C,KAAM8D,MACvC5G,gBAAiB,cAAC,IAAD,CAAiB8C,KAAM+D,MACxC5G,SAAU,GACVE,iBAAkBgF,EAClB/E,aAAc+E,EACd9E,aAAa,IAEf,sBAAKuB,MAAO,CAAEE,MAAO,IAAKsD,QAAS,OAAQC,cAAe,SAAUC,eAAgB,SAAUC,WAAY,SAAUC,gBAAiB,WAArI,UACE,wBACExD,QAAS,WACHyB,EAAMlC,QAAU,EAClBkD,EAAQ3F,KAAK,aAAaqF,GAE1B2C,OAAOC,MAAM,0LAGjBnF,MAAO,CAAEmE,MAAO,UAAWJ,WAAY,cAAeP,QAAS,OAAQ4B,OAAQ,QAASC,SAAU,GAAIC,cAAe,IARvH,SAUE,qCAAE,cAAC,IAAD,CAAiBpE,KAAMqE,IAAQvF,MAAO,CAAEwF,YAAa,KAAvD,qBAEF,wBACEpF,QAAS,WACP8E,OAAOC,MAAM,qDAEfnF,MAAO,CAAEmE,MAAO,UAAWJ,WAAY,cAAeP,QAAS,OAAQ4B,OAAQ,QAASC,SAAU,IAJpG,SAME,qCAAE,cAAC,IAAD,CAAiBnE,KAAMqE,IAAQvF,MAAO,CAAEwF,YAAa,KAAvD,4BCvMGC,EAEC,SAAC3J,EAAMyE,EAAOmF,EAAa7D,GACrC,GAAK/F,EAAL,CAKA,IAAM6J,EAAWtK,EAAGqB,WAAW,SAASgB,MAElCkI,EAAU,CACdtC,GAAIqC,EAASrC,GACbuC,SAAUhE,EAAMlC,OAChBY,QACAmF,cACAI,MAAOhK,EAAKc,IACZiF,MAAOA,GAGT8D,EAASI,IAAIH,GACZ5C,KAAK3F,QAAQC,IAAI,sBACjB2F,OAAM,SAAA+C,GACL3I,QAAQD,MAAM,wBAAyB4I,EAAIzI,iBAlB3CF,QAAQC,IAAI,sBAJLmI,EA0BC,SAAC3J,EAAMmK,GACZnK,EAKLT,EAAGqB,WAAW,SAASgB,IAAIuI,GAAQC,SAClClD,KAAK3F,QAAQC,IAAI,+BACjB2F,OAAM,SAAA+C,GACL3I,QAAQD,MAAM,wBAAyB4I,EAAIzI,YAP3CF,QAAQC,IAAI,sBA5BLmI,EAuCD,SAAC3J,EAAMmB,GACf,GAAKnB,EAIL,OAAOT,EAAGqB,WAAW,SAASgB,IAAI5B,EAAKc,KAAKuJ,OAAO,CACjDxI,WAAYzC,IAASI,UAAU8K,WAAWC,WAAWpJ,KAEtD+F,MAAK,WACJ3F,QAAQC,IAAI,yBAA0BL,EAAKqG,OAE5CL,OAAM,SAAA+C,GACL3I,QAAQD,MAAM,4BAA6B4I,EAAIzI,YAV/CF,QAAQC,IAAI,sBAzCLmI,EAwDC,SAAC3J,EAAMmB,GACjB,GAAKnB,EAIL,OAAOT,EAAGqB,WAAW,SAASgB,IAAI5B,EAAKc,KAAKuJ,OAAO,CACjDxI,WAAYzC,IAASI,UAAU8K,WAAWE,YAAY,CACpDhD,GAAIrG,EAAKqG,GACTuC,SAAU5I,EAAK4I,SACfC,MAAO7I,EAAK6I,MACZvF,MAAOtD,EAAKsD,MACZmF,YAAazI,EAAKyI,YAClB7D,MAAO5E,EAAK4E,UAGfmB,MAAK,WACJ3F,QAAQC,IAAI,yBAA0BL,EAAKqG,OAE5CL,OAAM,SAAA+C,GACL3I,QAAQD,MAAM,4BAA6B4I,EAAIzI,YAjB/CF,QAAQC,IAAI,sBA1DLmI,EAgFC,SAAC3J,EAAMmK,EAAQ1F,EAAOmF,EAAa7D,GAC7C,GAAK/F,EAAL,CAKA,IAAMyK,EAAc,CAClBhG,QACAmF,cACA7D,QACAgE,SAAUhE,EAAMlC,QAGlB,OAAOtE,EAAGqB,WAAW,SAASgB,IAAIuI,GAAQE,OAAOI,GAChDvD,MAAK,WACJ3F,QAAQC,IAAI,yBAA0B2I,MAGvChD,OAAM,SAAA+C,GACL3I,QAAQD,MAAM,4BAA6B4I,EAAIzI,YAjB/CF,QAAQC,IAAI,sBChCHkJ,EAtDG,SAAC,GAUZ,IATLC,EASI,EATJA,UASI,IARJvF,YAQI,MARC,KAQD,MAPJwF,YAOI,MAPC,OAOD,MANJpD,UAMI,MAND,GAMC,MALJ5D,YAKI,MALC,GAKD,EAHJtD,GAGI,EAJJuK,YAII,EAHJvK,OACAwK,EAEI,EAFJA,SAEI,IADJC,oBACI,MADS,KACT,EACJ,EAAgChL,oBAAS,GAAzC,mBAAOiL,EAAP,KAAiBC,EAAjB,KAUA,OAHa,OAAT7F,GAAwB,aAAPwF,IACnBxF,EAAO,cAAC,IAAD,CAAiBA,KAAM8F,OAG9B,sBAAK3H,UAAU,cAAf,UACE,uBAAO4H,QAAS3D,EAAhB,SAAqBmD,IACrB,sBAAKpH,UAAU,YAAf,UACG6B,EACD,uBACEwF,KAAe,aAATA,EAAsBI,EAAW,WAAa,OAASJ,EAC7DhH,KAAMA,EACN4D,GAAIA,EACJlH,MAAOA,EACPwK,SAAUA,EACV5G,MAAO,CAACkH,QAAS,QACjBC,aAAcN,IAGN,aAATH,GACC,wBACEA,KAAK,SACLrH,UAAU,eACVe,QA3BW,SAACZ,GACpBA,EAAM4H,iBACNL,GAAY,SAAAxF,GAAI,OAAKA,MAsBf,SAKGuF,EACC,cAAC,IAAD,CAAiB5F,KAAMmG,MAEvB,cAAC,IAAD,CAAiBnG,KAAMoG,eCnCtBC,EAdK,SAAC,GAGd,IACDC,EAHJjH,EAEI,EAFJA,MAEI,IADJkH,cACI,MADK,CAACxD,UAAW,UACjB,EAIJ,OAFAuD,EAAa,oBAAIxH,MAAOyH,EAAX,SAAoBlH,IAG/B,wBAAQlB,UAAU,eAAlB,SACGmI,KC8DQE,EAlEI,SAAC,GAMb,IALLhJ,EAKI,EALJA,MACAiJ,EAII,EAJJA,KACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAGA,GADiBC,qBAAWvM,GAApBM,KACkBD,mBAAS,KAAnC,mBAAOuH,EAAP,KAAc4E,EAAd,KACA,EAAwBnM,mBAAS,IAAjC,mBAAOwH,EAAP,KAAa4E,EAAb,KAEAjM,qBAAU,WACRgM,EAASL,EAAKvE,OACd6E,EAAQN,EAAKtE,QACZ,CAACsE,IAEJ,IAAMO,EAAc,SAAC1I,GACO,UAAtBA,EAAMC,OAAOC,KACfsI,EAASxI,EAAMC,OAAOrD,OACS,SAAtBoD,EAAMC,OAAOC,MACtBuI,EAAQzI,EAAMC,OAAOrD,QAgBzB,OACE,uBAAMiD,UAAU,cAAcuI,SAbb,SAACpI,GAClBA,EAAM4H,iBACN/J,QAAQC,IAAI,mBAAoBqK,EAAKrE,IACrCuE,EAASnJ,EAAO0E,EAAOC,GACvBuE,KASA,UACE,sBAAKvI,UAAU,cAAf,UACE,0BACEK,KAAK,QACL4D,GAAIqE,EAAKrE,GAAK,SACdlH,MAAOgH,EACPwD,SAAUsB,IAEZ,uBAAOjB,QAASU,EAAKrE,GAAK,SAA1B,sBAEF,sBAAKjE,UAAU,cAAf,UACE,0BACEK,KAAK,OACL4D,GAAIqE,EAAKrE,GAAK,QACdlH,MAAOiH,EACPuD,SAAUsB,IAEZ,uBAAOjB,QAASU,EAAKrE,GAAK,QAA1B,qBAEF,wBAAQjE,UAAU,MAAlB,oBACA,yBAAQA,UAAU,kBAChBe,QA3Ba,SAACZ,GAClBA,EAAM4H,iBACNU,EAASpJ,IAwBP,UAGE,cAAC,IAAD,CAAiBwC,KAAMiH,MAHzB,sBCMSC,EAjEK,SAAC,GAEd,IADLC,EACI,EADJA,aAEA,EAA4BxM,oBAAS,GAArC,mBAAOyM,EAAP,KAAeC,EAAf,KACA,EAA0B1M,mBAAS,IAAnC,mBAAOuH,EAAP,KAAc4E,EAAd,KACA,EAAwBnM,mBAAS,IAAjC,mBAAOwH,EAAP,KAAa4E,EAAb,KAEMC,EAAc,SAAC1I,GACO,UAAtBA,EAAMC,OAAOC,KACfsI,EAASxI,EAAMC,OAAOrD,OACS,SAAtBoD,EAAMC,OAAOC,MACtBuI,EAAQzI,EAAMC,OAAOrD,QAazB,OAAKkM,EASH,qCACE,yBAAQhF,GAAG,MAAMjE,UAAU,+BACzBe,QAAS,kBAAMmI,GAAU,IAD3B,sBAGW,cAAC,IAAD,CAAiBrH,KAAMsH,IAASnJ,UAAU,YAErD,uBAAMA,UAAU,cAAcuI,SAxBf,SAACpI,GAClBA,EAAM4H,iBACN/J,QAAQC,IAAI,sBACZ+K,EAAajF,EAAOC,GACpB2E,EAAS,IACTC,EAAQ,IACRM,GAAU,IAkBR,UACE,sBAAKlJ,UAAU,cAAf,UACE,0BACEK,KAAK,QACL4D,GAAG,YACHlH,MAAOgH,EACPwD,SAAUsB,IAEZ,uBAAOjB,QAAQ,YAAf,sBAEF,sBAAK5H,UAAU,cAAf,UACE,0BACEK,KAAK,OACL4D,GAAG,WACHlH,MAAOiH,EACPuD,SAAUsB,EACVlI,MAAO,CAACkH,QAAS,UAEnB,uBAAOD,QAAQ,WAAf,qBAEF,wBAAQ5H,UAAU,MAAlB,0BAlCJ,yBAAQA,UAAU,mBAChBe,QAAS,kBAAMmI,GAAU,IAD3B,sBAGW,cAAC,IAAD,CAAiBrH,KAAMqE,IAAQlG,UAAU,aC8DzCoJ,EAvFG,SAAC,GAGZ,IAFLC,EAEI,EAFJA,UACAC,EACI,EADJA,QAEA,EAA0B9M,mBAAS6M,GAAa,IAAhD,mBAAO7G,EAAP,KAAcC,EAAd,KACA,EAAwBjG,oBAAU,GAAlC,mBAAO8L,EAAP,KAAaiB,EAAb,KACA,EAAoD/M,mBAAS,IAA7D,mBAAOgN,EAAP,KAA2BC,EAA3B,KAEMvJ,EAAc,SAACC,GACnBnC,QAAQC,IAAIkC,EAAMC,OAAOrD,OACzBwM,GAAQ,SAAArH,GAAI,OAAIA,IAAS/B,EAAMC,OAAOrD,OAAS,EAAIoD,EAAMC,OAAOrD,UAW5D2M,EAAe,SAACrK,GACpBmD,EAAMmH,OAAOtK,EAAO,GACpBoD,EAASD,GACT8G,EAAQ9G,GACRoH,KAGIC,EAAe,SAACxK,EAAO0E,EAAOC,GAClCxB,EAAMnD,GAAS,CAAC0E,MAAOA,EAAOC,KAAMA,GACpCvB,EAASD,GACT8G,EAAQ9G,GACRoH,KAGFjN,qBAAU,WACR8F,EAAS4G,KACT,CAACA,IAEH1M,qBAAU,WACRiN,MACC,CAACtB,EAAM9F,IAEV,IAAMoH,EAAiB,WACrB,IAAME,EAAWtH,EAAM1C,KAAK,SAACC,EAAKV,GAChC,IAAI0K,EAAU1K,IAAUiJ,EAAO,+BAAiC,mBAEhE,OADAtK,QAAQC,IAAIoB,GAEV,eAAC,IAAM2K,SAAP,WACE,yBACEhK,UAAW+J,EACXhN,MAAOsC,EACP0B,QAASb,EAHX,UAKE,uBAAMF,UAAU,WAAhB,cAA6BD,EAAIgE,MAAjC,OACCuE,IAAI,UAAQjJ,GACX,cAAC,IAAD,CAAiBwC,KAAMoI,MAEvB,cAAC,IAAD,CAAiBpI,KAAMqI,SAG1B5B,IAAI,UAAQjJ,IACX,cAAC,EAAD,CACEA,MAAOA,EACPiJ,KAAMvI,EACNwI,SAAU,kBAAMgB,EAAQ,KACxBd,SAAUiB,EACVlB,SAAUqB,MAnBKxK,MA0BzBoK,EAAsBK,IAGxB,OACE,qCACGN,EACD,cAAC,EAAD,CACER,aApEe,SAACjF,EAAOC,GAC3B,IAAImG,EAAU,CAACpG,MAAOA,EAAOC,KAAMA,GACnCxB,EAAM3E,KAAKsM,GACX1H,EAASD,GACT8G,EAAQ9G,GACRoH,WCkDWQ,EAhEK,WAClB,MAA0B5N,mBAAS,IAAnC,mBAAO0E,EAAP,KAAcwB,EAAd,KACA,EAAsClG,mBAAS,IAA/C,mBAAO6J,EAAP,KAAoBgE,EAApB,KACQ5N,EAASiM,qBAAWvM,GAApBM,KACF+G,EAAUC,cAChB,EAA0CjH,oBAAS,GAAnD,mBAAO8N,EAAP,KAAsBC,EAAtB,KACA,EAAkC/N,mBAAS,IAA3C,mBAAO6M,EAAP,KAAkBmB,EAAlB,KAEMC,EAAa,WACjBrE,EAAqB3J,EAAMyE,EAAOmF,EAAagD,GAC/CkB,GAAiB,GACjB/G,EAAQ3F,KAAK,SAWf,OACE,sBAAK8C,MAAO,CAACiE,UAAW,QAAxB,UACE,uBACAX,GAAG,WACHsE,SAAUkC,EAFV,UAIA,cAAC,EAAD,CACErD,UAAU,eACVvF,KAAM,cAAC,IAAD,CAAiBA,KAAM6I,MAC7BzG,GAAG,QACH5D,KAAK,QACLtD,MAAOmE,EACPqG,SAAU,SAACpH,GAAD,OAAWuC,EAASvC,EAAMC,OAAOrD,QAC3CyK,aAAa,QAEf,cAAC,EAAD,CACEJ,UAAU,eACVvF,KAAM,cAAC,IAAD,CAAiBA,KAAM8I,MAC7B1G,GAAG,cACH5D,KAAK,cACLtD,MAAOsJ,EACPkB,SAAU,SAACpH,GAAD,OAAWkK,EAAelK,EAAMC,OAAOrD,QACjDyK,aAAa,WAGf,gCACE,cAAC,EAAD,CACEtG,MAAM,qBACNkH,OAAQ,CAACxD,UAAW,UAEtB,cAAC,EAAD,CACEyE,UAAWA,EACXC,QAxCc,SAAC9G,GACrBgI,EAAahI,SA0CX,wBAAQxC,UAAU,kBAAkBe,QAvClB,SAACZ,GACrBsK,KAsCE,SACKH,EAAgB,WAAa,qB,QCiDzBM,EA9GI,SAAC,GAGb,IAFLC,EAEI,EAFJA,WACAC,EACI,EADJA,cAEQrO,EAASiM,qBAAWvM,GAApBM,KACF+G,EAAUC,cACVsH,EAAYtM,KAAKuM,MAAMzM,aAAa0M,QAAQ,SAC5CrN,EAAOiN,GAAcE,EAC3B,EAA0BvO,mBAASoB,EAAKsD,OAAxC,mBAAOA,EAAP,KAAcwB,EAAd,KACA,EAA0ClG,oBAAS,GAAnD,mBAAO8N,EAAP,KAAsBC,EAAtB,KACA,EAAsC/N,mBAASoB,EAAKyI,aAApD,mBAAOA,EAAP,KAAoBgE,EAApB,KACA,EAAkC7N,mBAAS,IAA3C,mBAAO6M,EAAP,KAAkBmB,EAAlB,KAEMU,EAAa,WACjB9E,EAAqB3J,EAAMmB,EAAKqG,GAAI/C,EAAOmF,EAAagD,GACxDyB,EAAc,2BAAID,GAAL,IAAiB3J,WAC9BqJ,GAAiB,GACjB9J,YAAW,kBAAM8J,GAAiB,KAAQ,MAUtCvO,EAAKH,IAASI,YAEpBU,qBAAU,WACHiB,IAGLI,QAAQC,IAAIL,GACF5B,EAAGqB,WAAW,SAASgB,IAAIT,EAAKqG,IACtCP,MACDC,MAAK,SAAAlG,GAAa,IAAD,EACZC,EAAM,GACV,UAAAD,EAASK,OAAO0E,aAAhB,SAAuB7E,SAAQ,SAAAkG,GAAI,OAAInG,EAAIG,KAAKgG,MAChD2G,EAAa9M,MAEdkG,OAAM,SAAA7F,GAAK,OAAIC,QAAQC,IAAI,UAAWF,EAAMG,eAC9C,IAUH,OACE,sBAAKyC,MAAO,CAACiE,UAAW,QAAxB,UACE,cAAC,EAAD,CACE1D,MAAM,mDACNkH,OAAQ,CAACxD,UAAW,UAEtB,uBAAM2D,SAAU2C,EAAhB,UACE,cAAC,EAAD,CACE9D,UAAU,eACVvF,KAAM,cAAC,IAAD,CAAiBA,KAAM6I,MAC7BzG,GAAG,QACH5D,KAAK,QACLtD,MAAOmE,EACPqG,SAAU,SAACpH,GAAD,OAAWuC,EAASvC,EAAMC,OAAOrD,QAC3CuK,YAAY,WACZE,aAAa,QAEf,cAAC,EAAD,CACAJ,UAAU,eACVvF,KAAM,cAAC,IAAD,CAAiBA,KAAM8I,MAC7B1G,GAAG,cACH5D,KAAK,cACLtD,MAAOsJ,EACPkB,SAAU,SAACpH,GAAD,OAAWkK,EAAelK,EAAMC,OAAOrD,QACjDyK,aAAa,WAGf,gCACE,cAAC,EAAD,CACEtG,MAAM,qBACNkH,OAAQ,CAACxD,UAAW,UAEtB,cAAC,EAAD,CACEyE,UAAWA,EACXC,QA1Cc,SAAC9G,GACrBgI,EAAahI,SA4CX,wBACIxC,UAAU,kBACVe,QA3Cc,SAACZ,GACrB+K,KAwCE,SAIKZ,EAAgB,WAAa,iBAElC,gCACE,cAAC,EAAD,CACEpJ,MAAM,mDACNkH,OAAQ,CAACxD,UAAW,UAEtB,sBAAM2D,SAhFO,SAACpI,GAClBA,EAAM4H,iBACN3B,EAAqB3J,EAAMmB,EAAKqG,IAChCT,EAAQ3F,KAAK,QACbiN,EAAc,OA4EV,SACE,wBACE9K,UAAU,kBADZ,+CCbKmL,EA5FQ,SAAC,GAOlB,EANJC,WAMI,EALJC,iBAKK,IAJL/K,EAII,EAJJA,OACA1C,EAGI,EAHJA,KACAkN,EAEI,EAFJA,cACAQ,EACI,EADJA,KAEM9H,EAAUC,cACThH,EAAQiM,qBAAWvM,GAAnBM,KACP,EAA0BD,oBAAS,GAAnC,mBAAO+O,EAAP,KAAcC,EAAd,KACMC,EAAgBlN,aAAa0M,QAAQ,cAE3CtO,qBAAU,WACR6O,EAASE,OACT,IAEF,IAAMA,EAAU,WACd,IAAKD,GAAyC,GAAxBA,EAAcnL,OAClC,OAAO,EAET,IAAIqL,EAAalN,KAAKuM,MAAMS,GAC5B,IAAKE,GAAmC,GAArBA,EAAWrL,OAC5B,OAAO,EAET,IAAIsL,EAAcD,EAAWE,QAAO,SAAAhI,GAAI,OAAIA,EAAKI,IAAMrG,EAAKqG,MAC5D,OAAQ2H,GAAeA,EAAYtL,OAAS,GAG9C,OACE,qBAAIK,MAAO,CAAC+D,WAAY,UAAWS,aAAc,GAAIF,aAAc,IAAnE,UASE,qBACElE,QAAS,WACPyC,EAAQ3F,KAAK,UAAUD,EAAKqG,KAFhC,SAWE,wBAAO2D,QAAQ,WAAW5H,UAAU,WAApC,UACE,yBACA,iCAASpC,EAAKsD,QAFhB,KAEkCZ,EAFlC,IAE2C,qBAF3C,SAMF,qBAAKN,UAAU,aAAf,SACGsL,EAAO,yBACNtL,UAAU,eACVW,MAAO,CAACmE,MAAO,SACf/D,QAAS,SAACZ,GACRA,EAAM2L,kBACNhB,IACAvM,aAAaC,QAAQ,OAAQC,KAAKC,UAAUd,IAC5C4F,EAAQ3F,KAAK,cAPT,UAUN,cAAC,IAAD,CAAiBgE,KAAMkK,MAVjB,+BAYN,yBACF/L,UAAU,eACVW,MAAO,CAACmE,MAAO,SACf/D,QAAS,SAACZ,GACRA,EAAM2L,kBACFP,GACFvN,QAAQC,IAAIL,GACZwI,EAAqB3J,EAAMmB,GAC3B4N,GAAS,KAETpF,EAAmB3J,EAAMmB,GACzB4N,GAAS,KAXX,UAeF,cAAC,IAAD,CAAiB3J,KAAM0J,EAAQzC,IAAUkD,MAfvC,IAemDT,EAAQ,2BAAS,oCCrC/DU,EApDE,SAAC,GAKX,IAJL/O,EAII,EAJJA,MAGA4N,GACI,EAHJoB,cAGI,EAFJb,iBAEI,EADJP,eAEA,EAAgCtO,mBAAS,IAAzC,mBAAO2P,EAAP,KAAiBC,EAAjB,KACQ3P,EAASiM,qBAAWvM,GAApBM,KAgCR,OApBAE,qBAAU,WACHO,GACLkP,EAAYlP,EAAM4C,KAAI,SAAAlC,GACpB,OACE,cAAC,EAAD,CAIE0C,OAAQ1C,EAAK4I,SAEb5I,KAAMA,EACN0N,KAAM7O,GAAQmB,EAAK6I,OAAShK,EAAKc,IACjCuN,cAAe,WACbA,EAAc,CAAE7G,GAAIrG,EAAKqG,GAAI/C,MAAOtD,EAAKsD,MAAOmL,QAASzO,EAAKyO,QAAShG,YAAazI,EAAKyI,gBARtFzI,EAAKqG,UAaf,CAAC/G,IAGF,qBAAK8C,UAAU,YAAf,SACE,6BACGmM,EAAS7L,OAAS,EACjB6L,EAEA,iLCVMG,EAhCI,SAAC,GAEb,IADLlO,EACI,EADJA,UAEQ3B,EAASiM,qBAAWvM,GAApBM,KACF+G,EAAUC,cAMhB,OAJKhH,GACH+G,EAAQ3F,KAAK,WAIb,qBAAKmC,UAAU,YAAf,SACI,cAAC,IAAD,UACE,cAAC,IAAD,CAAOuM,KAAK,aAAZ,SACE,qBAAK5L,MAAO,CAAEwD,QAAS,QAAvB,SACE,sBAAKxD,MAAO,CAAEE,MAAO,OAAQ2L,OAAQ,SAAUC,aAAc,IAA7D,UACE,cAAC,EAAD,CACEvL,MAAM,+CAER,8BACE,cAAC,EAAD,CACEhE,MAAOkB,kBC8CZsO,EA1DM,SAAC,GAGf,IAFLxP,EAEI,EAFJA,MACAsF,EACI,EADJA,MAEA,EAAoChG,mBAAS,MAA7C,mBAAOqO,EAAP,KAAmBC,EAAnB,KACQrO,EAASiM,qBAAWvM,GAApBM,KACF+G,EAAUC,cAMhB,OAJKhH,GACH+G,EAAQ3F,KAAK,WAIb,qBAAKmC,UAAU,YAAf,SACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuM,KAAK,YAAZ,SACE,cAAC,EAAD,CACE1B,WAAYA,EACZC,cAAeA,EACftI,MAAOA,MAGX,eAAC,IAAD,CAAO+J,KAAK,cAAZ,UACE,cAAC,EAAD,CACErL,MAAM,6BAER,cAAC,EAAD,OAEF,cAAC,IAAD,CAAOqL,KAAK,eAAZ,SACE,sBAAK5L,MAAO,CAAEwD,QAAS,QAAvB,UACE,sBAAKxD,MAAO,CAAEE,MAAO,OAAQ2L,OAAQ,SAAUC,aAAc,IAA7D,UACE,cAAC,EAAD,CACEvL,MAAM,yCAER,8BACE,cAAC,EAAD,CACEhE,MAAOA,EACP4N,cAAeA,SAIrB,qBAAKnK,MAAO,CAACwD,QAAS,OAAQC,cAAe,SAAUC,eAAgB,SAAUsI,WAAY,IAAKC,YAAa,GAAI/L,MAAO,KAA1H,SACE,wBACEE,QAAS,WACPyC,EAAQ3F,KAAK,gBAEf8C,MAAO,CAACmE,MAAO,UAAWJ,WAAY,cAAeP,QAAS,OAAQ4B,OAAQ,QAASC,SAAU,GAAIC,cAAe,IAJtH,SAME,qCAAE,cAAC,IAAD,CAAiBpE,KAAMqE,IAAQvF,MAAO,CAACwF,YAAa,KAAtD,kC,QCyJH0G,EAzLF,SAAC,GAEP,IADL9L,EACI,EADJA,QAEA,EAA0BvE,mBAAS,IAAnC,mBAAOgG,EAAP,KAAcC,EAAd,KACA,EAAkCjG,mBAAS,MAA3C,mBAAOmG,EAAP,KAAkBC,EAAlB,KACA,EAA0CpG,oBAAS,GAAnD,mBAAOqG,EAAP,KACA,GADA,KAC8BrG,oBAAS,IAAvC,mBAAOuG,EAAP,KACA,GADA,KACgCvG,oBAAS,IAAzC,mBAAOwG,EAAP,KAAiBC,EAAjB,KACQC,EAASC,cAATD,KACR,EAA0C1G,mBAAS,IAAnD,mBAAOsQ,EAAP,KAAsBC,EAAtB,KACA,EAA4CvQ,mBAAS,IAArD,mBAAOwQ,EAAP,KAAuBC,EAAvB,KACA,EAA4BzQ,qBAA5B,mBAAO0Q,EAAP,KAAeC,EAAf,KAyEA,GAvEAxQ,qBAAU,WAMR,GALAsG,GAAY,GACZL,EAAa,MACbH,EAAS,MAETzE,QAAQC,IAAIiF,QACC1C,IAAT0C,EAAJ,CAEA,IAAMlH,EAAKH,IAASI,YAEpBD,EAAGqB,WAAW,SAASgB,IAAI6E,GAAMQ,MAChCC,MAAK,SAAAlG,GACJwF,GAAY,MAEbW,OAAM,SAAA7F,GACLkF,GAAY,GACZjF,QAAQC,IAAI,UAAWF,EAAMG,YAGrBlC,EAAGqB,WAAW,SAASgB,IAAI6E,GACjCQ,MACDC,MAAK,SAAAlG,GAAa,IAAD,EACZC,EAAM,GACV,UAAAD,EAASK,OAAO0E,aAAhB,SAAuB7E,SAAQ,SAAAkG,GAAI,OAAInG,EAAIG,KAAKgG,MAChDjB,EAAalF,MAEdkG,OAAM,SAAA7F,GAAK,OAAIC,QAAQC,IAAI,UAAWF,EAAMG,eAC9C,CAACgF,IAEJvG,qBAAU,WACRsG,GAAY,GACZ,IAAIa,EAAS,GAQTsJ,EAAqB,IALvBtJ,EADe,MAAbnB,EACOA,EAEA,IAIArC,OAAS,IAClBmC,EAASqB,EAAOhE,KAAI,SAACC,EAAKsN,GACzB,IAAMC,EAAWvN,EAAIgE,MACjBwJ,EAAU,GAEd,IADAA,EAAQ1P,KAAKkC,EAAIiE,MACVuJ,EAAQjN,OAAS,GAAG,CACvB,IAAM+E,EAAcE,KAAKC,MAAMD,KAAKE,SAAW3B,EAAOxD,QACjDiN,EAAQC,SAAS1J,EAAOuB,GAAarB,OACtCuJ,EAAQ1P,KAAKiG,EAAOuB,GAAarB,OA5E5B,SAACoB,GAGlB,IAFA,IAAiCC,EAA7BC,EAAeF,EAAM9E,OAEF,GAAhBgF,GAAmB,CAExBD,EAAcE,KAAKC,MAAMD,KAAKE,SAAWH,GACzCA,IAHwB,MAKoB,CAC1CF,EAAMC,GAAcD,EAAME,IAD3BF,EAAME,GALiB,KAKFF,EAAMC,GALJ,MA4EtBK,CAAY6H,GACZ,IAAK,IAAIlO,EAAQ,EAAGA,EAAQkO,EAAQjN,OAAQjB,IAAS,CACjCkO,EAAQlO,IACTU,EAAIiE,MACfoJ,EAAmBvP,KAAKwB,GAGhC,MAAO,CACHiO,SAAUA,EACVC,QAASA,OAGdR,EAAiBK,GACjBH,EAAkBQ,MAAML,EAAmB9M,QAAQoN,MAAM,IACzDzK,GAAY,MAGX,CAACJ,EAAe9B,EAAS4B,KAGzBK,EAAU,OACb,+BACE,qBAAKhD,UAAU,mBAAf,SACE,cAAC,EAAD,QAKN,IAAKwC,EAAO,OACV,qBAAKxC,UAAU,mBAAf,SACE,iEAIJ,IAAK+C,GAA4B,IAAjBP,EAAMlC,OAAc,OAChC,qBAAKN,UAAU,mBAAf,SACE,sJAkDN,OAEC,gCACe,MAAVkN,GAAkB,qBAAKvM,MAAO,CAC3BqF,SAAU,GACVb,aAAc,IAFC,iCAIR+H,EAJQ,YAIE1K,EAAMlC,UApDrBkC,EAAM1C,KAAI,SAACC,EAAKsN,GAAe,IAAD,EACnC,OACG,sBAAK1M,MAAO,CACRoF,OAAQ,+BACRd,aAAc,GACdpE,MAAO,OACPsE,aAAc,GACdwI,QAAS,IALb,UAMQ,qBAAKhN,MAAO,CACRE,MAAO,OACP+D,UAAW,UAFf,gBAIK7E,QAJL,IAIKA,OAJL,EAIKA,EAAKuN,WAVlB,OAYKvN,QAZL,IAYKA,GAZL,UAYKA,EAAKwN,eAZV,aAYK,EAAczN,KAAI,SAAC8N,EAASvO,GACzB,OAAO,qBAAKsB,MAAO,CACfgE,OAAQ,GACR9D,MAAO,MACPD,WAAY,MACZuE,aAAc,GACdD,UAAW,GACXa,OAAQ,+BACRd,aAAc,GACdL,UAAW,SACXG,WAAY,EACZC,cAAe,SACfT,gBAAiBlF,GAAS2N,EAAeK,GAAa,QAAU,SACjEtM,QAAS,SAACZ,GACZ,IAAM0N,EAAS,sBACRb,EAAec,MAAM,EAAGT,IADhB,CAEXhO,GAFW,YAGR2N,EAAec,MAAMT,EAAY,KAExCJ,EAAkBY,IAlBZ,SAoBH,qBAAKlN,MAAO,CAACmE,MAAOzF,GAAS2N,EAAeK,GAAa,QAAU,SAAnE,SACKO,eAkBrB,qBAAKjN,MAAO,CACRgE,OAAQ,GACR9D,MAAO,MACPD,WAAY,MACZ2D,gBAAiB,UACjBO,MAAO,QACPkB,SAAU,GACVpB,UAAW,SACXG,WAAY,EACZC,cAAe,SACfC,aAAc,IACflE,QAAS,SAACZ,GAET,IADA,IAAI4N,EAAc,EACT1O,EAAQ,EAAGA,EAAQ2N,EAAe1M,OAAQjB,IAAS,CACvC2N,EAAe3N,IAChByN,EAAczN,KAE1B0O,GAAe,GAGvBZ,EAAUY,IApBd,wBClCOC,EAxIG,SAAC,GAKb,EAJJjN,QAIK,IAHL7D,EAGI,EAHJA,MACAkB,EAEI,EAFJA,UACAoE,EACI,EADJA,MAEA,EAAoChG,mBAAS,MAA7C,mBAAOqO,EAAP,KAAmBC,EAAnB,KACQrO,EAASiM,qBAAWvM,GAApBM,KACF+G,EAAUC,cAEVwK,EAAgB,SAAC9N,GACrB,OAAQA,EAAMC,OAAOC,MACnB,IAAK,OACH,OAAI5D,OACF+G,EAAQ3F,KAAK,aAGf2F,EAAQ3F,KAAK,KAEf,QACE,SAQN,OAJKpB,GACH+G,EAAQ3F,KAAK,WAIb,qBAAKmC,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuM,KAAK,YAAZ,SACE,cAAC,EAAD,CACE1B,WAAYA,EACZC,cAAeA,EACftI,MAAOA,MAGX,eAAC,IAAD,CAAO+J,KAAK,cAAZ,UACE,cAAC,EAAD,CACErL,MAAM,2BACNkH,OAAQ,CAACxD,UAAW,UAEtB,cAAC,EAAD,OAEF,cAAC,IAAD,CAAO2H,KAAK,aAAZ,SACE,cAAC,EAAD,CACEnO,UAAWA,MAGf,cAAC,IAAD,CAAOmO,KAAK,eAAZ,SACE,cAAC,EAAD,CACErP,MAAOA,EACPsF,MAAOA,MAGX,cAAC,IAAD,CAAO+J,KAAK,eAAZ,SACE,cAAC,EAAD,CACExL,QAASkN,MAGb,cAAC,IAAD,CAAO1B,KAAK,kBAAZ,SACE,cAAC,EAAD,CACExL,QAASkN,MAGb,cAAC,IAAD,CAAO1B,KAAK,OAAZ,SACE,sBAAK5L,MAAO,CAAEwD,QAAS,QAAvB,UACE,sBAAKxD,MAAO,CAAEE,MAAO,MAAO2L,OAAQ,SAAUC,aAAc,IAA5D,UACE,cAAC,EAAD,CACEvL,MAAM,yCAER,sBAAKP,MAAO,CAAEgN,QAAS,GAAIjJ,WAAY,UAAWO,aAAc,IAAhE,UACE,8BACE,cAAC,EAAD,CACE/H,MAAOA,EAAM4Q,MAAM,EAAG,GACtBhD,cAAeA,MAGlB5N,EAAMoD,OAAS,GACd,qBAAKK,MAAO,CAAEwD,QAAS,OAAQE,eAAgB,OAA/C,SACE,wBACEJ,GAAG,UACH5D,KAAK,UACLU,QAAS,WACPyC,EAAQ3F,KAAK,iBAEf8C,MAAO,CAAEmE,MAAO,QAASJ,WAAY,cAAeqB,OAAQ,QAASC,SAAU,IANjF,qDAYR,sBAAKrF,MAAO,CAAEE,MAAO,MAAO2L,OAAQ,SAAUI,YAAa,IAA3D,UACE,cAAC,EAAD,CACE1L,MAAM,+CAER,sBAAKP,MAAO,CAAEgN,QAAS,GAAIjJ,WAAY,UAAWO,aAAc,IAAhE,UACE,8BACE,cAAC,EAAD,CACE/H,MAAOkB,EAAU0P,MAAM,EAAG,OAG7B1P,EAAUkC,OAAS,GAClB,qBAAKK,MAAO,CAAEwD,QAAS,OAAQE,eAAgB,OAA/C,SACE,wBACEJ,GAAG,UACH5D,KAAK,UACLU,QAAS,WACPyC,EAAQ3F,KAAK,eAEf8C,MAAO,CAAEmE,MAAO,QAASJ,WAAY,cAAeqB,OAAQ,QAASC,SAAU,IANjF,qDAcR,qBAAKrF,MAAO,CAAEwD,QAAS,OAAQC,cAAe,SAAUC,eAAgB,SAAUsI,WAAY,IAAKC,YAAa,GAAI/L,MAAO,KAA3H,SACE,wBACEE,QAAS,WACPyC,EAAQ3F,KAAK,gBAEf8C,MAAO,CAAEmE,MAAO,UAAWJ,WAAY,cAAeP,QAAS,OAAQ4B,OAAQ,QAASC,SAAU,GAAIC,cAAe,IAJvH,SAME,qCAAE,cAAC,IAAD,CAAiBpE,KAAMqE,IAAQvF,MAAO,CAAEwF,YAAa,KAAvD,kCC1DD+H,EAjFF,SAAC,GAEP,IADLtP,EACI,EADJA,SAEQnC,EAASiM,qBAAWvM,GAApBM,KACR,EAAqCD,mBAAS,MAA9C,mBAAO2R,EAAP,KAAoBrD,EAApB,KACMtH,EAAUC,cAIhB,OAHKhH,GACH+G,EAAQ3F,KAAK,WAGb,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0O,KAAK,YAAZ,SACE,cAAC,EAAD,CACE1B,WAAYsD,EACZrD,cAAeA,MAGnB,cAAC,IAAD,CAAOyB,KAAK,IAAZ,SACE,qCACE,yBAAQvM,UAAU,OAAlB,UACE,kCACE,qBAAKA,UAAU,eAAf,SACE,qBAAKA,UAAU,UAAf,SACE,mCACE,cAAC,IAAD,CACEA,UAAU,cACVoO,GAAG,OAFL,gEAUR,sBAAKpO,UAAU,cAAf,UACE,gCACE,yBACA,gCACE,yBACA,yBACA,+BAGJ,gCACE,yBACA,gCACE,yBACA,yBACA,+BAGJ,gCACE,yBACA,gCACE,yBACA,yBACA,qCAMR,yBAASA,UAAU,eAAnB,SACE,gCACE,cAAC,EAAD,CACEkB,MAAM,mCAER,qBAAKP,MAAO,CAACiE,UAAW,QAAxB,SACE,cAAC,EAAD,CACE1H,MAAO0B,EACPkM,cAAeA,oB,QC2HlBuD,EA1LC,WAA2F,IAA1FC,EAAyF,uDAA9E,KAAMC,EAAwE,uDAAhE,KAAMC,EAA0D,uDAA/C,KAAMC,EAAyC,uDAA3B,KAAMC,EAAqB,uDAAT,KAC/F,EAAiBhG,qBAAWvM,GAApBM,EAAR,EAAQA,KAER,EAAgCD,mBAAS,MAAzC,mBAAOmS,EAAP,KAAiBC,EAAjB,KACA,EAA0BpS,mBAAS,MAAnC,mBAAOuB,EAAP,KAAc8Q,EAAd,KACA,EAA4BrS,mBAAS,WAArC,mBAAOsS,EAAP,KAAeC,EAAf,KAEA,EAA0BvS,mBAAS,GAAnC,mBAAOwS,EAAP,KAAcC,EAAd,KACA,EAA4BzS,mBAAS,GAArC,mBAAO0S,EAAP,KAAeC,EAAf,KACA,EAA4B3S,mBAAS,GAArC,mBAAO4S,EAAP,KAAeC,EAAf,KACA,EAAsC7S,mBAAS,GAA/C,mBAAO8S,EAAP,KAAoBC,EAApB,KACA,EAA4C/S,mBAAS,GAArD,mBAAOgT,EAAP,KAAuBC,EAAvB,KACA,EAA0CjT,mBAAS,GAAnD,mBAAOkT,EAAP,KAAsBC,EAAtB,KAGAhT,qBAAU,WACM,IAAVqS,GAAuB,MAARvS,IACnBoS,EAAS,MACTE,EAAU,WACVhT,EAAK6T,2BAA2BrB,EAAOC,GACtC7K,MAAK,SAACkM,GACL,IAAIC,EAAQD,EAAepT,KAC3BmS,EAAYkB,GACZf,EAAU,cAEXnL,OAAM,SAAC7F,GACNC,QAAQD,MAAM,0BAA2BA,EAAMG,SAC/C2Q,EAAS9Q,GACTgR,EAAU,eAEX,CAACC,IAGJrS,qBAAU,WACO,IAAXuS,GAAwB,MAARzS,IACpBoS,EAAS,MACTE,EAAU,WACVhT,EAAKgU,+BAA+BxB,EAAOC,GACxC7K,MAAK,SAACkM,GACL,IAAIC,EAAQD,EAAepT,KAC3BT,EAAGqB,WAAW,SAASgB,IAAIyR,EAAMvS,KAAKmJ,IAAI,CACxCpI,WAAY,KAEduR,EAAepT,KAAKuT,cAAc,CAACC,YAAa3B,IAChDM,EAAYkB,GACZf,EAAU,cAEXnL,OAAM,SAAC7F,GACNC,QAAQD,MAAM,0BAA2BA,EAAMG,SAC/C2Q,EAAS9Q,GACTgR,EAAU,eAGb,CAACG,IAGJvS,qBAAU,WACO,IAAXyS,GAAyB,OAAT3S,IACpBoS,EAAS,MACTE,EAAU,WAEVhT,EAAKmU,UACJvM,MAAK,WACJ3F,QAAQC,IAAI,cACZ2Q,EAAY,MACZrQ,aAAa4R,WAAW,QACxB5R,aAAa4R,WAAW,cACxBpB,EAAU,cAEXnL,OAAM,SAAA7F,GACLC,QAAQD,MAAM,2BAA4BA,EAAMG,SAChD2Q,EAAS9Q,EAAMqS,MACfrB,EAAU,eAGX,CAACK,IAEJzS,qBAAU,WACR,GAAoB,IAAhB2S,GAA8B,OAAT7S,EAAzB,CACAoS,EAAS,MACTE,EAAU,WAEV,IAAMsB,EAAanU,EAAGH,KAAKuU,kBAAkBD,WAC3CtU,EAAKwU,YAAYhC,MACjBC,GAEFzS,EAAKwU,YAAYC,6BAA6BH,GAAY1M,MAAK,WAC7D3F,QAAQC,IAAI,sCACZlC,EAAKwU,YAAYE,YAAYlC,GAC5B5K,MAAK,WACJoL,EAAU,cAEXnL,OAAM,SAAC7F,GACN8Q,EAAS9Q,EAAMqS,MACfrB,EAAU,YAEZA,EAAU,WACVhT,EAAKwU,YAAYP,cAAc,CAACC,YAAa3B,EAAUoC,SAAUhC,IAChE/K,MAAK,WACJiL,EAAY7S,EAAKwU,aACjBxB,EAAU,cAEXnL,OAAM,SAAC7F,GACN8Q,EAAS9Q,EAAMqS,MACfrB,EAAU,eAEXnL,OAAM,SAAC7F,GACR8Q,EAAS9Q,EAAMqS,MACfrB,EAAU,eAGX,CAACO,IAGJ3S,qBAAU,WACR,GAAuB,IAAnB6S,GAAiC,OAAT/S,EAA5B,CACAoS,EAAS,MACTE,EAAU,WAEV,IAAMsB,EAAanU,EAAGH,KAAKuU,kBAAkBD,WAC3CtU,EAAKwU,YAAYhC,MACjBC,GAGFzS,EAAKwU,YAAYC,6BAA6BH,GAAY1M,MAAK,WAC7D3F,QAAQC,IAAI,sCACZlC,EAAKwU,YAAYI,eAAelC,GAAa9K,MAAK,WAChDoL,EAAU,cACTnL,OAAM,SAAC7F,GACR8Q,EAAS9Q,EAAMqS,MACfrB,EAAU,eAEXnL,OAAM,SAAC7F,GACR8Q,EAAS9Q,EAAMqS,MACfrB,EAAU,eAGX,CAACS,IAGJ7S,qBAAU,WACR,GAAsB,IAAlB+S,GAAgC,OAATjT,EAA3B,CACAoS,EAAS,MACTE,EAAU,WAEV,IAAMsB,EAAanU,EAAGH,KAAKuU,kBAAkBD,WAC3CtU,EAAKwU,YAAYhC,MACjBC,GAGFzS,EAAKwU,YAAYC,6BAA6BH,GAAY1M,MAAK,WAC7D5H,EAAKwU,YAAY1J,SAASlD,MAAK,WAC7BoL,EAAU,cACTnL,OAAM,SAAC7F,GACR8Q,EAAS9Q,EAAMqS,MACfrB,EAAU,eAEXnL,OAAM,SAAC7F,GACR8Q,EAAS9Q,EAAMqS,MACfrB,EAAU,eAGX,CAACW,IAEJ,IAAMkB,EAAc,kBAAM3B,GAAS,SAAA/M,GAAI,OAAIA,EAAO,MAC5C2O,EAAe,kBAAM1B,GAAU,SAAAjN,GAAI,OAAIA,EAAO,MAC9C4O,EAAe,kBAAMzB,GAAU,SAAAnN,GAAI,OAAIA,EAAO,MAC9C6O,EAAoB,kBAAMxB,GAAe,SAAArN,GAAI,OAAIA,EAAO,MACxD8O,EAAuB,kBAAMvB,GAAkB,SAAAvN,GAAI,OAAIA,EAAO,MAC9D+O,GAAsB,kBAAMtB,GAAiB,SAAAzN,GAAI,OAAIA,EAAO,MAC5DgP,GAAc,kBAAMnC,EAAU,YAEpC,MAAO,CACLJ,WACA5Q,QACA+Q,SACA8B,cACAC,eACAC,eACAC,oBACAC,uBACAC,uBACAC,iBC9FWC,EA5FD,WACZ,MAAwC3U,mBAAS,IAAjD,mBAAO4U,EAAP,KAAqBC,EAArB,KACM7N,EAAUC,cAChB,EAA4BjH,mBAAS,CAAE+R,MAAO,GAAIC,SAAU,KAA5D,mBAAO8C,EAAP,KAAeC,EAAf,KAEA,EAAsClD,EAAQ,KAAMiD,EAAO/C,MAAO+C,EAAO9C,UAAjEM,EAAR,EAAQA,OAAQ/Q,EAAhB,EAAgBA,MAAO6S,EAAvB,EAAuBA,YACfnU,EAASiM,qBAAWvM,GAApBM,KAOF+U,EAAe,SAAAC,GACnB,MAAwBA,EAAErR,OAAlBC,EAAR,EAAQA,KAAMtD,EAAd,EAAcA,MACdwU,GAAU,SAAArP,GAAI,kCAAUA,GAAV,kBAAiB7B,EAAOtD,QAmCxC,OAhCAJ,qBAAU,WACJF,GACF+G,EAAQ3F,KAAK,UAEd,CAACpB,IAEJE,qBAAU,WACR,GAAc,OAAVoB,EAKJ,OAAQA,EAAMqS,MACZ,KAAK,KAEH,YADAiB,EAAgB,IAElB,IAAK,sBAGL,IAAK,sBAEH,YADAA,EAAgB,kIAElB,IAAK,qBAEH,YADAA,EAAgB,4HAElB,QAEE,YADAA,EAAgB,2KAlBlBA,EAAgB,MAsBjB,CAACtT,IAGF,sBAAKiC,UAAU,QAAQW,MAAO,CAACiE,UAAW,UAA1C,UACE,sBAAKjE,MAAO,CAACwD,QAAS,OAAQC,cAAe,MAAOC,eAAgB,SAAU8B,YAAa,KAA3F,UACE,qBAAKxF,MAAO,CAACwD,QAAS,OAAQsI,aAAc,GAAIzG,SAAU,GAAI1B,WAAY,UAA1E,SACE,cAAC,IAAD,CAAM8J,GAAG,WAAT,oDAEF,cAAC,EAAD,CACElN,MAAM,gCAGV,uBAAMP,MAAO,CAACwD,QAAS,gBAAiBoE,SApDvB,SAACkJ,GACpBA,EAAE1J,iBACF6I,KAkDE,UACE,cAAC,EAAD,CACExJ,UAAU,6CACVvF,KAAM,cAAC,IAAD,CAAiBA,KAAM6P,MAC7BzN,GAAG,QACH5D,KAAK,QACLtD,MAAOuU,EAAO/C,MACdhH,SAAUiK,EACVlK,YAAY,+CAEd,cAAC,EAAD,CACEF,UAAU,iCACVvF,KAAM,cAAC,IAAD,CAAiBA,KAAM8F,MAC7BN,KAAK,WACLpD,GAAG,WACH5D,KAAK,WACLtD,MAAOuU,EAAO9C,SACdjH,SAAUiK,IAEM,KAAjBJ,GAAuB,mBAAGpR,UAAU,QAAb,SAAsBoR,IAC9C,wBACEpR,UAAU,kBACVW,MAAO,CAAC4D,gBAAiB,UAAWoN,YAAa,QAAS1M,aAAc,GAAI2M,YAAa,GACzF5Q,SAA8B,KAApBsQ,EAAO9C,UAAoC,KAAjB8C,EAAO/C,MAH7C,SAKc,YAAXO,EAAuB,wCAA4B,YAAXA,EAAuB,eAAO,oCCnElE+C,EAlBA,WACb,IAAQpV,EAASiM,qBAAWvM,GAApBM,KACAqU,EAAiBzC,IAAjByC,aACFtN,EAAUC,cAQhB,OANA9G,qBAAU,WACHF,IACLqU,IACArQ,YAAW,kBAAM+C,EAAQ3F,KAAK,OAAM,QACnC,CAACpB,IAGF,qBAAKuD,UAAU,mBAAf,SACE,8BAAG,cAAC,EAAD,IAAH,2BCoDS8R,GAhEQ,SAAC,GAMjB,IALLN,EAKI,EALJA,aACAF,EAII,EAJJA,OACAvT,EAGI,EAHJA,MACAwK,EAEI,EAFJA,SACAuG,EACI,EADJA,OAEA,EAAwCtS,mBAAS,IAAjD,mBAAO4U,EAAP,KAAqBC,EAArB,KAqBA,OAnBA1U,qBAAU,WACR,GAAc,OAAVoB,EAKJ,OAAQA,GACN,KAAK,KAEH,YADAsT,EAAgB,IAElB,IAAK,sBAEH,YADAA,EAAgB,uBAElB,QAEE,YADAA,EAAgB,gDAZlBA,EAAgB,MAejB,CAACtT,IAGF,qCACE,cAAC,EAAD,CACEmD,MAAM,yFAER,uBAAMqH,SAAU,SAACpI,GACfA,EAAM4H,iBACNQ,KAFF,UAIE,cAAC,EAAD,CACEnB,UAAU,mDACVvF,KAAM,cAAC,IAAD,CAAiBA,KAAM8F,MAC7BN,KAAK,WACLpD,GAAG,WACH5D,KAAK,WACLtD,MAAOuU,EAAO9C,SACdjH,SAAUiK,IAEZ,cAAC,EAAD,CACEpK,UAAU,mDACVvF,KAAM,cAAC,IAAD,CAAiBA,KAAM8F,MAC7BN,KAAK,WACLpD,GAAG,eACH5D,KAAK,cACLtD,MAAOuU,EAAO7C,YACdlH,SAAUiK,IAEM,KAAjBJ,GAAuB,mBAAGpR,UAAU,QAAb,SAAsBoR,IAC9C,wBAAQpR,UAAU,kBAAkBW,MAAO,CAACmE,MAAO,QAASJ,WAAY,UAAWqB,OAAQ,SAA3F,SACc,YAAX+I,EAAuB,wCAA4B,YAAXA,EAAuB,eAAO,wECVlEiD,GA/CO,SAAC,GAKhB,IAJLP,EAII,EAJJA,aACAF,EAGI,EAHJA,OACAvT,EAEI,EAFJA,MACAwK,EACI,EADJA,SAEA,EAAwC/L,mBAAS,IAAjD,mBAAO4U,EAAP,KAAqBC,EAArB,KAgBA,OAdA1U,qBAAU,WACR,OAAQoB,GACN,KAAK,KAEH,YADAsT,EAAgB,IAElB,IAAK,sBAEH,YADAA,EAAgB,uBAElB,QAEE,YADAA,EAAgB,8CAGnB,CAACtT,IAGF,qCACE,cAAC,EAAD,CACEmD,MAAM,iEAER,uBAAMqH,SAAU,SAACpI,GACfA,EAAM4H,iBACNQ,KAFF,UAIE,cAAC,EAAD,CACEnB,UAAU,mDACVvF,KAAM,cAAC,IAAD,CAAiBA,KAAM8F,MAC7BN,KAAK,WACLpD,GAAG,WACH5D,KAAK,WACLtD,MAAOuU,EAAO9C,SACdjH,SAAUiK,IAEM,KAAjBJ,GAAuB,mBAAGpR,UAAU,QAAb,SAAsBoR,IAC9C,wBAAQpR,UAAU,kBAAlB,mGCkCOgS,GAhFO,SAAC,GAOhB,IANLR,EAMI,EANJA,aACAF,EAKI,EALJA,OACA/I,EAII,EAJJA,SACAxK,EAGI,EAHJA,MACA+Q,EAEI,EAFJA,OACAmD,EACI,EADJA,OAEA,EAAwCzV,mBAAS,IAAjD,mBAAO4U,EAAP,KAAqBC,EAArB,KAyBA,OAvBA1U,qBAAU,WACR,GAAc,OAAVoB,EAKJ,OAAQA,EAAMqS,MACZ,KAAK,KAEH,YADAiB,EAAgB,IAElB,IAAK,sBAEH,YADAA,EAAgB,uBAElB,QAEE,YADAA,EAAgB,gDAZlBA,EAAgB,MAejB,CAACtT,IAEJpB,qBAAU,WACR,OAAO,kBAAMsV,OACZ,IAGD,qCACE,cAAC,EAAD,CACE/Q,MAAM,qDAER,uBAAMqH,SAAU,SAACpI,GACfA,EAAM4H,iBACNQ,KAFF,UAIE,cAAC,EAAD,CACEnB,UAAU,iCACVvF,KAAM,cAAC,IAAD,CAAiBA,KAAMqQ,MAC7B7K,KAAK,WACLpD,GAAG,WACH5D,KAAK,WACLtD,MAAOuU,EAAOhD,SACd/G,SAAUiK,IAEZ,cAAC,EAAD,CACEpK,UAAU,mDACVvF,KAAM,cAAC,IAAD,CAAiBA,KAAM8F,MAC7BN,KAAK,WACLpD,GAAG,WACH5D,KAAK,WACLtD,MAAOuU,EAAO9C,SACdjH,SAAUiK,IAEZ,cAAC,EAAD,CACEpK,UAAU,uCACVvF,KAAM,cAAC,IAAD,CAAiBA,KAAM6P,MAC7BzN,GAAG,QACH5D,KAAK,QACLtD,MAAOuU,EAAO/C,MACdhH,SAAUiK,EACVlK,YAAY,yCAEI,KAAjB8J,GAAuB,mBAAGpR,UAAU,QAAb,SAAsBoR,IAC9C,wBAAQpR,UAAU,kBAClBW,MAAO,CAACmE,MAAO,QAASJ,WAAY,UAAWqB,OAAQ,SACvD/E,SAA8B,KAApBsQ,EAAO9C,UAAoC,KAAjB8C,EAAO/C,OAAoC,KAApB+C,EAAOhD,SAFlE,SAGc,YAAXQ,EAAuB,wCAA4B,YAAXA,EAAuB,eAAO,4DCiClEqD,GA9FG,WAChB,IAAQ1V,EAASiM,qBAAWvM,GAApBM,KACR,EAA4BD,mBAAS,CACnC+R,MAAO9R,EAAK8R,OAAS,GACrBC,SAAU,GACVC,YAAa,GACbH,SAAU7R,EAAKwT,aAAe,GAC9BvB,UAAWjS,EAAK2V,UAAY,KAL9B,mBAAOd,EAAP,KAAeC,EAAf,KAOA,EAQIlD,EAAQiD,EAAOhD,SAAUgD,EAAO/C,MAAO+C,EAAO9C,SAAU8C,EAAO7C,aAPjE4D,EADF,EACEA,QACAtU,EAFF,EAEEA,MACA+Q,EAHF,EAGEA,OACAiC,EAJF,EAIEA,kBACAC,EALF,EAKEA,qBACAC,EANF,EAMEA,oBACAC,EAPF,EAOEA,YAGI1N,EAAUC,cAEV+N,EAAe,SAAAC,GACnB,MAAwBA,EAAErR,OAAlBC,EAAR,EAAQA,KAAMtD,EAAd,EAAcA,MACdwU,GAAU,SAAArP,GAAI,kCAAUA,GAAV,kBAAiB7B,EAAOtD,QAOxC,OAJKN,GACH+G,EAAQ3F,KAAK,WAIb,qBAAKmC,UAAU,aAAf,SACE,qBAAKA,UAAU,mBAAmBW,MAAO,CAACE,MAAO,MAAO2L,OAAQ,UAAhE,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8F,OAAK,EAAC/F,KAAK,cAAlB,SACE,gCACE,cAAC,EAAD,CACErL,MAAM,mCAER,qBAAKlB,UAAU,eAAf,SACI,eAAC,IAAD,CAAMoO,GAAG,2BAA2BpO,UAAU,mBAA9C,UACE,oFAAqB,cAAC,IAAD,CAAiB6B,KAAM+D,IAAc5F,UAAU,cAG1E,qBAAKA,UAAU,eAAf,SACE,eAAC,IAAD,CAAMoO,GAAG,8BAA8BpO,UAAU,mBAAjD,UACE,wHAA2B,cAAC,IAAD,CAAiB6B,KAAM+D,IAAc5F,UAAU,cAG9E,qBAAKA,UAAU,eAAf,SACE,eAAC,IAAD,CAAMoO,GAAG,6BAA6BpO,UAAU,kBAAhD,UACE,cAAC,IAAD,CAAiB6B,KAAMiH,MADzB,qFAON,cAAC,IAAD,CAAOwJ,OAAK,EAAC/F,KAAK,2BAAlB,SACE,cAAC,GAAD,CACEiF,aAAcA,EACdF,OAAQA,EACRe,QAASA,EACT9J,SAAUwI,EACVhT,MAAOA,EACP+Q,OAAQA,EACRmD,OAAQf,MAIZ,cAAC,IAAD,CAAOoB,OAAK,EAAC/F,KAAK,8BAAlB,SACE,cAAC,GAAD,CACEiF,aAAcA,EACda,QAASA,EACTf,OAAQA,EACR/I,SAAUyI,EACVjT,MAAOA,EACP+Q,OAAQA,MAIZ,cAAC,IAAD,CAAOwD,OAAK,EAAC/F,KAAK,6BAAlB,SACE,cAAC,GAAD,CACEiF,aAAcA,EACdF,OAAQA,EACR/I,SAAU0I,EACVlT,MAAOA,cCpDNwU,GAjDE,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAC7B,EAAkCjW,mBAAS,IAA3C,mBAAOkW,EAAP,KAAkBC,EAAlB,KACA,EAA8BnW,mBAAS,IAAvC,mBAAOoW,EAAP,KAAgBC,EAAhB,KAQAlW,qBAAU,WACRkW,EAAW,IAAMC,KACjB9U,QAAQC,IAAI2U,GAPRH,GACFE,EAAaF,EAASM,OAAO,GAAGC,iBAQlC,CAACP,IAEH,IAAMK,EAAiB,WACrB,OAAOvN,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBwN,SAAS,KAKrD,OACE,sBAAKtS,MAAO,CAAC6D,SAAU,YAAvB,UACE,qBAAKxE,UAAU,aAAaW,MAAO,CAAC4D,gBAAgB,GAAD,OAAKqO,IAAxD,SACE,qBAAK5S,UAAU,OAAf,SAAuB0S,MAEzB,qBAAK1S,UAAU,YAAf,SACE,+BACA,6BACE,cAAC,IAAD,CACEoO,GAAG,cACHpO,UAAU,OACVe,QAAS,kBAAMyR,KAHjB,oDAQF,6BACE,cAAC,IAAD,CAASpE,GAAG,WAAWpO,UAAU,OAAOe,QAAS,kBAAMyR,KAAvD,uDC4BKU,GA5DH,SAAC,GAIN,IAHLnS,EAGI,EAHJA,QACAoS,EAEI,EAFJA,WAEI,IADJC,cACI,SACJ,EAAoC5W,mBAAS,UAA7C,mBAAO6W,EAAP,KAAmBC,EAAnB,KACMC,EAAY,wCAA0CJ,GAAc,QACtEK,EAAWC,cACPhX,EAASiM,qBAAWvM,GAApBM,KAiBR,OAfAE,qBAAU,WAEJyW,GAKsB,MAAtBI,EAASE,SAJXJ,EAAc,UAKdA,EAAc,kBAKf,CAACE,EAAUJ,IAET3W,EAKH,wBAAQuD,UAAWqT,EAAY1S,MAAO,CAAC+D,WAAY,WAAnD,SACE,sBAAK1E,UAAU,eAAf,UACE,sBAAKA,UAAU,OAAf,UACA,cAAC,IAAD,CAAMoO,GAAG,IAAIpO,UAAU,OAAvB,gCAGA,qBAAKW,MAAO,CAACgE,OAAQ,GAAI9D,MAAO,EAAG0D,gBAAiB,QAAS3D,WAAY,GAAIuF,YAAa,MAC1F,cAAC,IAAD,CAAMiI,GAAG,OAAOpO,UAAU,OAA1B,6EAKA,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,GAAD,CAAUwS,UAAW,kBAAM,MAAOC,SAAUhW,EAAKwT,gBAEnD,yBACEjQ,UAAWuT,EACXlT,KAAK,cACLU,QAASA,EAHX,UAKE,yBACA,oCA1BD,MC+EI4S,GAxGA,WACb,MAAwCnX,mBAAS,IAAjD,mBAAO4U,EAAP,KAAqBC,EAArB,KACA,EAA4B7U,mBAAS,CAAC8R,SAAU,GAAIC,MAAO,GAAIC,SAAU,KAAzE,mBAAO8C,EAAP,KAAeC,EAAf,KACM/N,EAAUC,cAEhB,EAAuC4K,EAAQiD,EAAOhD,SAAUgD,EAAO/C,MAAO+C,EAAO9C,UAA7EM,EAAR,EAAQA,OAAQ/Q,EAAhB,EAAgBA,MAAO8S,EAAvB,EAAuBA,aACfpU,EAASiM,qBAAWvM,GAApBM,KAORE,qBAAU,WACM,OAAVoB,GACJC,QAAQC,IAAIF,EAAMG,WACjB,CAACH,IAEJ,IAAMyT,EAAe,SAAAC,GACnB,MAAwBA,EAAErR,OAAlBC,EAAR,EAAQA,KAAMtD,EAAd,EAAcA,MACdwU,GAAU,SAAArP,GAAI,kCAAUA,GAAV,kBAAiB7B,EAAOtD,QAkCxC,OA/BAJ,qBAAU,WACJF,GACF+G,EAAQ3F,KAAK,UAEd,CAACpB,IAEJE,qBAAU,WACR,GAAc,OAAVoB,EAKJ,OAAQA,EAAMqS,MACZ,KAAK,KAEH,YADAiB,EAAgB,IAElB,IAAK,qBAEH,YADAA,EAAgB,mIAElB,IAAK,4BAEH,YADAA,EAAgB,gHAElB,IAAK,qBAEH,YADAA,EAAgB,4HAElB,QAEE,YADAA,EAAgB,4KAlBlBA,EAAgB,MAqBjB,CAACtT,IAGF,sBAAKiC,UAAU,SAASW,MAAO,CAACiE,UAAW,UAA3C,UACE,sBAAKjE,MAAO,CAACwD,QAAS,OAAQC,cAAe,MAAOC,eAAgB,SAAU8B,YAAa,KAA3F,UACE,qBAAKxF,MAAO,CAACwD,QAAS,OAAQsI,aAAc,GAAIzG,SAAU,GAAI1B,WAAY,UAA1E,SACE,cAAC,IAAD,CAAM8J,GAAG,UAAT,wCAEF,cAAC,EAAD,CACAlN,MAAM,4CAGR,uBAAMP,MAAO,CAACwD,QAAS,gBAAiBoE,SAxDvB,SAACkJ,GACpBA,EAAE1J,iBACF8I,KAsDE,UACA,cAAC,EAAD,CACIzJ,UAAU,iCACVnD,GAAG,WACH5D,KAAK,WACLiH,YAAY,iCACZvK,MAAOuU,EAAOhD,SACd/G,SAAUiK,EACV3P,KAAM,cAAC,IAAD,CAAiBA,KAAMqQ,QAE/B,cAAC,EAAD,CACE9K,UAAU,6CACVnD,GAAG,QACH5D,KAAK,QACLiH,YAAY,6CACZvK,MAAOuU,EAAO/C,MACdhH,SAAUiK,EACV3P,KAAM,cAAC,IAAD,CAAiBA,KAAM6P,QAE/B,cAAC,EAAD,CACEtK,UAAU,iCACVnD,GAAG,WACH5D,KAAK,WACLgH,KAAK,WACLtK,MAAOuU,EAAO9C,SACdjH,SAAUiK,IAEM,KAAjBJ,GAAuB,mBAAGpR,UAAU,QAAb,SAAsBoR,IAC9C,wBACEpR,UAAU,kBACVW,MAAO,CAAC4D,gBAAiB,UAAWoN,YAAa,QAAS1M,aAAc,GAAI2M,YAAa,GACzF5Q,SAA8B,KAApBsQ,EAAOhD,UAAuC,KAApBgD,EAAO9C,UAAoC,KAAjB8C,EAAO/C,MAHvE,SAKc,YAAXO,EAAuB,wCAA4B,YAAXA,EAAuB,eAAO,gDClFlE8E,GAlBI,SAAC,GAIb,IAHL3K,EAGI,EAHJA,OACAC,EAEI,EAFJA,UACA+E,EACI,EADJA,cAOA,OACE,sBAAKjO,UAAWiJ,EAAS,mBAAqB,cAA9C,UACE,cAAC,GAAD,CAAKlI,QAASkN,EAAekF,WAAYlK,EAAQmK,QAAQ,IACzD,cAAC,GAAD,CAAUZ,UAPI,WAChBtJ,GAAU,UCwHC2K,GApGH,WACV,MAA0CrX,mBAAS,IAAnD,mBAAO0P,EAAP,KAAsBb,EAAtB,KACA,EAAoC7O,oBAAS,GAA7C,mBAAO2W,EAAP,KAAmBW,EAAnB,KAEMtQ,EAAUC,cACRhH,EAASiM,qBAAWvM,GAApBM,KACAS,EAAUD,EAAmBR,GAA7BS,MACAkB,EAAcD,EAAwB1B,GAAtC2B,UACAQ,EAAaD,IAAbC,SAERjC,qBAAU,WACJF,GACJ4O,EAAiB,MAChB,CAAC5O,IAEJ,IAAMwR,EAAgB,SAAC9N,GACrB,OAAQA,EAAMC,OAAOC,MACnB,IAAK,OACH,OAAI5D,OACF+G,EAAQ3F,KAAK,aAGf2F,EAAQ3F,KAAK,KAGf,IAAK,cAEH,YADAiW,GAAc,SAAA5R,GAAI,OAAKA,KAEzB,QACE,SAQN,OAJKzF,GACH+G,EAAQ3F,KAAK,WAIb,sBAAKmC,UAAU,MAAf,UACE,cAAC,GAAD,CACEe,QAASkN,EACTkF,WAAYA,IAEd,cAAC,GAAD,CACElK,OAAQkK,EACRjK,UAAW4K,EACX7F,cAAeA,IAEjB,eAAC,IAAD,WACE,cAAC,IAAD,CAAO1B,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,+BACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,+BACE,cAAC,GAAD,QAGJ,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,EAAD,CACExL,QAASkN,MAGb,cAAC,IAAD,CAAO1B,KAAK,eAAZ,SACE,cAAC,EAAD,CACExL,QAASkN,MAGb,cAAC,IAAD,CAAO1B,KAAK,OAAZ,SACE,+BACE,cAAC,EAAD,CACExL,QAASkN,EACT/Q,MAAOA,EACPkB,UAAWA,EACX8N,cAAeA,EACfb,iBAAkBA,QAIxB,cAAC,IAAD,CAAOkB,KAAK,IAAZ,SACE,+BACE,cAAC,EAAD,CACE3N,SAAUA,EACVyM,iBAAkBA,EAClBa,cAAeA,eCrH7B6H,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,UAEE,cAAC,GAAD,UAIN3N,SAAS4N,eAAe,W","file":"static/js/main.158f04b5.chunk.js","sourcesContent":["/**\n * Initialize firebase authentication and firestore.\n */\n\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/app';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyB25ZqbIrDuXWUokLFcsbltpjUf5pjhb-w\",\n  authDomain: \"flashcardapp-d3306.firebaseapp.com\",\n  databaseURL: \"https://flashcardapp-d3306.firebaseio.com\",\n  projectId: \"flashcardapp-d3306\",\n  storageBucket: \"flashcardapp-d3306.appspot.com\",\n  messagingSenderId: \"635798969664\",\n  appId: \"1:635798969664:web:562fb322eeb9d31667eea5\",\n  measurementId: \"G-XSQ0TX77TY\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth=firebase.auth();\nexport const db=firebase.firestore();\nexport const fb=firebase;\n\nexport default { firebaseConfig }","/**\n * Context Provider for the current user.\n */\n\nimport React, {useState, useEffect} from 'react';\nimport { auth } from '../firebase/firebaseIndex';\n\nexport const firebaseAuth = React.createContext();\n\nconst AuthProvider = (props) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsub = auth.onAuthStateChanged((user) => {\n      user ? setUser(user) : setUser(null);\n    });\n\n    return () => unsub();\n  });\n\n  return (\n    <firebaseAuth.Provider\n      value={{\n        user\n      }}\n    >\n      {props.children}\n    </firebaseAuth.Provider>\n  )\n}\n\nexport default AuthProvider;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnDecksSnapshot = (user) => {\n  const db = firebase.firestore();\n  const [decks, setDecks] = useState([]);\n\n  // Get decks from collection where owner is the current user.\n  useEffect(() => {\n    if (!user) {\n      setDecks([]);\n      return;\n    }\n\n    let ref = db.collection('decks');\n    let unsubscribe = ref.where(\"owner\", \"==\", user.uid).onSnapshot((snapshot) => {\n      let arr = [];\n      snapshot.forEach(deck => arr.push(deck.data()));\n      setDecks(arr);\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, [user]);\n\n  return { decks };\n}\n\nexport default useOnDecksSnapshot;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnSavedDecksSnapshot = (user) => {\n    const db = firebase.firestore();\n    const [saveDecks, setDecks] = useState([]);\n    useEffect(() => {\n      if (!user) {\n        setDecks([]);\n        return;\n      }\n\n      let unsubscribe = db.collection('users').doc(user.uid).onSnapshot((snapshot) => {\n        let arr = [];\n        snapshot.data().save_decks.forEach(deck => arr.push(deck));\n        setDecks(arr)\n        localStorage.setItem('save_decks', JSON.stringify(arr))\n      }, error => console.log(\"Error: \", error.message))\n      return () => unsubscribe();\n    }, [user]);\n    return { saveDecks };\n  }\n\n  export default useOnSavedDecksSnapshot;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnAllDecksSnapshot = () => {\n  const db = firebase.firestore();\n  const [allDecks, setDecks] = useState([]);\n\n  useEffect(() => {\n    let ref = db.collection('decks');\n    let unsubscribe = ref.onSnapshot((snapshot) => {\n      let arr = [];\n      snapshot.forEach(deck => arr.push(deck.data()));\n      setDecks(arr);\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, []);\n\n  return { allDecks };\n}\n\nexport default useOnAllDecksSnapshot;","/**\n * A modular carousel component with wrap-around and transitions.\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\n\n/* If WRAP_BUFFER is too short, wrap-around transitions\n   will be set too soon. */\nconst WRAP_BUFFER = 50;\n\nconst Carousel = ({\n  leftButtonText=\"<\",\n  rightButtonText=\">\",\n  animTime=.5,\n  items,\n  previousCallback,\n  nextCallback,\n  showButtons=true\n}) => {\n  const [index, setIndex] = useState(0);\n  const [carouselItems, setCarouselItems] = useState([]);\n  const [canSlide, setCanSlide] = useState(true);\n  const carousel = useRef(null);\n\n  // Generates the carousel items, with a cloned copy of the first and last\n  // item at the beginning and end, respectively. This facilitates\n  // smooth wrap-around transitions.\n  useEffect(() => {\n    let modifiedItems = items.map((ele) => {\n      return (\n        <div \n          className=\"carousel__item\"\n          key={ele.key}\n        >\n          {ele}\n        </div>\n      );\n    });\n\n    setCarouselItems(modifiedItems);\n  }, [items]);\n\n  const handleClick = (event) => {\n    if (!canSlide) return;\n    if (event.target.name === \"right\") {\n      if (index == carouselItems.length - 1) { return }\n      setIndex(idx => idx + 1);\n      if (nextCallback !== undefined) {\n        nextCallback(index-1);\n      }\n    } else if (event.target.name === \"left\") {\n      if (index == 0) { return }\n      setIndex(idx => idx - 1);\n      if (previousCallback !== undefined) {\n        previousCallback(index-1);\n      }\n    }\n    setCanSlide(false);\n    setTimeout(() => setCanSlide(true), animTime * 1000 + WRAP_BUFFER);\n  }\n\n  return (\n    <div className=\"carousel\">\n      <div \n        ref={carousel}\n        className=\"carousel__inner\"\n        style={{ \n          marginLeft: \"calc(-100% * \" + index + \")\",\n          width: (carouselItems.length * 100) + \"%\",\n          transition: \"margin \" + animTime + \"s\",\n       }}\n      >\n        {carouselItems}\n      </div>\n      <div className=\"spacer\"></div>\n      {showButtons &&\n        <>\n          {index > 0 && <button \n            className=\"btn-carousel left\"\n            onClick={(event) => handleClick(event)}\n            name=\"left\"\n            disabled={!canSlide}\n          >{leftButtonText}</button>}\n          {index < carouselItems.length - 1 && <button \n            className=\"btn-carousel right\"\n            onClick={(event) => handleClick(event)}\n            name=\"right\"\n            disabled={!canSlide}\n          >{rightButtonText}</button>}\n        </>\n      }\n    </div>\n  );\n}\n\nexport default Carousel;","/**\n * Displays a header with a title and optional child elements.\n */\n\nimport React from 'react';\n\nconst Header = ({\n  title,\n  children\n}) => {\n  return (\n    <header className=\"card-header\">\n      <p>\n        {title}\n      </p>\n      <div>\n        {children}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","/**\n * Displays a simple p tag.\n */\n\nimport React from 'react';\n\nconst CardContent = ({\n  text\n}) => {\n  return (\n    <>\n      <p className=\"content\">\n        {text}\n      </p>\n    </>\n  );\n}\n\nexport default CardContent;","/**\n * Displays a flash card and its content.\n */\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReply, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport Header from '../Header';\nimport CardContent from './CardContent';\n\nconst FlippableCard = ({\n  onClick,\n  frontTitle,\n  backTitle,\n  frontText,\n  backText,\n  isFlipped,\n  setIsFlipped,\n}) => {\n  const header = (\n    <Header title={frontTitle}>\n      <button \n        className=\"btn btn-icon-small\"\n        name=\"exit\"\n        onClick={onClick}\n      >\n        <FontAwesomeIcon icon={faTimes} />&nbsp;Close\n      </button>\n    </Header>\n  );\n\n  const backHeader = React.cloneElement(header, { title: backTitle });\n\n  const footer = (\n    <footer>\n      <button \n        className=\"curl\"\n        name=\"toggle\"\n        onClick={ () => setIsFlipped(prev => !prev) }\n      >    \n        <FontAwesomeIcon icon={faReply} size=\"2x\" className=\"icon\" />\n      </button>\n    </footer>\n  );\n \n  return (\n    <div className={isFlipped ? \"flippable flipped\" : \"flippable\"}>\n      <div className=\"flippable__inner\">\n        <div className=\"flippable__content front\">\n          {header}\n            <CardContent text={frontText} />\n          {footer}\n        </div>\n        <div className=\"flippable__content back\">\n          {backHeader}\n            <CardContent text={backText} />\n          {footer}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FlippableCard;","/**\n * A simple loading icon.\n */\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nconst Spinner = ({\n  size=\"1x\"\n}) => {\n  return <FontAwesomeIcon icon={faSpinner} size={size} className=\"spinner\"/>\n}\n\nexport default Spinner;","/**\n * Handles logic for getting the selected deck and cards.\n * Generates FlippableCards for each card to be shown, and \n * renders them in a Carousel.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport firebase from 'firebase';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Carousel from '../Carousel';\nimport FlippableCard from './FlippableCard';\nimport Spinner from '../Spinner';\nimport { faRandom, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst Deck = ({\n  onClick,\n}) => {\n  const [cards, setCards] = useState([]);\n  const [title, setTitle] = useState('');\n  const [hashCards, setHashCards] = useState(null);\n  const [isCardFlipped, setIsCardFlipped] = useState(false);\n  const [canView, setCanView] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const { hash } = useParams();\n  const [shuffle, setShuffle] = useState(0);\n  const [cardShuffle, setCardShuffle] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    setIsLoaded(false);\n    setHashCards(null);\n    setCards(null);\n\n    console.log(hash)\n    if (hash === undefined) return;\n\n    const db = firebase.firestore();\n\n    db.collection('decks').doc(hash).get()\n      .then(snapshot => {\n        setIsLoaded(true);\n      })\n      .catch(error => {\n        setIsLoaded(true);\n        console.log(\"Error: \", error.message)\n      })\n\n    let ref = db.collection('decks').doc(hash);\n    ref.get()\n      .then(snapshot => {\n        let arr = [];\n        snapshot.data().cards?.forEach(item => arr.push(item));\n        setHashCards(arr);\n        setTitle(snapshot.data().title)\n      })\n      .catch(error => console.log(\"Error: \", error.message))\n  }, [hash]);\n\n  useEffect(() => {\n    setIsLoaded(false);\n    let _cards = [];\n\n    if (hashCards != null) {\n      _cards = hashCards;\n    } else {\n      _cards = [];\n    }\n\n    if (_cards.length > 0) {\n      setCards(_cards.map((ele) => {\n        return (\n          <FlippableCard\n            key={ele.id}\n            frontTitle=\"Front\"\n            backTitle=\"Back\"\n            frontText={ele.front}\n            backText={ele.back}\n            onClick={onClick}\n            isFlipped={isCardFlipped}\n            setIsFlipped={setIsCardFlipped}\n          />\n        )\n      }));\n      setCardShuffle(_cards.map((ele) => {\n        return (\n          <FlippableCard\n            key={ele.id}\n            frontTitle=\"Front\"\n            backTitle=\"Back\"\n            frontText={ele.front}\n            backText={ele.back}\n            onClick={onClick}\n            isFlipped={isCardFlipped}\n            setIsFlipped={setIsCardFlipped}\n          />\n        )\n      }));\n      setIsLoaded(true);\n    }\n\n  }, [isCardFlipped, onClick, hashCards]\n  );\n\n  if (!isLoaded) return (\n    <main>\n      <div className=\"container center\">\n        <Spinner />\n      </div>\n    </main>\n  );\n\n  if (!cards) return (\n    <div className=\"container center\">\n      <p>We couldn't find this deck. :(</p>\n    </div>\n  )\n\n  if (!canView || cards.length === 0) return (\n    <div className=\"container center\">\n      <p>This deck is either private or has no cards! If you are the owner, you can view it and edit it from your dashboard.</p>\n    </div>\n  );\n\n  const slideCallback = () => {\n    setIsCardFlipped(false);\n  }\n\n  const shuffleCard = (array) => {\n    let currentIndex = array.length, randomIndex;\n\n    while (currentIndex != 0) {\n\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ width: 200, display: 'flex', flexDirection: 'column', justifyContent: 'flex-end', alignItems: 'center', backgroundColor: '#DADCE2' }}>\n        <div style={{\n          position: 'absolute',\n          top: 100\n        }}>\n          {title}\n        </div>\n        <div style={{\n          background: shuffle == 0 ? 'wheat' : 'green',\n          height: 30,\n          width: 100,\n          textAlign: 'center',\n          zIndex: 1,\n          color: shuffle == 0 ? 'black' : 'white',\n          lineHeight: 2,\n          verticalAlign: 'center',\n          borderRadius: 15,\n        }} onClick={(event) => {\n          setShuffle(0)\n        }}>ソート済み</div>\n        <div style={{\n          background: shuffle != 0 ? 'wheat' : 'green',\n          height: 30,\n          width: 100,\n          textAlign: 'center',\n          zIndex: 1,\n          color: shuffle != 0 ? 'black' : 'white',\n          marginTop: 50,\n          marginBottom: 100,\n          lineHeight: 2,\n          verticalAlign: 'center',\n          borderRadius: 15,\n        }} onClick={(event) => {\n          setCardShuffle(shuffleCard(cardShuffle))\n          setShuffle(prev => prev + 1)\n        }}>ミックス</div>\n      </div>\n      <Carousel\n        items={shuffle != 0 ? cardShuffle : cards}\n        leftButtonText={<FontAwesomeIcon icon={faAngleLeft} />}\n        rightButtonText={<FontAwesomeIcon icon={faAngleRight} />}\n        animTime={.3}\n        previousCallback={slideCallback}\n        nextCallback={slideCallback}\n        showButtons={true}\n      />\n      <div style={{ width: 200, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', backgroundColor: '#DADCE2' }}>\n        <button\n          onClick={() => {\n            if (cards.length >= 4) {\n              history.push('/app/test/'+hash)\n            } else {\n              window.alert('テストを作成するには、セットに少なくとも4枚のカードが必要です')\n            }\n          }}\n          style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30 }}\n        >\n          <><FontAwesomeIcon icon={faPlus} style={{ marginRight: 5 }} /> 復習</>\n        </button>\n        <button\n          onClick={() => {\n            window.alert('機能は開発中です')\n          }}\n          style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30 }}\n        >\n          <><FontAwesomeIcon icon={faPlus} style={{ marginRight: 5 }} /> 履歴</>\n        </button>\n      </div>\n    </div>\n\n  );\n}\n\nexport default Deck;","/**\n * Methods for accessing the firestore database:\n * \n * createDeck\n * deleteDeck\n * updateDeck\n * createCard\n * updateCard\n * deleteCard\n */\n\nimport { db } from './firebaseIndex';\nimport firebase from 'firebase';\n\nexport const dbMethods = {\n\n  createDeck: (user, title, description, cards) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const document = db.collection('decks').doc();\n\n    const newDeck = {\n      id: document.id,\n      numCards: cards.length,\n      title,\n      description,\n      owner: user.uid,\n      cards: cards\n    }\n\n    document.set(newDeck)\n    .then(console.log(\"Created new deck.\"))\n    .catch(err => {\n      console.error(\"Error creating deck: \", err.message);\n    });\n  },\n\n  deleteDeck: (user, deckId) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    db.collection('decks').doc(deckId).delete()\n    .then(console.log(\"Deck successfully deleted.\"))\n    .catch(err => {\n      console.error(\"Error deleting deck: \", err.message);\n    });\n  },\n\n  saveDeck: (user, deck) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n    return db.collection('users').doc(user.uid).update({\n      save_decks: firebase.firestore.FieldValue.arrayUnion(deck)\n    })\n    .then(() => {\n      console.log(\"Updated deck with id: \", deck.id);\n    })\n    .catch(err => {\n      console.error(\"Error updating document: \", err.message);\n      \n    });\n  },\n\n  unsaveDeck: (user, deck) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n    return db.collection('users').doc(user.uid).update({\n      save_decks: firebase.firestore.FieldValue.arrayRemove({\n        id: deck.id, \n        numCards: deck.numCards, \n        owner: deck.owner, \n        title: deck.title, \n        description: deck.description,\n        cards: deck.cards\n      })\n    })\n    .then(() => {\n      console.log(\"Updated deck with id: \", deck.id);\n    })\n    .catch(err => {\n      console.error(\"Error updating document: \", err.message);\n      \n    });\n  },\n\n  updateDeck: (user, deckId, title, description, cards) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const updatedDeck = {\n      title,\n      description,\n      cards,\n      numCards: cards.length,\n    }\n\n    return db.collection('decks').doc(deckId).update(updatedDeck)\n    .then(() => {\n      console.log(\"Updated deck with id: \", deckId);\n      \n    })\n    .catch(err => {\n      console.error(\"Error updating document: \", err.message);\n      \n    });\n  },\n}","/**\n * Displays a text or password input, dependinding on \n * the type prop. The password input can toggle between\n * password and text types.\n */\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash, faLock } from '@fortawesome/free-solid-svg-icons';\n\nconst TextInput = ({\n  labelText,\n  icon=null,\n  type=\"text\",\n  id=\"\",\n  name=\"\",\n  placeholder=\"\",\n  value,\n  onChange,\n  autocomplete=\"on\"\n}) => {\n  const [isHidden, setIsHidden] = useState(true);\n\n  const toggleHidden = (event) => {\n    event.preventDefault();\n    setIsHidden(prev => !prev);\n  }\n\n  if (icon === null && type===\"password\")\n    icon = <FontAwesomeIcon icon={faLock} />\n\n  return (\n    <div className=\"input-block\">\n      <label htmlFor={id}>{labelText}</label>\n      <div className=\"input-row\">\n        {icon}\n        <input \n          type={type === \"password\" ? isHidden ? \"password\" : \"text\" : type}\n          name={name}\n          id={id}\n          value={value}\n          onChange={onChange}\n          style={{outline: \"none\"}}\n          autoComplete={autocomplete}\n        >\n        </input>\n        {type === \"password\" &&\n          <button\n            type=\"button\"\n            className=\"btn btn-icon\"\n            onClick={toggleHidden}\n          >\n            {isHidden ?\n              <FontAwesomeIcon icon={faEye} />\n            :\n              <FontAwesomeIcon icon={faEyeSlash} />\n            }\n          </button>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default TextInput;","/**\n * Displays a heading with a subtitle.\n */\n\nimport React from 'react';\n\nconst PageHeading = ({\n  title,\n  styles = {textAlign: 'center'}\n}) => {\n  let titleElement = null;\n  titleElement=<h1 style={styles}>{title}</h1>\n\n  return (\n    <header className=\"page-heading\">\n      {titleElement}\n    </header>\n  )\n}\n\nexport default PageHeading;","/**\n * Handles displaying each card editor.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nconst CardEditor = ({\n  index,\n  card,\n  onSubmit,\n  onUpdate,\n  onDelete\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n\n  useEffect(() => {\n    setFront(card.front);\n    setBack(card.back);\n  }, [card])\n\n  const handleInput = (event) => {\n    if (event.target.name === \"front\") {\n      setFront(event.target.value);\n    } else if (event.target.name === \"back\") {\n      setBack(event.target.value);\n    }\n  }\n\n  const updateCard = (event) => {\n    event.preventDefault();\n    console.log(\"Card to update: \", card.id);\n    onUpdate(index, front, back)\n    onSubmit();\n  }\n\n  const deleteCard = (event) => {\n    event.preventDefault();\n    onDelete(index)\n  }\n\n  return (\n    <form className=\"card-editor\" onSubmit={updateCard}>\n      <div className=\"input-block\">\n        <textarea\n          name=\"front\"\n          id={card.id + \"-front\"}\n          value={front}\n          onChange={handleInput}\n        />\n        <label htmlFor={card.id + \"-front\"}>Front</label>\n      </div>\n      <div className=\"input-block\">\n        <textarea\n          name=\"back\"\n          id={card.id + \"-back\"}\n          value={back}\n          onChange={handleInput}\n        />\n        <label htmlFor={card.id + \"-back\"}>Back</label>\n      </div>\n      <button className=\"btn\">Update</button>\n      <button className=\"btn btn-warning\"\n        onClick={deleteCard}\n      >\n        <FontAwesomeIcon icon={faTrash} /> Delete card\n      </button>\n    </form>\n  );\n}\n\nexport default CardEditor;","/**\n * Renders the toggleable card creator box.\n */\n\nimport React, { useState } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\n\nconst CardCreator = ({\n  onCreateCard\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n\n  const handleInput = (event) => {\n    if (event.target.name === \"front\") {\n      setFront(event.target.value);\n    } else if (event.target.name === \"back\") {\n      setBack(event.target.value);\n    }\n  }\n\n  const createCard = (event) => {\n    event.preventDefault();\n    console.log(\"Creating new card.\");\n    onCreateCard(front, back);\n    setFront(\"\");\n    setBack(\"\");\n    setIsOpen(false);\n  }\n\n  if (!isOpen) return (\n    <button className=\"btn btn-tertiary\"\n      onClick={() => setIsOpen(true)}\n    >\n      Add card <FontAwesomeIcon icon={faPlus} className=\"icon\" />\n    </button>\n  );\n\n  return (\n    <>\n      <button id=\"add\" className=\"btn btn-tertiary highlighted\"\n        onClick={() => setIsOpen(false)}\n      >\n        Add card <FontAwesomeIcon icon={faMinus} className=\"icon\"/>\n      </button>\n      <form className=\"card-editor\" onSubmit={createCard}>\n        <div className=\"input-block\">\n          <textarea\n            name=\"front\"\n            id=\"new-front\"\n            value={front}\n            onChange={handleInput}\n          />\n          <label htmlFor=\"new-front\">Front</label>\n        </div>\n        <div className=\"input-block\">\n          <textarea\n            name=\"back\"\n            id=\"new-back\"\n            value={back}\n            onChange={handleInput}\n            style={{outline: \"none\"}}\n          />        \n          <label htmlFor=\"new-back\">Back</label>\n        </div>\n        <button className=\"btn\">Create</button>\n      </form>\n    </>\n  );\n}\n\nexport default CardCreator;","/**\n * Generates and displays all the toggleable card editor boxes\n * in an accordion.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\n\nimport CardEditor from './decks-and-cards/CardEditor';\nimport CardCreator from './decks-and-cards/CardCreator';\n\nconst Accordion = ({\n  listCards,\n  onCards,\n}) => {\n  const [cards, setCards] = useState(listCards || []);\n  const [card, setCard] = useState(-1);\n  const [cardEditorElements, setCardEditorElements] = useState([]);\n\n  const handleClick = (event) => {\n    console.log(event.target.value)\n    setCard(prev => prev === event.target.value ? -1 : event.target.value);\n  }\n\n  const onCreateCard = (front, back) => {\n    let newCard = {front: front, back: back}\n    cards.push(newCard)\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  const onDeleteCard = (index) => {\n    cards.splice(index, 1);\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  const onUpdateCard = (index, front, back) => {\n    cards[index] = {front: front, back: back};\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  useEffect(() => {\n    setCards(listCards)\n  },[listCards])\n\n  useEffect(() => {\n    updateElements()\n  }, [card, cards]);\n\n  const updateElements = () => {\n    const elements = cards.map( (ele, index) => {\n      let classes = index === card ? \"btn btn-tertiary highlighted\" : \"btn btn-tertiary\";\n      console.log(index)\n      return (\n        <React.Fragment key={index} >\n          <button \n            className={classes}\n            value={index}\n            onClick={handleClick}\n          >\n            <span className=\"truncate\">\"{ele.front}\"</span> \n            {card === `${index}` ?\n              <FontAwesomeIcon icon={faAngleUp} />\n            :\n              <FontAwesomeIcon icon={faAngleDown} />\n            }\n          </button>\n          {card === `${index}` && \n            <CardEditor\n              index={index}\n              card={ele}\n              onSubmit={() => setCard(\"\")}\n              onDelete={onDeleteCard}\n              onUpdate={onUpdateCard}\n            />\n          }\n        </React.Fragment>\n      )\n    })\n\n    setCardEditorElements(elements);\n  }\n\n  return (\n    <>\n      {cardEditorElements}\n      <CardCreator\n        onCreateCard={onCreateCard}\n      />\n    </>\n  );\n}\n\nexport default Accordion;","/**\n * Handles the creation of new decks.\n */\n\nimport React, { useState, useContext } from 'react';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { useHistory } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook, faPaperclip } from '@fortawesome/free-solid-svg-icons';\n\nimport TextInput from '../TextInput';\nimport PageHeading from '../PageHeading';\nimport Accordion from '../Accordion';\n\nconst DeckCreator = () => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n  const [listCards, setListCards] = useState([])\n\n  const createDeck = () => {\n    dbMethods.createDeck(user, title, description, listCards);\n    setUpdateSuccess(true);\n    history.push(\"/app\");\n  }\n\n  const onUpdateCards = (cards) => {\n    setListCards(cards)\n  }\n\n  const onUpdateDecks = (event) => {\n    createDeck();\n  }\n\n  return (\n    <div style={{textAlign: 'left'}}>\n      <form \n      id=\"new-deck\" \n      onSubmit={createDeck}\n    >\n      <TextInput \n        labelText=\"題名\"\n        icon={<FontAwesomeIcon icon={faPaperclip} />}\n        id=\"title\"\n        name=\"title\"\n        value={title}\n        onChange={(event) => setTitle(event.target.value)}\n        autocomplete=\"off\"\n      />\n      <TextInput \n        labelText=\"説明\"\n        icon={<FontAwesomeIcon icon={faBook} />}\n        id=\"description\"\n        name=\"description\"\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n        autocomplete=\"off\"\n      />\n    </form>\n      <div>\n        <PageHeading \n          title=\"カード\"\n          styles={{textAlign: 'left'}}\n        />\n        <Accordion\n          listCards={listCards}\n          onCards={onUpdateCards}\n        />\n      </div>\n      <button className=\"btn btn-primary\" onClick={onUpdateDecks}>\n          {updateSuccess ? \"Success!\" : \"作成\" }\n      </button>\n    </div>\n  );\n}\n\nexport default DeckCreator;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { useHistory } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook, faHeading, faPaperclip } from '@fortawesome/free-solid-svg-icons';\n\nimport Accordion from '../Accordion';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\nimport firebase from 'firebase';\n\nconst DeckEditor = ({\n  deckToEdit,\n  setDeckToEdit,\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n  const localDeck = JSON.parse(localStorage.getItem('deck'))\n  const deck = deckToEdit || localDeck;\n  const [title, setTitle] = useState(deck.title);\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n  const [description, setDescription] = useState(deck.description);\n  const [listCards, setListCards] = useState([])\n\n  const updateDeck = () => {\n    dbMethods.updateDeck(user, deck.id, title, description, listCards)\n    setDeckToEdit({...deckToEdit, title});\n    setUpdateSuccess(true);\n    setTimeout(() => setUpdateSuccess(false), 3000);\n  }\n\n  const deleteDeck = (event) => {\n    event.preventDefault();\n    dbMethods.deleteDeck(user, deck.id);\n    history.push('/app');\n    setDeckToEdit(null);\n  }\n\n  const db = firebase.firestore();\n\n  useEffect(() => {\n    if (!deck) {\n      return\n    }\n    console.log(deck)\n    let ref = db.collection('decks').doc(deck.id);\n    ref.get()\n      .then(snapshot => {\n        let arr = [];\n        snapshot.data().cards?.forEach(item => arr.push(item));\n        setListCards(arr);\n      })\n      .catch(error => console.log(\"Error: \", error.message))\n  }, [])\n\n  const onUpdateCards = (cards) => {\n    setListCards(cards)\n  }\n\n  const onUpdateDecks = (event) => {\n    updateDeck();\n  }\n\n  return (\n    <div style={{textAlign: 'left'}}>\n      <PageHeading\n        title=\"セットを編集する\"\n        styles={{textAlign: 'left'}}\n      />\n      <form onSubmit={updateDeck}>\n        <TextInput \n          labelText=\"題名\"\n          icon={<FontAwesomeIcon icon={faPaperclip} />}\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          placeholder=\"New Deck\"\n          autocomplete=\"off\"\n        />\n        <TextInput \n        labelText=\"説明\"\n        icon={<FontAwesomeIcon icon={faBook} />}\n        id=\"description\"\n        name=\"description\"\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n        autocomplete=\"off\"\n        />\n      </form>\n      <div>\n        <PageHeading \n          title=\"カード\"\n          styles={{textAlign: 'left'}}\n        />\n        <Accordion\n          listCards={listCards}\n          onCards={onUpdateCards}\n        />\n      </div>\n      <button\n          className=\"btn btn-primary\"\n          onClick={onUpdateDecks}\n        >\n          {updateSuccess ? \"Success!\" : \"編集\" }\n        </button>\n      <div>\n        <PageHeading \n          title=\"デッキを削除する\"\n          styles={{textAlign: 'left'}}\n        />\n        <form onSubmit={deleteDeck}>\n          <button\n            className=\"btn btn-warning\"\n          >削除する</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default DeckEditor;","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faSave, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { db } from '../../firebase/firebaseIndex';\n\nconst SelectableDeck = ({\n  toggleDeck,\n  setSelectedDecks,\n  length,\n  deck,\n  setDeckToEdit,\n  mine\n}) => {\n  const history = useHistory();\n  const {user} = useContext(firebaseAuth)\n  const [saved, setSaved] = useState(false);\n  const savedDecksRaw = localStorage.getItem('save_decks')\n\n  useEffect(() => {\n    setSaved(isSaved())\n  },[])\n\n  const isSaved = () => {\n    if (!savedDecksRaw || savedDecksRaw.length == 0) {\n      return false\n    }\n    let savedDecks = JSON.parse(savedDecksRaw)\n    if (!savedDecks || savedDecks.length == 0) {\n      return false\n    }\n    let filterArray = savedDecks.filter(item => item.id == deck.id)\n    return (filterArray && filterArray.length > 0)\n  }\n\n  return (\n    <li style={{background: '#EAB2AE', marginBottom: 20, borderRadius: 10}}\n      // className={selectedDecks?.includes(id) ? \"selected\" : \"\"}\n      // onClick={(event) => {\n      //   event.stopPropagation();\n      //   toggleDeck(id);\n      // }}\n      // role=\"checkbox\"\n      // aria-checked={selectedDecks?.includes(id) ? \"true\" : \"false\"}\n    >\n      <div\n        onClick={() => {\n          history.push('/app/d/'+deck.id)\n        }}\n      >\n        {/* <input\n          name={id}\n          type=\"checkbox\"\n          checked={selectedDecks?.includes(id)}\n          onChange={() => null}\n        /> */}\n        <label htmlFor=\"checkbox\" className=\"truncate\">\n          <span></span>\n          <strong>{deck.title}</strong> ({length} {\"カード\"})\n          \n        </label>\n      </div>\n      <div className=\"button-row\">\n        {mine ? <button \n          className=\"btn btn-icon\"\n          style={{color: 'black'}}\n          onClick={(event) => {\n            event.stopPropagation();\n            setDeckToEdit();\n            localStorage.setItem('deck', JSON.stringify(deck));\n            history.push(\"/app/edit\");\n          }}\n        >\n          <FontAwesomeIcon icon={faEdit} /> 編集する\n        </button>\n        : <button \n        className=\"btn btn-icon\"\n        style={{color: 'black'}}\n        onClick={(event) => {\n          event.stopPropagation();\n          if (saved) {\n            console.log(deck)\n            dbMethods.unsaveDeck(user, deck)\n            setSaved(false)\n          } else {\n            dbMethods.saveDeck(user, deck)\n            setSaved(true)\n          }\n        }}\n      >\n        <FontAwesomeIcon icon={saved ? faTrash : faSave} /> {saved ? \"削除する\" : \"保存する\"}\n      </button>\n        }\n      </div>\n    </li>\n  );\n}\n\nexport default SelectableDeck;","import React, { useState, useEffect, useContext } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport SelectableDeck from './SelectableDeck';\n\nconst DeckList = ({\n  decks,\n  selectedDecks,\n  setSelectedDecks,\n  setDeckToEdit,\n}) => {\n  const [deckList, setDeckList] = useState([]);\n  const { user } = useContext(firebaseAuth);\n\n  // const toggleDeck = (deckId) => {\n  //   setSelectedDecks(decks => {\n  //     if (decks.includes(deckId)) {\n  //       return decks.filter(ele => ele !== deckId)\n  //     } else {\n  //       return [...decks, deckId];\n  //     }\n  //   });\n  // }\n\n  useEffect(() => {\n    if (!decks) {return}\n    setDeckList(decks.map(deck => {\n      return (\n        <SelectableDeck \n          key={deck.id}\n          // toggleDeck={toggleDeck}\n          // selectedDecks={selectedDecks}\n          length={deck.numCards}\n          // setSelectedDecks={setSelectedDecks}\n          deck={deck}\n          mine={user && deck.owner == user.uid}\n          setDeckToEdit={() => {\n            setDeckToEdit({ id: deck.id, title: deck.title, private: deck.private, description: deck.description });\n          }}\n        />\n      );}\n    ));\n  }, [decks]);\n\n  return (\n    <div className=\"deck-list\">\n      <ul>\n        {deckList.length > 0 ? \n          deckList\n        :\n          <p>セットがありません。 作成して開始してください！</p>\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default DeckList;"," import React, { useState, useContext, useEffect } from 'react';\n import { Link, Switch, Route, useHistory } from 'react-router-dom';\n import { firebaseAuth } from '../provider/AuthProvider';\n  \n import DeckList from './decks-and-cards/DeckList';\n import PageHeading from './PageHeading';\n \n const SavedDecks = ({\n   saveDecks,\n }) => {\n   const { user } = useContext(firebaseAuth);\n   const history = useHistory();\n \n   if (!user) {\n     history.push(\"/log-in\");\n   }\n \n   return (\n     <div className=\"dashboard\">\n         <Switch>\n           <Route path=\"/app/saved\">\n             <div style={{ display: 'flex' }}>\n               <div style={{ width: '100%', margin: '0 auto', paddingRight: 30 }}>\n                 <PageHeading\n                   title=\"保存したセット\"\n                 />\n                 <div>\n                   <DeckList\n                     decks={saveDecks}\n                   />\n                 </div>\n               </div>\n             </div>\n           </Route>\n         </Switch>\n     </div>\n   );\n }\n \n export default SavedDecks;","/**\n * Displays the dashboard page.\n */\n\n import React, { useState, useContext, useEffect } from 'react';\n import { Link, Switch, Route, useHistory } from 'react-router-dom';\n import { firebaseAuth } from '../provider/AuthProvider';\n \n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n import { faPlus } from '@fortawesome/free-solid-svg-icons';\n \n import DeckCreator from './decks-and-cards/DeckCreator';\n import DeckEditor from './decks-and-cards/DeckEditor';\n import DeckList from './decks-and-cards/DeckList';\n import PageHeading from './PageHeading';\n \n const CreatedDecks = ({\n   decks,\n   cards,\n }) => {\n   const [deckToEdit, setDeckToEdit] = useState(null);\n   const { user } = useContext(firebaseAuth);\n   const history = useHistory();\n \n   if (!user) {\n     history.push(\"/log-in\");\n   }\n \n   return (\n     <div className=\"dashboard\">\n         <Switch>\n           <Route path=\"/app/edit\">\n             <DeckEditor\n               deckToEdit={deckToEdit}\n               setDeckToEdit={setDeckToEdit}\n               cards={cards}\n             />\n           </Route>\n           <Route path=\"/app/create\">\n             <PageHeading \n               title=\"新セット\"\n             />\n             <DeckCreator />\n           </Route>\n           <Route path=\"/app/created\">\n             <div style={{ display: 'flex' }}>\n               <div style={{ width: '100%', margin: '0 auto', paddingRight: 30 }}>\n                 <PageHeading\n                   title=\"作ったセット\"\n                 />\n                 <div>\n                   <DeckList\n                     decks={decks}\n                     setDeckToEdit={setDeckToEdit}\n                   />\n                 </div>\n               </div>\n               <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', paddingTop: 100, paddingLeft: 60, width: 200}}>\n                 <button\n                   onClick={() => {\n                     history.push('/app/create')\n                   }}\n                   style={{color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30}}\n                 >\n                   <><FontAwesomeIcon icon={faPlus} style={{marginRight: 5}} /> 新作</>\n                 </button>\n               </div>\n             </div>\n           </Route>\n         </Switch>\n     </div>\n   );\n }\n \n export default CreatedDecks;","/**\n * Handles logic for getting the selected deck and cards.\n * Generates FlippableCards for each card to be shown, and \n * renders them in a Carousel.\n */\n\n import React, { useState, useEffect } from 'react';\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n import { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\n import firebase from 'firebase';\n \n import { useParams } from 'react-router-dom';\n \n import Carousel from '../Carousel';\n import FlippableCard from './FlippableCard';\n import Spinner from '../Spinner';\n \n const shuffleCard = (array) => {\n    let currentIndex = array.length, randomIndex;\n\n    while (currentIndex != 0) {\n\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n const Test = ({ \n   onClick,\n }) => {\n   const [cards, setCards] = useState([]);\n   const [hashCards, setHashCards] = useState(null);\n   const [isCardFlipped, setIsCardFlipped] = useState(false);\n   const [canView, setCanView] = useState(true);\n   const [isLoaded, setIsLoaded] = useState(false);\n   const { hash } = useParams();\n   const [correctAnswer, setCorrectAnswer] = useState([]);\n   const [selectedAnswer, setSelectedAnswer] = useState([]);\n   const [result, setResult] = useState();\n \n   useEffect(() => {\n     setIsLoaded(false);\n     setHashCards(null);\n     setCards(null);\n \n     console.log(hash)\n     if (hash === undefined) return;\n \n     const db = firebase.firestore();\n \n     db.collection('decks').doc(hash).get()\n     .then(snapshot => {\n       setIsLoaded(true);\n     })\n     .catch(error => {\n       setIsLoaded(true);\n       console.log(\"Error: \", error.message)\n     })\n \n     let ref = db.collection('decks').doc(hash);\n     ref.get()\n       .then(snapshot => {\n         let arr = [];\n         snapshot.data().cards?.forEach(item => arr.push(item));\n         setHashCards(arr);\n       })\n       .catch(error => console.log(\"Error: \", error.message))\n   }, [hash]);\n \n   useEffect(() => {\n     setIsLoaded(false);\n     let _cards = [];\n \n     if (hashCards != null) {\n       _cards = hashCards;\n     } else {\n       _cards = [];\n     }\n \n     let _listCorrectAnswer = [];\n     if (_cards.length > 0) {\n       setCards(_cards.map((ele, cardIndex) => {\n        const question = ele.front\n        let answers = [];\n        answers.push(ele.back);\n        while (answers.length < 4) {\n            const randomIndex = Math.floor(Math.random() * _cards.length);\n            if (!answers.includes(_cards[randomIndex].back)) {\n                answers.push(_cards[randomIndex].back)\n            }\n        }\n        shuffleCard(answers);\n        for (let index = 0; index < answers.length; index++) {\n            const element = answers[index];\n            if (element == ele.back) {\n                _listCorrectAnswer.push(index)\n            }\n        }\n        return {\n            question: question,\n            answers: answers,\n        }\n       }));\n       setCorrectAnswer(_listCorrectAnswer);\n       setSelectedAnswer(Array(_listCorrectAnswer.length).fill(-1))\n       setIsLoaded(true);\n     }\n\n     }, [isCardFlipped, onClick, hashCards]\n   );\n \n   if (!isLoaded) return (\n     <main>\n       <div className=\"container center\">\n         <Spinner />\n       </div>\n     </main>\n   );\n \n   if (!cards) return (\n     <div className=\"container center\">\n       <p>We couldn't find this deck. :(</p>\n     </div>\n   )\n \n   if (!canView || cards.length === 0) return (\n       <div className=\"container center\">\n         <p>This deck is either private or has no cards! If you are the owner, you can view it and edit it from your dashboard.</p>\n       </div>\n   );\n\n   const _generateListQuestion = () => {\n       return cards.map((ele, cardIndex) => {\n         return (\n            <div style={{\n                border: '1px solid rgba(0, 0, 0, 0.5)', \n                borderRadius: 20,\n                width: '100%',\n                marginBottom: 30,\n                padding: 30}}>\n                    <div style={{\n                        width: '100%',\n                        textAlign: 'center'\n                    }}>\n                        {ele?.question}\n                    </div>\n                {ele?.answers?.map((element, index)=> {\n                    return <div style={{\n                        height: 30,\n                        width: '80%',\n                        marginLeft: '10%',\n                        marginBottom: 10,\n                        marginTop: 10,\n                        border: '1px solid rgba(0, 0, 0, 0.2)', \n                        borderRadius: 20,\n                        textAlign: 'center',\n                        lineHeight: 2,\n                        verticalAlign: 'center',\n                        backgroundColor: index == selectedAnswer[cardIndex] ? 'green' : 'white',\n                    }} onClick={(event) => {\n                     const newAnswer = [\n                         ...selectedAnswer.slice(0, cardIndex),\n                         index, \n                         ...selectedAnswer.slice(cardIndex + 1)\n                       ]\n                     setSelectedAnswer(newAnswer)\n                    }}>\n                        <div style={{color: index == selectedAnswer[cardIndex] ? 'white' : 'black',}}>\n                            {element}\n                        </div>\n                    </div>\n                })}\n            </div>\n         )\n       })\n   }\n\n   return (\n\n    <div>\n        {result != null && <div style={{\n            fontSize: 50,\n            marginBottom: 30,\n\n        }}>{`結果: ${result}/${cards.length}`}</div>}\n        {_generateListQuestion()}\n        <div style={{\n            height: 50,\n            width: '80%',\n            marginLeft: '10%',\n            backgroundColor: '#526CC6',\n            color: 'white',\n            fontSize: 26,\n            textAlign: 'center',\n            lineHeight: 2,\n            verticalAlign: 'center',\n            borderRadius: 25,\n        }} onClick={(event) => {\n            let totalResult = 0\n            for (let index = 0; index < selectedAnswer.length; index++) {\n                const selected = selectedAnswer[index];\n                const correct = correctAnswer[index];\n                if (selected == correct) {\n                    totalResult += 1;\n                }\n            }\n            setResult(totalResult);\n        }}>Submit</div>\n    </div>\n   );\n }\n \n export default Test;","/**\n * Displays the dashboard page.\n */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRandom, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from './Breadcrumb';\nimport DeckCreator from './decks-and-cards/DeckCreator';\nimport DeckEditor from './decks-and-cards/DeckEditor';\nimport DeckList from './decks-and-cards/DeckList';\nimport PageHeading from './PageHeading';\nimport SavedDecks from './SavedDecks';\nimport CreatedDecks from './CreatedDecks';\nimport Deck from './decks-and-cards/Deck';\nimport Test from './decks-and-cards/Test';\n\nconst Dashboard = ({\n  onClick,\n  decks,\n  saveDecks,\n  cards,\n}) => {\n  const [deckToEdit, setDeckToEdit] = useState(null);\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n\n  const handleButtons = (event) => {\n    switch (event.target.name) {\n      case \"exit\":\n        if (user) {\n          history.push(\"/app\");\n          return;\n        }\n        history.push(\"/\");\n        return;\n      default:\n        return;\n    }\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <Switch>\n        <Route path=\"/app/edit\">\n          <DeckEditor\n            deckToEdit={deckToEdit}\n            setDeckToEdit={setDeckToEdit}\n            cards={cards}\n          />\n        </Route>\n        <Route path=\"/app/create\">\n          <PageHeading\n            title=\"新セット\"\n            styles={{textAlign: 'left'}}\n          />\n          <DeckCreator />\n        </Route>\n        <Route path=\"/app/saved\">\n          <SavedDecks\n            saveDecks={saveDecks}\n          />\n        </Route>\n        <Route path=\"/app/created\">\n          <CreatedDecks\n            decks={decks}\n            cards={cards}\n          />\n        </Route>\n        <Route path=\"/app/d/:hash\">\n          <Deck \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app/test/:hash\">\n          <Test \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app\">\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '50%', margin: '0 auto', paddingRight: 30 }}>\n              <PageHeading\n                title=\"作ったセット\"\n              />\n              <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                <div>\n                  <DeckList\n                    decks={decks.slice(0, 3)}\n                    setDeckToEdit={setDeckToEdit}\n                  />\n                </div>\n                {decks.length > 3 &&\n                  <div style={{ display: 'flex', justifyContent: 'end' }}>\n                    <button\n                      id=\"shuffle\"\n                      name=\"shuffle\"\n                      onClick={() => {\n                        history.push('/app/created')\n                      }}\n                      style={{ color: 'black', background: 'transparent', border: 'unset', fontSize: 20 }}\n                    > もっと見る\n                    </button>\n                  </div>}\n              </div>\n            </div>\n            <div style={{ width: '50%', margin: '0 auto', paddingLeft: 30 }}>\n              <PageHeading\n                title=\"保存したセット\"\n              />\n              <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                <div>\n                  <DeckList\n                    decks={saveDecks.slice(0, 3)}\n                  />\n                </div>\n                {saveDecks.length > 3 &&\n                  <div style={{ display: 'flex', justifyContent: 'end' }}>\n                    <button\n                      id=\"shuffle\"\n                      name=\"shuffle\"\n                      onClick={() => {\n                        history.push('/app/saved')\n                      }}\n                      style={{ color: 'black', background: 'transparent', border: 'unset', fontSize: 20 }}\n                    > もっと見る\n                    </button>\n                  </div>\n                }\n              </div>\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', paddingTop: 100, paddingLeft: 60, width: 200 }}>\n              <button\n                onClick={() => {\n                  history.push('/app/create')\n                }}\n                style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30 }}\n              >\n                <><FontAwesomeIcon icon={faPlus} style={{ marginRight: 5 }} /> 新作</>\n              </button>\n            </div>\n          </div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Dashboard;","import React, { useContext, useState } from 'react';\nimport { Link, useHistory, Switch, Route } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nimport PageHeading from './PageHeading';\nimport DeckList from './decks-and-cards/DeckList';\nimport DeckEditor from './decks-and-cards/DeckEditor';\n\nconst Home = ({\n  allDecks,\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const [deckToEdit1, setDeckToEdit] = useState(null);\n  const history = useHistory();\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n  return (\n    <Switch>\n      <Route path=\"/app-edit\" >\n        <DeckEditor\n          deckToEdit={deckToEdit1}\n          setDeckToEdit={setDeckToEdit}\n        />\n      </Route>\n      <Route path=\"/\">\n        <>\n          <header className=\"hero\">\n            <section>\n              <div className=\"hero-content\">\n                <div className=\"buttons\">\n                  <>\n                    <Link\n                      className=\"btn btn-cta\"\n                      to=\"/app\"\n                    >\n                      ダッシュボード\n                    </Link>\n                  </>\n                </div>\n              </div>\n            </section>\n            <div className=\"card-design\">\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          </header>\n\n          <section className=\"public-decks\">\n            <div>\n              <PageHeading\n                title=\"全てセット\"\n              />\n              <div style={{textAlign: 'left'}}>\n                <DeckList\n                  decks={allDecks}\n                  setDeckToEdit={setDeckToEdit}\n                />\n              </div>\n            </div>\n          </section>\n        </>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Home;","/**\n * Hook for user authentication and account management:\n * \n * Logging user in\n * Signing user up\n * Logging user out\n * Updating user email\n * Changing user password\n * Deleting account\n */\n\nimport { useState, useEffect, useContext } from 'react';\nimport { auth, db, fb } from '../firebase/firebaseIndex';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nconst useAuth = (username = null, email = null, password = null, newPassword = null, avatarUrl = null) => {\n  const { user } = useContext(firebaseAuth);\n\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(\"pending\");\n\n  const [login, setLogin] = useState(0);\n  const [signup, setSignup] = useState(0);\n  const [logout, setLogout] = useState(0);\n  const [changeEmail, setChangeEmail] = useState(0);\n  const [changePassword, setChangePassword] = useState(0);\n  const [deleteAccount, setDeleteAccount] = useState(0);\n\n  // Logging user in\n  useEffect(() => {\n    if (login === 0 || user != null) return;\n    setError(null);\n    setStatus(\"loading\");\n    auth.signInWithEmailAndPassword(email, password)\n    .then((userCredential) => {\n      let _user = userCredential.user;\n      setUserData(_user);\n      setStatus(\"success\");\n    })\n    .catch((error) => {\n      console.error(\"Error logging user in: \", error.message);\n      setError(error);\n      setStatus(\"error\");\n    })\n  }, [login]);\n\n  // Signing user up\n  useEffect(() => {\n    if (signup === 0 || user != null) return;\n    setError(null);\n    setStatus(\"loading\");\n    auth.createUserWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        let _user = userCredential.user;\n        db.collection('users').doc(_user.uid).set({\n          save_decks: []\n        });\n        userCredential.user.updateProfile({displayName: username})\n        setUserData(_user);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        console.error(\"Error signing user in: \", error.message);\n        setError(error);\n        setStatus(\"error\");\n      })\n\n  }, [signup]);\n\n  // Logging user out\n  useEffect(() => {\n    if (logout === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    auth.signOut()\n    .then(() => {\n      console.log(\"Logged out\");\n      setUserData(null);\n      localStorage.removeItem('deck')\n      localStorage.removeItem('save_decks')\n      setStatus(\"success\");\n    })\n    .catch(error => {\n      console.error(\"Error logging user out: \", error.message);\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [logout]);\n\n  useEffect(() => {\n    if (changeEmail === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\")\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      console.log(\"User successfully reauthenticated.\");\n      auth.currentUser.updateEmail(email)\n      .then(() => {\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n      setStatus(\"loading\")\n      auth.currentUser.updateProfile({displayName: username, photoURL: avatarUrl})\n      .then(() => {\n        setUserData(auth.currentUser);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [changeEmail]);\n\n  // Changing password\n  useEffect(() => {\n    if (changePassword === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n    \n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      console.log(\"User successfully reauthenticated.\");\n      auth.currentUser.updatePassword(newPassword).then(function() {\n        setStatus(\"success\");\n      }).catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [changePassword])\n\n  // Delete account\n  useEffect(() => {\n    if (deleteAccount === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n\n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      auth.currentUser.delete().then(() => {\n        setStatus(\"success\");\n      }).catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      })\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    });\n\n  }, [deleteAccount])\n\n  const handleLogin = () => setLogin(prev => prev + 1);\n  const handleSignup = () => setSignup(prev => prev + 1);\n  const handleLogout = () => setLogout(prev => prev + 1);\n  const handleChangeEmail = () => setChangeEmail(prev => prev + 1);\n  const handleChangePassword = () => setChangePassword(prev => prev + 1);\n  const handleDeleteAccount = () => setDeleteAccount(prev => prev + 1);\n  const resetStatus = () => setStatus('pending');\n\n  return { \n    userData, \n    error, \n    status,\n    handleLogin, \n    handleSignup, \n    handleLogout,\n    handleChangeEmail,\n    handleChangePassword,\n    handleDeleteAccount,\n    resetStatus\n  };\n}\n\nexport default useAuth;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst Login = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n  const [inputs, setInputs] = useState({ email: \"\", password: \"\" });\n\n  const { status, error, handleLogin} = useAuth(null, inputs.email, inputs.password);\n  const { user } = useContext(firebaseAuth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleLogin();\n  }\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/app\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/user-not-found\":\n        setErrorMessage(\"メールアドレスとパスワードが一致しません。\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"メールアドレスとパスワードが一致しません。\");\n        return;\n      case \"auth/invalid-email\":\n        setErrorMessage(\"有効なメールアドレスを入力してください。\");\n        return;\n      default:\n        setErrorMessage(\"何かがうまくいかなかった。もう一度やり直してください。\");\n        return;\n    }\n\n  }, [error]);\n\n  return (\n    <div className=\"login\" style={{textAlign: 'center'}}>\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', marginRight: 200}}>\n        <div style={{display: 'flex', paddingRight: 50, fontSize: 25, alignItems: 'center'}}>\n          <Link to=\"/sign-up\">サインアップ</Link>\n        </div>\n        <PageHeading \n          title=\"ログイン\"\n        />\n      </div>\n      <form style={{display: 'inline-block'}} onSubmit={handleSubmit}>\n        <TextInput \n          labelText=\"メールアドレス\"\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n          id=\"email\"\n          name=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          placeholder=\"メールアドレス\"\n        />\n        <TextInput \n          labelText=\"パスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button \n          className=\"btn btn-primary\"\n          style={{backgroundColor: '#526CC6', borderColor: 'unset', borderRadius: 20, borderWidth: 0}}\n          disabled={inputs.password === \"\" || inputs.email === \"\"}        \n        >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"ログイン\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;","/**\n * Displays a spinner for 1 second when logging out.\n */\n\nimport React, { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport useAuth from '../../hooks/useAuth';\n\nimport Spinner from '../Spinner';\n\nconst Logout = () => {\n  const { user } = useContext(firebaseAuth);\n  const { handleLogout } = useAuth()\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!user) return;\n    handleLogout();\n    setTimeout(() => history.push(\"/\"), 1000);\n  }, [user]);\n\n  return (\n    <div className=\"container center\">\n      <p><Spinner /> Logging out . . .</p>\n    </div>\n  );\n}\n\nexport default Logout;","/**\n * Displays the update password page.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from '../Breadcrumb';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst ChangePassword = ({\n  handleChange,\n  inputs,\n  error,\n  onSubmit,\n  status\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n  \n  return (\n    <>\n      <PageHeading\n        title=\"パスワードを変更してください\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"新しいパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"new-password\"\n          name=\"newPassword\"\n          value={inputs.newPassword}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-primary\"　style={{color: 'white', background: '#526CC6', border: 'unset'}}>\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"パスワードを変更する\"}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default ChangePassword;","/**\n * Displays the delete account page.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from '../Breadcrumb';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst DeleteAccount = ({\n  handleChange,\n  inputs,\n  error,\n  onSubmit\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    switch (error) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n  \n  return (\n    <>\n      <PageHeading\n        title=\"アカウントを削除する\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-warning\">アカウントを完全に削除する</button>\n      </form>\n    </>\n  );\n}\n\nexport default DeleteAccount;","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faEnvelope, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst UpdateProfile = ({\n  handleChange,\n  inputs,\n  onSubmit,\n  error,\n  status,\n  onBack\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n\n  useEffect(() => {\n    return () => onBack();\n  }, [])\n\n  return (\n    <>\n      <PageHeading\n        title=\"メールを更新する\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"ユーザー名\"\n          icon={<FontAwesomeIcon icon={faUser} />}\n          type=\"username\"\n          id=\"username\"\n          name=\"username\"\n          value={inputs.username}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"メルアドレス\"\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n          id=\"email\"\n          name=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          placeholder=\"メルアドレス\"\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-primary\" \n        style={{color: 'white', background: '#526CC6', border: 'unset'}}\n        disabled={inputs.password === \"\" || inputs.email === \"\" || inputs.username === \"\"}   >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"メールを更新する\"}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default UpdateProfile;","/**\n * Shows the My Account page and sets up the useAuth\n * hook to be used on ChangePassword, UpdateEmail and\n * DeleteAccount components.\n */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport ChangePassword from './ChangePassword';\nimport DeleteAccount from './DeleteAccount';\nimport PageHeading from '../PageHeading';\nimport UpdateProfile from './UpdateProfile';\n\nconst MyAccount = () => {\n  const { user } = useContext(firebaseAuth);\n  const [inputs, setInputs] = useState({ \n    email: user.email || \"\",\n    password: \"\", \n    newPassword: \"\", \n    username: user.displayName || \"\", \n    avatarUrl: user.photoUrl || \"\"});\n\n  const { \n    loading, \n    error, \n    status, \n    handleChangeEmail, \n    handleChangePassword, \n    handleDeleteAccount,\n    resetStatus\n  } = useAuth(inputs.username, inputs.email, inputs.password, inputs.newPassword);\n\n  const history = useHistory();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"my-account\">\n      <div className=\"my-account-inner\" style={{width: '50%', margin: '0 auto'}}>\n        <Switch>\n          <Route exact path=\"/my-account\">\n            <div>\n              <PageHeading\n                title=\"アカウント\"\n              />\n              <div className=\"account-data\">\n                  <Link to=\"/my-account/change-email\" className=\"btn btn-tertiary\">\n                    <span>メールを更新する</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                  </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/my-account/change-password\" className=\"btn btn-tertiary\">\n                  <span>パスワードを変更してください</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/my-account/delete-account\" className=\"btn btn-warning\">\n                  <FontAwesomeIcon icon={faTrash} />&nbsp;&nbsp;&nbsp;アカウントを削除する\n                </Link>\n              </div>\n            </div>\n          </Route>\n\n          <Route exact path=\"/my-account/change-email\">\n            <UpdateProfile \n              handleChange={handleChange}\n              inputs={inputs}\n              loading={loading}\n              onSubmit={handleChangeEmail}\n              error={error}\n              status={status}\n              onBack={resetStatus}\n            />\n          </Route>\n\n          <Route exact path=\"/my-account/change-password\">\n            <ChangePassword \n              handleChange={handleChange}\n              loading={loading}\n              inputs={inputs}\n              onSubmit={handleChangePassword}\n              error={error}\n              status={status}\n            />\n          </Route>\n          \n          <Route exact path=\"/my-account/delete-account\">\n            <DeleteAccount \n              handleChange={handleChange}\n              inputs={inputs}\n              onSubmit={handleDeleteAccount}\n              error={error}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default MyAccount;","import React, {useEffect, useState} from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navlinks = ({ closeMenu, userName }) => {\n  const [firstChar, setFirstChar] = useState('');\n  const [bgColor, setBgColor] = useState('');\n\n  const getFirstChar = () => {\n    if (userName) {\n      setFirstChar(userName.charAt(0).toUpperCase());\n    }\n  }\n\n  useEffect(() => {\n    setBgColor('#' + getRandomColor());\n    console.log(bgColor);\n    getFirstChar();\n  },[userName]);\n\n  const getRandomColor = () => {\n    return Math.floor(Math.random()*16777215).toString(16)\n  }\n\n\n  \n  return (\n    <div style={{position: 'relative'}}>\n      <div className=\"avatar-btn\" style={{backgroundColor: `${bgColor}`}}>\n        <div className=\"name\">{firstChar}</div>\n      </div>\n      <div className=\"avt-links\">\n        <ul>\n        <li>\n          <NavLink\n            to=\"/my-account\"\n            className=\"link\"\n            onClick={() => closeMenu()}\n          >\n            プロフィール\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/log-out\" className=\"link\" onClick={() => closeMenu()}>\n            ログアウト\n          </NavLink>\n        </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Navlinks;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReply } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\n\nimport Navlinks from './Navlinks';\n\nconst Nav = ({\n  onClick,\n  isMenuOpen,\n  mobile=false\n}) => {\n  const [navClasses, setNavClasses] = useState(\"navbar\");\n  const btnClasses= \"btn btn-hamburger small-screen-only \" + (isMenuOpen && \"open\"); \n  let location = useLocation();\n  const { user } = useContext(firebaseAuth);\n\n  useEffect(() => {\n\n    if (mobile) {\n      setNavClasses(\"navbar\");\n      return;\n    }\n\n    if (location.pathname !== \"/\") {\n      setNavClasses(\"navbar light\");\n      return;\n    }\n\n    setNavClasses(\"navbar\");\n  }, [location, mobile])\n\n  if (!user) {\n    return null\n  }\n\n  return (\n    <header className={navClasses} style={{background: '#526CC6'}}>\n      <div className=\"navbar-inner\">\n        <div className=\"logo\">\n        <Link to=\"/\" className=\"logo\" >\n        ホーム\n        </Link>\n        <div style={{height: 30, width: 2, backgroundColor: 'black', marginLeft: 20, marginRight: 20}}></div>\n        <Link to=\"/app\" className=\"logo\">\n          私のフラッシュカード\n        </Link>\n          </div>\n        \n        <div className=\"right-nav\">\n          <nav className=\"large-screen-only\">\n            <Navlinks closeMenu={() => null } userName={user.displayName}/>\n          </nav>\n          <button \n            className={btnClasses}\n            name=\"toggle-menu\"\n            onClick={onClick}\n          >\n            <span></span>\n            <span></span>\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Nav;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst Signup = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [inputs, setInputs] = useState({username: \"\", email: \"\", password: \"\" });\n  const history = useHistory();\n\n  const { status, error, handleSignup} = useAuth(inputs.username, inputs.email, inputs.password);\n  const { user } = useContext(firebaseAuth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleSignup();\n  }\n\n  useEffect(() => {\n    if (error === null) return;\n    console.log(error.message);\n  }, [error])\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/app\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/weak-password\":\n        setErrorMessage(\"パスワードは6文字以上である必要があります。\");\n        return;\n      case \"auth/email-already-in-use\":\n        setErrorMessage(\"このメールはすでに登録されています。\");\n        return;\n      case \"auth/invalid-email\":\n        setErrorMessage(\"有効なメールアドレスを入力してください。\");\n        return;\n      default:\n        setErrorMessage(\"何かがうまくいかなかった。 もう一度やり直してください。\");\n        return;\n    }\n  }, [error]);\n\n  return (\n    <div className=\"signup\" style={{textAlign: 'center'}}>\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', marginRight: 200}}>\n        <div style={{display: 'flex', paddingRight: 50, fontSize: 25, alignItems: 'center'}}>\n          <Link to=\"/log-in\">ログイン</Link>\n        </div>\n        <PageHeading \n        title=\"サインアップ\"\n      />\n      </div>\n      <form style={{display: 'inline-block'}} onSubmit={handleSubmit}>\n      <TextInput \n          labelText=\"ユーザー名\"\n          id=\"username\"\n          name=\"username\"\n          placeholder=\"ユーザー名\"\n          value={inputs.username}\n          onChange={handleChange}\n          icon={<FontAwesomeIcon icon={faUser} />}\n        />\n        <TextInput \n          labelText=\"メールアドレス\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"メールアドレス\"\n          value={inputs.email}\n          onChange={handleChange}\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n        />\n        <TextInput \n          labelText=\"パスワード\"\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button \n          className=\"btn btn-primary\"\n          style={{backgroundColor: '#526CC6', borderColor: 'unset', borderRadius: 20, borderWidth: 0}}\n          disabled={inputs.username === \"\" || inputs.password === \"\" || inputs.email === \"\"}\n        >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"サインアップ\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;","/**\n * Displays the mobile menu.\n */\n\nimport React from 'react';\nimport Navlinks from './Navlinks';\nimport Nav from './Nav';\n\nconst MobileMenu = ({\n  isOpen,\n  setIsOpen,\n  handleButtons\n}) => {\n\n  const closeMenu = () => {\n    setIsOpen(false);\n  }\n\n  return (\n    <div className={isOpen ? \"mobile-menu open\" : \"mobile-menu\"}>\n      <Nav onClick={handleButtons} isMenuOpen={isOpen} mobile={true}/>\n      <Navlinks closeMenu={closeMenu} />\n    </div>\n  )\n}\n\nexport default MobileMenu;","/**\n * Main wrapper for the app, containing the shuffle functionality\n * used by Deck and Dashboard components.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport { firebaseAuth } from './provider/AuthProvider';\nimport useOnDecksSnapshot from './hooks/useOnDecksSnapshot';\nimport useOnSavedDecksSnapshot from './hooks/useOnSavedDecksSnapshot';\nimport useOnAllDecksSnapshot from './hooks/useOnAllDecksSnapshot';\n\nimport Deck from './components/decks-and-cards/Deck';\nimport Dashboard from './components/Dashboard';\nimport Home from './components/Home';\nimport Login from './components/account-management/Login';\nimport Logout from './components/account-management/Logout';\nimport MyAccount from './components/account-management/MyAccount';\nimport Nav from './components/Nav';\nimport Signup from './components/account-management/Signup';\nimport MobileMenu from './components/MobileMenu';\n\nconst fisherYatesShuffle = (array) => {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = Object.assign({}, array[currentIndex]);\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n}\n\nconst App = () => {\n  const [selectedDecks, setSelectedDecks] = useState([]);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const history = useHistory();\n  const { user } = useContext(firebaseAuth);\n  const { decks } = useOnDecksSnapshot(user);\n  const { saveDecks } = useOnSavedDecksSnapshot(user);\n  const { allDecks } = useOnAllDecksSnapshot();\n\n  useEffect(() => {\n    if (user) return;\n    setSelectedDecks([]);\n  }, [user]);\n\n  const handleButtons = (event) => {\n    switch (event.target.name) {\n      case \"exit\":\n        if (user) {\n          history.push(\"/app\");\n          return;\n        }\n        history.push(\"/\");\n        return;\n  \n      case \"toggle-menu\":\n        setIsMenuOpen(prev => !prev);\n        return;\n      default:\n        return;\n    }\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"app\">\n      <Nav \n        onClick={handleButtons}\n        isMenuOpen={isMenuOpen}\n      />\n      <MobileMenu \n        isOpen={isMenuOpen}\n        setIsOpen={setIsMenuOpen}\n        handleButtons={handleButtons}\n      />\n      <Switch>\n        <Route path=\"/log-in\">\n          <Login />\n        </Route>\n        <Route path=\"/log-out\">\n          <main>\n            <Logout />\n          </main>\n        </Route>\n        <Route path=\"/sign-up\">\n          <Signup />\n        </Route>\n        <Route path=\"/my-account\">\n          <main>\n            <MyAccount />\n          </main>\n        </Route>\n        <Route path=\"/app/shuffle\">\n          <Deck \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app/d/:hash\">\n          <Deck \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app\">\n          <main>\n            <Dashboard \n              onClick={handleButtons}\n              decks={decks}\n              saveDecks={saveDecks}\n              selectedDecks={selectedDecks}\n              setSelectedDecks={setSelectedDecks}\n            />\n          </main>\n        </Route>\n        <Route path=\"/\">\n          <main>\n            <Home \n              allDecks={allDecks} \n              setSelectedDecks={setSelectedDecks} \n              selectedDecks={selectedDecks}\n              />\n          </main>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport AuthProvider from './provider/AuthProvider';\n\nimport './styles/normalize.css';\nimport './styles/styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <AuthProvider>\n        \n        <App />\n      </AuthProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}