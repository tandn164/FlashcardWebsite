{"version":3,"sources":["firebase/firebaseIndex.js","provider/AuthProvider.js","hooks/useOnDecksSnapshot.js","hooks/useOnAllDecksSnapshot.js","hooks/useOnUserStatusSnapshot.js","hooks/useOnSavedDecksSnapshot.js","components/Carousel.js","components/Header.js","components/decks-and-cards/CardContent.js","components/decks-and-cards/FlippableCard.js","components/Spinner.js","components/decks-and-cards/Deck.js","firebase/dbMethods.js","components/TextInput.js","components/PageHeading.js","components/decks-and-cards/UploadAndDisplayImage.js","components/decks-and-cards/CardEditor.js","components/decks-and-cards/CardCreator.js","components/Accordion.js","components/decks-and-cards/DeckCreator.js","components/decks-and-cards/DeckEditor.js","components/decks-and-cards/SelectableDeck.js","components/decks-and-cards/DeckList.js","components/SavedDecks.js","components/CreatedDecks.js","components/decks-and-cards/Test.js","components/decks-and-cards/TestCompare.js","components/Dashboard.js","components/Home.js","hooks/useAuth.js","components/account-management/Login.js","components/account-management/Logout.js","components/account-management/ChangePassword.js","components/account-management/DeleteAccount.js","components/account-management/UpdateProfile.js","components/account-management/MyAccount.js","components/Navlinks.js","components/Nav.js","components/account-management/Signup.js","components/account-management/Upgrade.js","components/account-management/BuyCoin.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","db","firestore","fb","storage","firebaseAuth","React","createContext","AuthProvider","props","useState","user","setUser","useEffect","unsub","onAuthStateChanged","Provider","value","children","useOnDecksSnapshot","decks","setDecks","unsubscribe","collection","where","uid","onSnapshot","snapshot","arr","forEach","deck","push","id","saveCount","data","saved_users","length","error","console","log","message","useOnAllDecksSnapshot","allDecks","useOnUserStatusSnapshot","userStatus","setUserStatus","doc","status","isActive","isPrenium","coin","useOnSavedDecksSnapshot","saveDecks","setSaveDecks","saveArr","includes","localStorage","setItem","JSON","stringify","Carousel","leftButtonText","rightButtonText","animTime","items","previousCallback","nextCallback","showButtons","index","setIndex","carouselItems","setCarouselItems","canSlide","setCanSlide","carousel","useRef","modifiedItems","map","ele","className","key","handleClick","event","target","name","idx","undefined","setTimeout","ref","style","marginLeft","width","transition","onClick","disabled","Header","title","CardContent","text","imageUrl","alt","maxWidth","maxHeight","src","FlippableCard","frontTitle","backTitle","frontText","backText","isFlipped","setIsFlipped","imageRef","header","icon","faTimes","backHeader","cloneElement","footer","prev","faReply","size","setImageUrl","getDownloadURL","then","downloadURL","Spinner","faSpinner","Deck","cards","setCards","setTitle","description","setDescription","hashCards","setHashCards","isCardFlipped","setIsCardFlipped","canView","isLoaded","setIsLoaded","hash","useParams","shuffle","setShuffle","cardShuffle","setCardShuffle","history","useHistory","alert","useAlert","get","catch","item","_cards","front","back","slideCallback","display","flexDirection","justifyContent","alignItems","backgroundColor","position","top","marginRight","fontWeight","fontSize","wordBreak","background","height","textAlign","zIndex","color","lineHeight","verticalAlign","borderRadius","cursor","marginTop","marginBottom","array","randomIndex","currentIndex","Math","floor","random","shuffleCard","faAngleLeft","faAngleRight","show","border","paddingBottom","dbMethods","createDeck","isPublic","document","newDeck","numCards","owner","set","err","deleteDeck","deckId","delete","saveDeck","update","FieldValue","arrayUnion","unsaveDeck","a","arrayRemove","updateDeck","updatedDeck","updateUser","updatedUser","TextInput","labelText","type","placeholder","onChange","autocomplete","isHidden","setIsHidden","faLock","htmlFor","outline","autoComplete","preventDefault","faEye","faEyeSlash","PageHeading","titleElement","subTitle","styles","subTitleStyles","UploadAndDisplayImage","onSetImage","onUploadingImage","image","setImage","filePath","setFilePath","useContext","uploading","setUploading","percentage","setPercentage","uploadTask","files","put","on","progress","bytesTransferred","totalBytes","Number","toFixed","state","child","CardEditor","card","onSubmit","onUpdate","onDelete","setFront","setBack","handleInput","faTrash","CardCreator","onCreateCard","isOpen","setIsOpen","faMinus","faPlus","Accordion","listCards","onCards","setCard","cardEditorElements","setCardEditorElements","onDeleteCard","splice","updateElements","onUpdateCard","elements","classes","Fragment","faAngleUp","faAngleDown","newCard","DeckCreator","updateSuccess","setUpdateSuccess","setListCards","setIsPublic","checkReadyToCreate","faPaperclip","faBook","checked","DeckEditor","deckToEdit","setDeckToEdit","localDeck","parse","getItem","checkReadyToUpdate","SelectableDeck","mine","saved","setSaved","savedDecksRaw","isSaved","savedDecks","filterArray","filter","stopPropagation","faEdit","faSave","Items","currentItems","PaginatedItems","itemsPerPage","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","slice","ceil","nextLabel","onPageChange","newOffset","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","DeckList","deckList","setDeckList","private","SavedDecks","path","margin","paddingRight","CreatedDecks","paddingTop","paddingLeft","Test","correctAnswer","setCorrectAnswer","selectedAnswer","setSelectedAnswer","result","setResult","submitted","setSubmitted","_listCorrectAnswer","cardIndex","question","answers","Array","fill","padding","element","newAnswer","totalResult","window","scrollTo","TestCompare","originCards","setOriginCards","randomCards","setRandomCards","selectedIndex1","setSelectedIndex1","selectedIndex2","setSelectedIndex2","newArray","_onCheck","index1","index2","Dashboard","Home","deckToEdit1","sort","b","useAuth","username","email","password","newPassword","avatarUrl","userData","setUserData","setError","setStatus","login","setLogin","signup","setSignup","logout","setLogout","changeEmail","setChangeEmail","changePassword","setChangePassword","deleteAccount","setDeleteAccount","signInWithEmailAndPassword","userCredential","_user","signOut","createUserWithEmailAndPassword","updateProfile","displayName","removeItem","code","credential","EmailAuthProvider","currentUser","reauthenticateWithCredential","updateEmail","photoURL","updatePassword","handleLogin","handleSignup","handleLogout","handleChangeEmail","handleChangePassword","handleDeleteAccount","resetStatus","Login","errorMessage","setErrorMessage","inputs","setInputs","handleChange","e","to","faEnvelope","borderColor","borderWidth","Logout","ChangePassword","DeleteAccount","UpdateProfile","onBack","faUser","MyAccount","photoUrl","loading","exact","Navlinks","closeMenu","userName","firstChar","setFirstChar","bgColor","setBgColor","getRandomColor","charAt","toUpperCase","toString","Nav","isMenuOpen","mobile","onSearch","navClasses","setNavClasses","btnClasses","location","useLocation","searchText","setSearchText","pathname","Signup","Upgrade","BuyCoin","App","selectedDecks","setSelectedDecks","setIsMenuOpen","decksData","setDecksData","saveDecksData","setSaveDecksData","allDecksData","setAllDecksData","isSearching","setIsSearching","handleButtons","options","positions","MIDDLE","timeout","offset","transitions","SCALE","Root","StrictMode","template","AlertTemplate","render","getElementById"],"mappings":"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","file":"static/js/main.4ab2795e.chunk.js","sourcesContent":["/**\n * Initialize firebase authentication and firestore.\n */\n\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyB25ZqbIrDuXWUokLFcsbltpjUf5pjhb-w\",\n  authDomain: \"flashcardapp-d3306.firebaseapp.com\",\n  databaseURL: \"https://flashcardapp-d3306.firebaseio.com\",\n  projectId: \"flashcardapp-d3306\",\n  storageBucket: \"flashcardapp-d3306.appspot.com\",\n  messagingSenderId: \"635798969664\",\n  appId: \"1:635798969664:web:562fb322eeb9d31667eea5\",\n  measurementId: \"G-XSQ0TX77TY\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth=firebase.auth();\nexport const db=firebase.firestore();\nexport const fb=firebase;\nexport const storage=firebase.storage();\n\nexport default { firebaseConfig }","/**\n * Context Provider for the current user.\n */\n\nimport React, {useState, useEffect} from 'react';\nimport { auth } from '../firebase/firebaseIndex';\n\nexport const firebaseAuth = React.createContext();\n\nconst AuthProvider = (props) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsub = auth.onAuthStateChanged((user) => {\n      user ? setUser(user) : setUser(null);\n    });\n\n    return () => unsub();\n  });\n\n  return (\n    <firebaseAuth.Provider\n      value={{\n        user\n      }}\n    >\n      {props.children}\n    </firebaseAuth.Provider>\n  )\n}\n\nexport default AuthProvider;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnDecksSnapshot = (user) => {\n  const db = firebase.firestore();\n  const [decks, setDecks] = useState([]);\n\n  // Get decks from collection where owner is the current user.\n  useEffect(() => {\n    if (!user) {\n      setDecks([]);\n      return;\n    }\n\n    let ref = db.collection('decks');\n    let unsubscribe = ref.where(\"owner\", \"==\", user.uid).onSnapshot((snapshot) => {\n      let arr = [];\n      snapshot.forEach(deck => arr.push({\n        id: deck.id,\n        saveCount: deck.data().saved_users?.length ?? 0,\n        ...deck.data()\n      }));\n      setDecks(arr);\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, [user]);\n\n  return { decks };\n}\n\nexport default useOnDecksSnapshot;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnAllDecksSnapshot = (user) => {\n  const db = firebase.firestore();\n  const [allDecks, setDecks] = useState([]);\n\n  useEffect(() => {\n    if (!user) {\n      setDecks([]);\n      return;\n    }\n    let ref = db.collection('decks');\n\n    let unsubscribe = ref.where(\"isPublic\", \"==\", true).onSnapshot((snapshot) => {\n      let arr = [];\n      snapshot.forEach(deck => {\n        let data = {\n          id: deck.id,\n          saveCount: deck.data().saved_users?.length ?? 0,\n          ...deck.data()\n        };\n        arr.push(data)\n      });\n      setDecks(arr);\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, [user]);\n\n  return { allDecks };\n}\n\nexport default useOnAllDecksSnapshot;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnUserStatusSnapshot = (user) => {\n    const db = firebase.firestore();\n    const [userStatus, setUserStatus] = useState();\n  \n    useEffect(() => {\n      if (!user) {\n        setUserStatus([]);\n        return;\n      }\n  \n      let ref = db.collection('users');\n      let unsubscribe = ref.doc(user.uid).onSnapshot((snapshot) => {\n        let status = {\n          isActive: snapshot.data().isActive,\n          isPrenium: snapshot.data().isPrenium,\n          coin: snapshot.data().coin\n        }\n        setUserStatus(status)\n      }, error => console.log(\"Error: \", error.message))\n  \n      return () => unsubscribe();\n    }, [user]);\n  \n    return { userStatus };\n  }\n\n  export default useOnUserStatusSnapshot;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnSavedDecksSnapshot = (user) => {\n  const db = firebase.firestore();\n  const [saveDecks, setSaveDecks] = useState([]);\n\n  useEffect(() => {\n    if (!user) {\n      setSaveDecks([]);\n      return;\n    }\n    let ref = db.collection('decks');\n\n    let unsubscribe = ref.where(\"isPublic\", \"==\", true).onSnapshot((snapshot) => {\n      let saveArr = [];\n      snapshot.forEach(deck => {\n        let data = {\n          id: deck.id,\n          saveCount: deck.data().saved_users?.length ?? 0,\n          ...deck.data()\n        };\n        if (data.saved_users?.includes(user.uid)) {\n          saveArr.push(data);\n        }\n      });\n      setSaveDecks(saveArr);\n      localStorage.setItem('save_decks', JSON.stringify(saveArr))\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, [user]);\n\n  return { saveDecks };\n}\n\nexport default useOnSavedDecksSnapshot;","/**\n * A modular carousel component with wrap-around and transitions.\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\n\n/* If WRAP_BUFFER is too short, wrap-around transitions\n   will be set too soon. */\nconst WRAP_BUFFER = 50;\n\nconst Carousel = ({\n  leftButtonText=\"<\",\n  rightButtonText=\">\",\n  animTime=.5,\n  items,\n  previousCallback,\n  nextCallback,\n  showButtons=true\n}) => {\n  const [index, setIndex] = useState(0);\n  const [carouselItems, setCarouselItems] = useState([]);\n  const [canSlide, setCanSlide] = useState(true);\n  const carousel = useRef(null);\n\n  // Generates the carousel items, with a cloned copy of the first and last\n  // item at the beginning and end, respectively. This facilitates\n  // smooth wrap-around transitions.\n  useEffect(() => {\n    let modifiedItems = items.map((ele) => {\n      return (\n        <div \n          className=\"carousel__item\"\n          key={ele.key}\n        >\n          {ele}\n        </div>\n      );\n    });\n\n    setCarouselItems(modifiedItems);\n  }, [items]);\n\n  const handleClick = (event) => {\n    if (!canSlide) return;\n    if (event.target.name === \"right\") {\n      if (index == carouselItems.length - 1) { return }\n      setIndex(idx => idx + 1);\n      if (nextCallback !== undefined) {\n        nextCallback(index-1);\n      }\n    } else if (event.target.name === \"left\") {\n      if (index == 0) { return }\n      setIndex(idx => idx - 1);\n      if (previousCallback !== undefined) {\n        previousCallback(index-1);\n      }\n    }\n    setCanSlide(false);\n    setTimeout(() => setCanSlide(true), animTime * 1000 + WRAP_BUFFER);\n  }\n\n  return (\n    <div className=\"carousel\">\n      <div \n        ref={carousel}\n        className=\"carousel__inner\"\n        style={{ \n          marginLeft: \"calc(-100% * \" + index + \")\",\n          width: (carouselItems.length * 100) + \"%\",\n          transition: \"margin \" + animTime + \"s\",\n       }}\n      >\n        {carouselItems}\n      </div>\n      <div className=\"spacer\"></div>\n      {showButtons &&\n        <>\n          {index > 0 && <button \n            className=\"btn-carousel left\"\n            onClick={(event) => handleClick(event)}\n            name=\"left\"\n            disabled={!canSlide}\n          >{leftButtonText}</button>}\n          {index < carouselItems.length - 1 && <button \n            className=\"btn-carousel right\"\n            onClick={(event) => handleClick(event)}\n            name=\"right\"\n            disabled={!canSlide}\n          >{rightButtonText}</button>}\n        </>\n      }\n    </div>\n  );\n}\n\nexport default Carousel;","/**\n * Displays a header with a title and optional child elements.\n */\n\nimport React from 'react';\n\nconst Header = ({\n  title,\n  children\n}) => {\n  return (\n    <header className=\"card-header\">\n      <p>\n        {title}\n      </p>\n      <div>\n        {children}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","/**\n * Displays a simple p tag.\n */\n\nimport React from 'react';\n\nconst CardContent = ({\n  text,\n  imageUrl,\n}) => {\n  return (\n    <>\n      {imageUrl && <div>\n        <img alt=\"not fount\" style={{maxWidth: 350, maxHeight: 250}} src={imageUrl} />\n        <br />\n      </div>}\n      <p className=\"content\">\n        {text}\n      </p>\n    </>\n  );\n}\n\nexport default CardContent;","/**\n * Displays a flash card and its content.\n */\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReply, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport Header from '../Header';\nimport CardContent from './CardContent';\nimport { storage } from '../../firebase/firebaseIndex';\n\nconst FlippableCard = ({\n  onClick,\n  frontTitle,\n  backTitle,\n  frontText,\n  backText,\n  isFlipped,\n  setIsFlipped,\n  imageRef,\n}) => {\n  const header = (\n    <Header title={frontTitle}>\n      <button \n        className=\"btn btn-icon-small\"\n        name=\"exit\"\n        onClick={onClick}\n      >\n        <FontAwesomeIcon icon={faTimes} />&nbsp;クローズ\n      </button>\n    </Header>\n  );\n\n  const backHeader = React.cloneElement(header, { title: backTitle });\n\n  const footer = (\n    <footer>\n      <button \n        className=\"curl\"\n        name=\"toggle\"\n        onClick={ () => setIsFlipped(prev => !prev) }\n      >    \n        <FontAwesomeIcon icon={faReply} size=\"2x\" className=\"icon\" />\n      </button>\n    </footer>\n  );\n\n  const [imageUrl, setImageUrl] = useState(null);\n\n  useState(() => {\n    if (imageRef) {\n      console.log(imageRef);\n      storage.ref(imageRef).getDownloadURL().then((downloadURL) => {\n          setImageUrl(downloadURL)\n      });\n  }\n  },[imageRef])\n \n  return (\n    <div className={isFlipped ? \"flippable flipped\" : \"flippable\"}>\n      <div className=\"flippable__inner\">\n        <div className=\"flippable__content front\">\n          {header}\n            <CardContent text={frontText} imageUrl={imageUrl} />\n          {footer}\n        </div>\n        <div className=\"flippable__content back\">\n          {backHeader}\n            <CardContent text={backText} />\n          {footer}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FlippableCard;","/**\n * A simple loading icon.\n */\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nconst Spinner = ({\n  size=\"1x\"\n}) => {\n  return <FontAwesomeIcon icon={faSpinner} size={size} className=\"spinner\"/>\n}\n\nexport default Spinner;","/**\n * Handles logic for getting the selected deck and cards.\n * Generates FlippableCards for each card to be shown, and \n * renders them in a Carousel.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport firebase from 'firebase';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Carousel from '../Carousel';\nimport FlippableCard from './FlippableCard';\nimport Spinner from '../Spinner';\nimport { faRandom, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { useAlert } from 'react-alert';\n\nconst Deck = ({\n  onClick,\n}) => {\n  const [cards, setCards] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [hashCards, setHashCards] = useState(null);\n  const [isCardFlipped, setIsCardFlipped] = useState(false);\n  const [canView, setCanView] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const { hash } = useParams();\n  const [shuffle, setShuffle] = useState(0);\n  const [cardShuffle, setCardShuffle] = useState([]);\n  const history = useHistory();\n  const alert = useAlert()\n\n  useEffect(() => {\n    setIsLoaded(false);\n    setHashCards(null);\n    setCards(null);\n\n    console.log(hash)\n    if (hash === undefined) return;\n\n    const db = firebase.firestore();\n\n    db.collection('decks').doc(hash).get()\n      .then(snapshot => {\n        setIsLoaded(true);\n      })\n      .catch(error => {\n        setIsLoaded(true);\n        console.log(\"Error: \", error.message)\n      })\n\n    let ref = db.collection('decks').doc(hash);\n    ref.get()\n      .then(snapshot => {\n        let arr = [];\n        snapshot.data().cards?.forEach(item => arr.push(item));\n        setHashCards(arr);\n        setTitle(snapshot.data().title)\n        setDescription(snapshot.data().description)\n      })\n      .catch(error => console.log(\"Error: \", error.message))\n  }, [hash]);\n\n  useEffect(() => {\n    setIsLoaded(false);\n    let _cards = [];\n\n    if (hashCards != null) {\n      _cards = hashCards;\n    } else {\n      _cards = [];\n    }\n\n    if (_cards.length > 0) {\n      setCards(_cards.map((ele) => {\n        return (\n          <FlippableCard\n            key={ele.id}\n            frontTitle=\"フロント\"\n            backTitle=\"バック\"\n            frontText={ele.front}\n            backText={ele.back}\n            onClick={onClick}\n            isFlipped={isCardFlipped}\n            setIsFlipped={setIsCardFlipped}\n            imageRef={ele.imageRef}\n          />\n        )\n      }));\n      setCardShuffle(_cards.map((ele) => {\n        return (\n          <FlippableCard\n            key={ele.id}\n            frontTitle=\"フロント\"\n            backTitle=\"バック\"\n            frontText={ele.front}\n            backText={ele.back}\n            onClick={onClick}\n            isFlipped={isCardFlipped}\n            setIsFlipped={setIsCardFlipped}\n            imageRef={ele.imageRef}\n          />\n        )\n      }));\n      setIsLoaded(true);\n    }\n\n  }, [isCardFlipped, onClick, hashCards]\n  );\n\n  if (!isLoaded) return (\n    <main>\n      <div className=\"container center\">\n        <Spinner />\n      </div>\n    </main>\n  );\n\n  if (!cards) return (\n    <div className=\"container center\">\n      <p>We couldn't find this deck. :(</p>\n    </div>\n  )\n\n  if (!canView || cards.length === 0) return (\n    <div className=\"container center\">\n      <p>This deck is either private or has no cards! If you are the owner, you can view it and edit it from your dashboard.</p>\n    </div>\n  );\n\n  const slideCallback = () => {\n    setIsCardFlipped(false);\n  }\n\n  const shuffleCard = (array) => {\n    let currentIndex = array.length, randomIndex;\n\n    while (currentIndex != 0) {\n\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ width: 250, display: 'flex', flexDirection: 'column', justifyContent: 'flex-end', alignItems: 'center', backgroundColor: '#DADCE2' }}>\n        <div style={{\n          position: 'absolute',\n          top: 100,\n          marginLeft: 10,\n          marginRight: 10\n        }}>\n          <p style={{ fontWeight: 'bold', fontSize: '25px'}}>{title}</p>\n          \n          <br/>\n          \n          <div style={{maxWidth: 200}}>\n            <p style={{ fontWeight: 'bold', fontSize: '25px'}}>説明: </p>\n            <text style={{fontWeight: '500', display: '-webkit-box', wordBreak: 'break-word'}}>{description}</text>\n          </div>\n        </div>\n        <div style={{\n          background: shuffle == 0 ? 'green' : 'grey',\n          height: 30,\n          width: 100,\n          textAlign: 'center',\n          zIndex: 1,\n          color: shuffle == 0 ? 'white' : 'black',\n          lineHeight: 2,\n          verticalAlign: 'center',\n          borderRadius: 15,\n          cursor: 'pointer'\n        }} onClick={(event) => {\n          setShuffle(0)\n        }}>ソート順</div>\n        <div style={{\n          background: shuffle != 0 ? 'green' : 'gray',\n          height: 30,\n          width: 100,\n          textAlign: 'center',\n          zIndex: 1,\n          color: shuffle != 0 ? 'white' : 'black',\n          marginTop: 50,\n          marginBottom: 100,\n          lineHeight: 2,\n          verticalAlign: 'center',\n          borderRadius: 15,\n          cursor: 'pointer'\n        }} onClick={(event) => {\n          setCardShuffle(shuffleCard(cardShuffle))\n          setShuffle(prev => prev + 1)\n        }}>ランダム順</div>\n      </div>\n      <Carousel\n        items={shuffle != 0 ? cardShuffle : cards}\n        leftButtonText={<FontAwesomeIcon icon={faAngleLeft} />}\n        rightButtonText={<FontAwesomeIcon icon={faAngleRight} />}\n        animTime={.3}\n        previousCallback={slideCallback}\n        nextCallback={slideCallback}\n        showButtons={true}\n      />\n      <div style={{ width: 250, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', backgroundColor: '#DADCE2' }}>\n        <button\n          onClick={() => {\n            if (cards.length >= 4) {\n              history.push('/app/test/'+hash)\n            } else {\n              alert.show('テストを作成するには、セットに少なくとも4枚のカードが必要です')\n            }\n          }}\n          style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30 }}\n        >\n          <> 復習</>\n        </button>\n        <button\n          onClick={() => {\n            history.push('/app/test-match/'+hash)\n          }}\n          style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30 }}\n        >\n          <>マッチング</>\n        </button>\n        <button\n          onClick={() => {\n            alert.show('機能は開発中です')\n          }}\n          style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30 }}\n        >\n          <>履歴</>\n        </button>\n      </div>\n    </div>\n\n  );\n}\n\nexport default Deck;","/**\n * Methods for accessing the firestore database:\n *\n * createDeck\n * deleteDeck\n * updateDeck\n * createCard\n * updateCard\n * deleteCard\n */\n\nimport { db } from \"./firebaseIndex\";\nimport firebase from \"firebase\";\n\nexport const dbMethods = {\n  createDeck: (user, title, description, cards, isPublic = true, saveCount) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const document = db.collection(\"decks\").doc();\n\n    const newDeck = {\n      id: document.id,\n      numCards: cards.length,\n      title,\n      description,\n      owner: user.uid,\n      cards: cards,\n      isPublic: isPublic,\n      saved_users: []\n    };\n\n    document\n      .set(newDeck)\n      .then(console.log(\"Created new deck.\"))\n      .catch((err) => {\n        console.error(\"Error creating deck: \", err.message);\n      });\n  },\n\n  deleteDeck: (user, deckId) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    db.collection(\"decks\")\n      .doc(deckId)\n      .delete()\n      .then(console.log(\"Deck successfully deleted.\"))\n      .catch((err) => {\n        console.error(\"Error deleting deck: \", err.message);\n      });\n  },\n\n  saveDeck: (user, deck) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n    return db\n      .collection(\"decks\")\n      .doc(deck.id)\n      .update({\n        saved_users: firebase.firestore.FieldValue.arrayUnion(user.uid),\n      })\n      .then(() => {\n        console.log(\"Updated deck with id: \", deck.id);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n\n  unsaveDeck: async (user, deck) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n    return db\n      .collection(\"decks\")\n      .doc(deck.id)\n      .update({\n        saved_users: firebase.firestore.FieldValue.arrayRemove(user.uid),\n      })\n      .then(() => {\n        console.log(\"Updated deck with id: \", deck.id);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n\n  updateDeck: (user, deckId, title, description, cards, isPublic = true) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const updatedDeck = {\n      title,\n      description,\n      cards,\n      numCards: cards.length,\n      isPublic: isPublic,\n    };\n\n    return db\n      .collection(\"decks\")\n      .doc(deckId)\n      .update(updatedDeck)\n      .then(() => {\n        console.log(\"Updated deck with id: \", deckId);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n\n  updateUser: async (user, coin, isPrenium) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const updatedUser = {\n      coin,\n      isPrenium,\n    };\n\n    return db\n      .collection(\"users\")\n      .doc(user.uid)\n      .update(updatedUser)\n      .then(() => {\n        console.log(\"Updated user with uid: \", user.uid);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n};\n","/**\n * Displays a text or password input, dependinding on \n * the type prop. The password input can toggle between\n * password and text types.\n */\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash, faLock } from '@fortawesome/free-solid-svg-icons';\n\nconst TextInput = ({\n  labelText,\n  icon=null,\n  type=\"text\",\n  id=\"\",\n  name=\"\",\n  placeholder=\"\",\n  value,\n  onChange,\n  autocomplete=\"on\"\n}) => {\n  const [isHidden, setIsHidden] = useState(true);\n\n  const toggleHidden = (event) => {\n    event.preventDefault();\n    setIsHidden(prev => !prev);\n  }\n\n  if (icon === null && type===\"password\")\n    icon = <FontAwesomeIcon icon={faLock} />\n\n  return (\n    <div className=\"input-block\">\n      <label htmlFor={id}>{labelText}</label>\n      <div className=\"input-row\">\n        {icon}\n        <input \n          type={type === \"password\" ? isHidden ? \"password\" : \"text\" : type}\n          name={name}\n          id={id}\n          value={value}\n          onChange={onChange}\n          style={{outline: \"none\"}}\n          autoComplete={autocomplete}\n        >\n        </input>\n        {type === \"password\" &&\n          <button\n            type=\"button\"\n            className=\"btn btn-icon\"\n            onClick={toggleHidden}\n          >\n            {isHidden ?\n              <FontAwesomeIcon icon={faEye} />\n            :\n              <FontAwesomeIcon icon={faEyeSlash} />\n            }\n          </button>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default TextInput;","/**\n * Displays a heading with a subtitle.\n */\n\nimport React from 'react';\n\nconst PageHeading = ({\n  title,\n  subTitle,\n  styles = {textAlign: 'center'},\n  subTitleStyles = {textAlign: 'center'},\n}) => {\n  let titleElement = null;\n  titleElement=<h1 style={styles}>{title}</h1>\n\n  return (\n    <header className=\"page-heading\">\n      {titleElement}\n      {subTitle != null && <h5 style={subTitleStyles}>{subTitle}</h5>}\n    </header>\n  )\n}\n\nexport default PageHeading;","import React, { useContext, useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { storage } from \"../../firebase/firebaseIndex\";\nimport { firebaseAuth } from \"../../provider/AuthProvider\";\n\nconst UploadAndDisplayImage = ({\n    onSetImage,\n    imageRef,\n    onUploadingImage\n}) => {\n    const [image, setImage] = useState(null);\n    const [filePath, setFilePath] = useState(imageRef);\n    const { user } = useContext(firebaseAuth);\n    const [uploading, setUploading] = useState(false);\n    const [percentage, setPercentage] = useState(0);\n    const alert = useAlert()\n\n    useEffect(() => {\n        if (imageRef) {\n            storage.ref(imageRef).getDownloadURL().then((downloadURL) => {\n                setImage(downloadURL)\n            });\n            setFilePath(imageRef)\n        }\n    }, [imageRef]);\n\n    return (\n        <div style={{paddingBottom: 20}}>\n            {filePath && (\n                <div>\n                    <img alt=\"not fount\" width={\"250px\"} src={image} />\n                    <br />\n                    <button onClick={() => {\n                        const deleteTask = storage.ref(filePath).delete();\n                        deleteTask.then(() => {\n                            alert.show('ファイルが正常に削除されました');\n                            setFilePath(null)\n                            onSetImage(null)\n                        }).catch((error) => {\n                        });\n                    }}>削除する</button>\n                </div>\n            )}\n            <br />\n\n            <br />\n            {uploading && <div>{`画像のアップロードは${percentage}％完了`}</div>}\n            <br />\n            {filePath == null && \n            <input\n            type=\"file\"\n            name=\"myImage\"\n            onChange={(event) => {\n                \n                const uploadTask = storage.ref(`${user.uid}/${event.target.files[0].name}`).put(event.target.files[0]);\n                uploadTask.on('state_changed',\n                    (snapshot) => {\n                        setUploading(true)\n                        onUploadingImage(true)\n                        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                        setPercentage(Number(progress.toFixed(0)))\n                        console.log('Upload is ' + progress + '% done');\n                        switch (snapshot.state) {\n                            case 'paused':\n                                console.log('Upload is paused');\n                                break;\n                            case 'running':\n                                console.log('Upload is running');\n                                break;\n                        }\n                    },\n                    (error) => {\n                    },\n                    () => {\n                        storage.ref(`${user.uid}`).child(event.target.files[0].name).getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                            setUploading(false)\n                            onUploadingImage(false)\n                            alert.show(\"ファイルが正常にアップロードされました\")\n                            onSetImage(`${user.uid}/${event.target.files[0].name}`);\n                            setImage(downloadURL)\n                            setFilePath(`${user.uid}/${event.target.files[0].name}`)\n                        });\n                    }\n                );\n            }}\n        />\n            }\n        </div>\n    );\n};\n\nexport default UploadAndDisplayImage;","/**\n * Handles displaying each card editor.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport UploadAndDisplayImage from './UploadAndDisplayImage';\n\nconst CardEditor = ({\n  index,\n  card,\n  onSubmit,\n  onUpdate,\n  onDelete\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [uploading, setUploading] = useState(false);\n\n  useEffect(() => {\n    setFront(card.front);\n    setBack(card.back);\n    setImage(card.imageRef);\n  }, [card])\n\n  const handleInput = (event) => {\n    if (event.target.name === \"front\") {\n      setFront(event.target.value);\n    } else if (event.target.name === \"back\") {\n      setBack(event.target.value);\n    }\n  }\n\n  const updateCard = (event) => {\n    event.preventDefault();\n    if (front.length <= 0 || image == null) {\n      return;\n    }\n    if (back.length <=0 ) {\n      return;\n    }\n    if (uploading) {\n      return;\n    }\n    console.log(\"Card to update: \", card.id);\n    onUpdate(index, front, back, image)\n    onSubmit();\n  }\n\n  const deleteCard = (event) => {\n    event.preventDefault();\n    onDelete(index)\n  }\n\n  return (\n    <form className=\"card-editor\" onSubmit={updateCard}>\n      <div className=\"input-block\">\n        <textarea\n          name=\"front\"\n          id={card.id + \"-front\"}\n          value={front}\n          onChange={handleInput}\n        />\n        <label htmlFor={card.id + \"-front\"}>フロント</label>\n      </div>\n      <div className=\"input-block\">\n        <textarea\n          name=\"back\"\n          id={card.id + \"-back\"}\n          value={back}\n          onChange={handleInput}\n        />\n        <label htmlFor={card.id + \"-back\"}>バック</label>\n      </div>\n      <UploadAndDisplayImage onSetImage={(image)=>{\n        setImage(image);\n      }} imageRef={image} onUploadingImage={setUploading}/>\n      <button className=\"btn\">アップデート</button>\n      <button className=\"btn btn-warning\"\n        onClick={deleteCard}\n      >\n        <FontAwesomeIcon icon={faTrash} /> 削除\n      </button>\n    </form>\n  );\n}\n\nexport default CardEditor;","/**\n * Renders the toggleable card creator box.\n */\n\nimport React, { useState } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport UploadAndDisplayImage from './UploadAndDisplayImage';\n\nconst CardCreator = ({\n  onCreateCard\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [uploading, setUploading] = useState(false);\n\n  const handleInput = (event) => {\n    if (event.target.name === \"front\") {\n      setFront(event.target.value);\n    } else if (event.target.name === \"back\") {\n      setBack(event.target.value);\n    }\n  }\n\n  const createCard = (event) => {\n    event.preventDefault();\n    if (front.length <= 0 && image == null) {\n      return;\n    }\n    if (back.length <=0 ) {\n      return;\n    }\n    if (uploading) {\n      return;\n    }\n    console.log(\"Creating new card.\");\n    onCreateCard(front, back, image);\n    setFront(\"\");\n    setBack(\"\");\n    setImage(null);\n    setIsOpen(false);\n  }\n\n  if (!isOpen) return (\n    <button className=\"btn btn-tertiary\"\n      onClick={() => setIsOpen(true)}\n    >\n      新しいカードを追加する <FontAwesomeIcon icon={faPlus} className=\"icon\" />\n    </button>\n  );\n\n  return (\n    <>\n      <button id=\"add\" className=\"btn btn-tertiary highlighted\"\n        onClick={() => setIsOpen(false)}\n      >\n        新しいカードを追加する <FontAwesomeIcon icon={faMinus} className=\"icon\"/>\n      </button>\n      <form className=\"card-editor\" onSubmit={createCard}>\n        <div className=\"input-block\">\n          <textarea\n            name=\"front\"\n            id=\"new-front\"\n            value={front}\n            onChange={handleInput}\n          />\n          <label htmlFor=\"new-front\">フロント</label>\n        </div>\n        <div className=\"input-block\">\n          <textarea\n            name=\"back\"\n            id=\"new-back\"\n            value={back}\n            onChange={handleInput}\n            style={{outline: \"none\"}}\n          />        \n          <label htmlFor=\"new-back\">バック</label>\n        </div>\n        <UploadAndDisplayImage onSetImage={(image)=>{\n            setImage(image);\n          }} imageRef={image} onUploadingImage={setUploading}/>\n        <button className=\"btn\">追加する</button>\n      </form>\n    </>\n  );\n}\n\nexport default CardCreator;","/**\n * Generates and displays all the toggleable card editor boxes\n * in an accordion.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\n\nimport CardEditor from './decks-and-cards/CardEditor';\nimport CardCreator from './decks-and-cards/CardCreator';\n\nconst Accordion = ({\n  listCards,\n  onCards,\n}) => {\n  const [cards, setCards] = useState(listCards || []);\n  const [card, setCard] = useState(-1);\n  const [cardEditorElements, setCardEditorElements] = useState([]);\n\n  const handleClick = (event) => {\n    console.log(event.target.value)\n    setCard(prev => prev === event.target.value ? -1 : event.target.value);\n  }\n\n  const onCreateCard = (front, back, imageRef) => {\n    let newCard = {front: front, back: back, imageRef: imageRef}\n    console.log(28888, newCard);\n    cards.push(newCard)\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  const onDeleteCard = (index) => {\n    cards.splice(index, 1);\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  const onUpdateCard = (index, front, back, imageRef) => {\n    cards[index] = {front: front, back: back, imageRef: imageRef};\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  useEffect(() => {\n    setCards(listCards)\n  },[listCards])\n\n  useEffect(() => {\n    updateElements()\n  }, [card, cards]);\n\n  const updateElements = () => {\n    const elements = cards.map( (ele, index) => {\n      let classes = index === card ? \"btn btn-tertiary highlighted\" : \"btn btn-tertiary\";\n      console.log(index)\n      console.log(ele);\n      return (\n        <React.Fragment key={index} >\n          <button \n            className={classes}\n            value={index}\n            onClick={handleClick}\n          >\n            <span className=\"truncate\">\"{ele.front}\"</span> \n            {card === `${index}` ?\n              <FontAwesomeIcon icon={faAngleUp} />\n            :\n              <FontAwesomeIcon icon={faAngleDown} />\n            }\n          </button>\n          {card === `${index}` && \n            <CardEditor\n              index={index}\n              card={ele}\n              onSubmit={() => setCard(\"\")}\n              onDelete={onDeleteCard}\n              onUpdate={onUpdateCard}\n            />\n          }\n        </React.Fragment>\n      )\n    })\n\n    setCardEditorElements(elements);\n  }\n\n  return (\n    <>\n      {cardEditorElements}\n      <CardCreator\n        onCreateCard={onCreateCard}\n      />\n    </>\n  );\n}\n\nexport default Accordion;","/**\n * Handles the creation of new decks.\n */\n\nimport React, { useState, useContext } from 'react';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { useHistory } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook, faPaperclip } from '@fortawesome/free-solid-svg-icons';\n\nimport TextInput from '../TextInput';\nimport PageHeading from '../PageHeading';\nimport Accordion from '../Accordion';\nimport { useAlert } from 'react-alert';\n\nconst DeckCreator = () => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n  const [listCards, setListCards] = useState([]);\n  const [isPublic, setIsPublic] = useState(true);\n  const [saveCount, setSaveCount] = useState(0);\n  const alert = useAlert()\n\n  const checkReadyToCreate = (event) => {\n    event.preventDefault();\n    if(listCards.length == 0) alert.show(\"フラッシュカードセットを初期化するには、少なくとも1枚のカードが必要です！\");\n    else if (title.length <= 0) alert.show(\"フラッシュカードセットを初期化するには、セットのタイトルを入力する必要があります！\");\n    else if (description.length <= 0) alert.show(\"フラッシュカードセットを初期化するには、セットの説明を入力する必要があります！\");\n    else createDeck();\n  }\n\n  const createDeck = () => {\n    dbMethods.createDeck(user, title, description, listCards, isPublic, saveCount);\n    setUpdateSuccess(true);\n    history.push(\"/app\");\n  }\n\n  const onUpdateCards = (cards) => {\n    setListCards(cards)\n  }\n\n  const onUpdateDecks = (event) => {\n    createDeck();\n  }\n\n  return (\n    <div style={{textAlign: 'left'}}>\n      <form \n      id=\"new-deck\" \n      onSubmit={checkReadyToCreate}\n    >\n      <TextInput \n        labelText=\"題名\"\n        icon={<FontAwesomeIcon icon={faPaperclip} />}\n        id=\"title\"\n        name=\"title\"\n        value={title}\n        onChange={(event) => setTitle(event.target.value)}\n        autocomplete=\"off\"\n      />\n      <TextInput \n        labelText=\"説明\"\n        icon={<FontAwesomeIcon icon={faBook} />}\n        id=\"description\"\n        name=\"description\"\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n        autocomplete=\"off\"\n      />\n      <p>\n        <span></span>\n        パブリックシェアリング？ デフォルト：パブリック。\n      </p>\n      \n      <input\n        id=\"public-true\"\n        name=\"public\"\n        type=\"radio\"\n        value=\"はい\"\n        checked={isPublic ? true : false}\n        onChange={() => setIsPublic(true)}\n        style={{marginRight: '10px'}}\n      />\n      <span onClick={() => setIsPublic(true)}>パブリック</span>\n      <br></br>\n      <input\n        id=\"public-false\"\n        name=\"public\"\n        type=\"radio\"\n        value=\"いいえ\"\n        checked={isPublic ? false : true}\n        onChange={() => setIsPublic(false)}\n        style={{marginRight: '10px'}}\n      />\n      <span onClick={() => setIsPublic(false)}>プライベート</span>\n    </form>\n      <div>\n        <PageHeading \n          title=\"カード\"\n          styles={{textAlign: 'left'}}\n        />\n        <Accordion\n          listCards={listCards}\n          onCards={onUpdateCards}\n        />\n      </div>\n      <button className=\"btn btn-primary\" onClick={checkReadyToCreate}>\n          {updateSuccess ? \"Success!\" : \"作成\" }\n      </button>\n    </div>\n  );\n}\n\nexport default DeckCreator;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { useHistory } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook, faHeading, faPaperclip } from '@fortawesome/free-solid-svg-icons';\n\nimport Accordion from '../Accordion';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\nimport firebase from 'firebase';\nimport { useAlert } from 'react-alert';\n\nconst DeckEditor = ({\n  deckToEdit,\n  setDeckToEdit,\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n  const localDeck = JSON.parse(localStorage.getItem('deck'))\n  const deck = deckToEdit || localDeck;\n  const [title, setTitle] = useState(deck.title);\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n  const [description, setDescription] = useState(deck.description);\n  const [listCards, setListCards] = useState([])\n  console.log(deck);\n  const [isPublic, setIsPublic] = useState(deck.isPublic ?? true);\n  const alert = useAlert()\n\n  const checkReadyToUpdate = () => {\n    if(listCards.length == 0) alert.show(\"フラッシュカードセットを初期化するには、少なくとも1枚のカードが必要です！\");\n    else if (title.length <= 0) alert.show(\"フラッシュカードセットを初期化するには、セットのタイトルを入力する必要があります！\");\n    else if (description.length <= 0) alert.show(\"フラッシュカードセットを初期化するには、セットの説明を入力する必要があります！\");\n    else updateDeck();\n  }\n\n  const updateDeck = () => {\n    dbMethods.updateDeck(user, deck.id, title, description, listCards, isPublic)\n    setDeckToEdit({...deckToEdit, title});\n    setUpdateSuccess(true);\n    setTimeout(() => setUpdateSuccess(false), 3000);\n  }\n\n  const deleteDeck = (event) => {\n    event.preventDefault();\n    dbMethods.deleteDeck(user, deck.id);\n    history.push('/app');\n    setDeckToEdit(null);\n  }\n\n  const db = firebase.firestore();\n\n  useEffect(() => {\n    if (!deck) {\n      return\n    }\n    console.log(deck)\n    let ref = db.collection('decks').doc(deck.id);\n    ref.get()\n      .then(snapshot => {\n        let arr = [];\n        snapshot.data().cards?.forEach(item => arr.push(item));\n        setListCards(arr);\n      })\n      .catch(error => console.log(\"Error: \", error.message))\n  }, [])\n\n  const onUpdateCards = (cards) => {\n    setListCards(cards)\n  }\n\n  const onUpdateDecks = (event) => {\n    updateDeck();\n  }\n\n  return (\n    <div style={{textAlign: 'left'}}>\n      <PageHeading\n        title=\"セットを編集する\"\n        styles={{textAlign: 'left'}}\n      />\n      <form onSubmit={checkReadyToUpdate}>\n        <TextInput \n          labelText=\"題名\"\n          icon={<FontAwesomeIcon icon={faPaperclip} />}\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          placeholder=\"New Deck\"\n          autocomplete=\"off\"\n        />\n        <TextInput \n        labelText=\"説明\"\n        icon={<FontAwesomeIcon icon={faBook} />}\n        id=\"description\"\n        name=\"description\"\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n        autocomplete=\"off\"\n        />\n        <p>\n        <span></span>\n        パブリックシェアリング？ デフォルト：パブリック。\n      </p>\n      \n      <input\n        id=\"public-true\"\n        name=\"public\"\n        type=\"radio\"\n        value=\"はい\"\n        checked={isPublic ? true : false}\n        onChange={() => setIsPublic(true)}\n        style={{marginRight: '10px'}}\n      />\n      <span onClick={() => setIsPublic(true)}>パブリック</span>\n      <br></br>\n      <input\n        id=\"public-false\"\n        name=\"public\"\n        type=\"radio\"\n        value=\"いいえ\"\n        checked={isPublic ? false : true}\n        onChange={() => setIsPublic(false)}\n        style={{marginRight: '10px'}}\n      />\n      <span onClick={() => setIsPublic(false)}>プライベート</span>\n      </form>\n      <div>\n        <PageHeading \n          title=\"カード\"\n          styles={{textAlign: 'left'}}\n        />\n        <Accordion\n          listCards={listCards}\n          onCards={onUpdateCards}\n        />\n      </div>\n      <button\n          className=\"btn btn-primary\"\n          onClick={checkReadyToUpdate}\n        >\n          {updateSuccess ? \"編集に成功しました！\" : \"編集\" }\n        </button>\n      <div>\n        <PageHeading \n          title=\"デッキを削除する\"\n          styles={{textAlign: 'left'}}\n        />\n        <form onSubmit={deleteDeck}>\n          <button\n            className=\"btn btn-warning\"\n          >削除する</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default DeckEditor;","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faSave, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { db } from '../../firebase/firebaseIndex';\nimport { useAlert } from 'react-alert';\n\nconst SelectableDeck = ({\n  length,\n  deck,\n  setDeckToEdit,\n  mine,\n  userStatus,\n}) => {\n  const history = useHistory();\n  const {user} = useContext(firebaseAuth)\n  const [saved, setSaved] = useState(false);\n  const savedDecksRaw = localStorage.getItem('save_decks')\n  const alert = useAlert()\n\n  useEffect(() => {\n    setSaved(isSaved())\n  },[])\n\n  const isPrenium = () => {\n    console.log(userStatus?.isPrenium)\n    return userStatus?.isPrenium ?? false\n  }\n\n  const isSaved = () => {\n    if (!savedDecksRaw || savedDecksRaw.length == 0) {\n      return false\n    }\n    let savedDecks = JSON.parse(savedDecksRaw)\n    if (!savedDecks || savedDecks.length == 0) {\n      return false\n    }\n    let filterArray = savedDecks.filter(item => item.id == deck.id)\n    return (filterArray && filterArray.length > 0)\n  }\n\n  const saveCount = () => {\n    if (!savedDecksRaw || savedDecksRaw.length == 0) {\n      return 0\n    }\n    let savedDecks = JSON.parse(savedDecksRaw)\n    if (!savedDecks) {\n      return 0\n    }\n    return savedDecks.length\n  }\n\n  return (\n    <li style={{background: '#EAB2AE', marginBottom: 20, borderRadius: 10}}\n      // className={selectedDecks?.includes(id) ? \"selected\" : \"\"}\n      // onClick={(event) => {\n      //   event.stopPropagation();\n      //   toggleDeck(id);\n      // }}\n      // role=\"checkbox\"\n      // aria-checked={selectedDecks?.includes(id) ? \"true\" : \"false\"}\n    >\n      <div\n        onClick={() => {\n          history.push('/app/d/'+deck.id)\n        }}\n      >\n        {/* <input\n          name={id}\n          type=\"checkbox\"\n          checked={selectedDecks?.includes(id)}\n          onChange={() => null}\n        /> */}\n        <label htmlFor=\"checkbox\" className=\"truncate\">\n          <span></span>\n          <strong>{deck.title}</strong> ({length} {\"カード\"})\n          \n        </label>\n      </div>\n      <div>\n      <span>説明:&nbsp;</span>\n      <div style={{maxWidth: 300}}>\n      <text style={{fontWeight: '500', display: '-webkit-box', wordBreak: 'break-word'}}>{deck.description}</text>\n        </div>\n      </div>\n      <div>\n      保存回数: {deck.saveCount}\n      </div>\n      <div className=\"button-row\">\n        {mine ? <button \n          className=\"btn btn-icon\"\n          style={{color: 'black'}}\n          onClick={(event) => {\n            event.stopPropagation();\n            setDeckToEdit();\n            localStorage.setItem('deck', JSON.stringify(deck));\n            history.push(\"/app/edit\");\n          }}\n        >\n          <FontAwesomeIcon icon={faEdit} /> 編集する\n        </button>\n        : <button \n        className=\"btn btn-icon\"\n        style={{color: 'black'}}\n        onClick={(event) => {\n          event.stopPropagation();\n          if (saved) {\n            dbMethods.unsaveDeck(user, deck)\n            setSaved(false)\n          } else {\n            if (isPrenium() || (saveCount() < 3)) {\n              dbMethods.saveDeck(user, deck)\n              setSaved(true)\n            } else {\n              alert.show(\"プレミアムにアップグレードしていない場合は、完全な機能のためにアップグレードしてください\")\n            }\n          }\n        }}\n      >\n        <FontAwesomeIcon icon={saved ? faTrash : faSave} /> {saved ? \"削除する\" : \"保存する\"}\n      </button>\n        }\n      </div>\n    </li>\n  );\n}\n\nexport default SelectableDeck;","import React, { useState, useEffect, useContext } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport SelectableDeck from './SelectableDeck';\n\nfunction Items({ currentItems, user, setDeckToEdit}) {\n  return (\n    <React.Fragment>\n        {currentItems}\n    </React.Fragment>\n  );\n}\n\nfunction PaginatedItems({ itemsPerPage, decks, user, setDeckToEdit}) {\n  // We start with an empty list of items.\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    setCurrentItems(decks.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(decks.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage, decks]);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    const newOffset = event.selected * itemsPerPage % decks.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  return (\n    <>\n      <Items currentItems={currentItems} user={user} />\n      <ReactPaginate\n        nextLabel=\"次 ->\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={2}\n        pageCount={pageCount}\n        previousLabel=\"<- 前\"\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel=\"...\"\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n}\n\nconst DeckList = ({\n  decks,\n  setDeckToEdit,\n  userStatus\n}) => {\n  const [deckList, setDeckList] = useState([]);\n  const { user } = useContext(firebaseAuth);\n\n  useEffect(() => {\n    if (!decks) {return}\n    setDeckList(decks.map(deck => {\n      return (\n        <SelectableDeck \n          key={deck.id}\n          length={deck.numCards}\n          deck={deck}\n          mine={user && deck.owner == user.uid}\n          userStatus={userStatus}\n          setDeckToEdit={() => {\n            setDeckToEdit({ id: deck.id, title: deck.title, private: deck.private, description: deck.description, isPublic: deck.isPublic });\n          }}\n        />\n      );}\n    ));\n  }, [decks]);\n\n  useEffect(() => {\n  }, [deckList])\n\n  return (\n    <div className=\"deck-list\">\n      <ul>\n        {deckList.length > 0 ? \n          <PaginatedItems itemsPerPage={4} decks={deckList} user={user} setDeckToEdit={setDeckToEdit}/>\n        :\n          <p>セットがありません。 作成して開始してください！</p>\n        }\n      </ul>\n      \n    </div>\n  );\n}\n\nexport default DeckList;"," import React, { useState, useContext, useEffect } from 'react';\n import { Link, Switch, Route, useHistory } from 'react-router-dom';\n import { firebaseAuth } from '../provider/AuthProvider';\n  \n import DeckList from './decks-and-cards/DeckList';\n import PageHeading from './PageHeading';\n \n const SavedDecks = ({\n   saveDecks,\n }) => {\n   const { user } = useContext(firebaseAuth);\n   const history = useHistory();\n \n   if (!user) {\n     history.push(\"/log-in\");\n   }\n \n   return (\n     <div className=\"dashboard\">\n         <Switch>\n           <Route path=\"/app/saved\">\n             <div style={{ display: 'flex' }}>\n               <div style={{ width: '100%', margin: '0 auto', paddingRight: 30 }}>\n                 <PageHeading\n                   title=\"保存したセット\"\n                 />\n                 <div>\n                   <DeckList\n                     decks={saveDecks}\n                   />\n                 </div>\n               </div>\n             </div>\n           </Route>\n         </Switch>\n     </div>\n   );\n }\n \n export default SavedDecks;","/**\n * Displays the dashboard page.\n */\n\n import React, { useState, useContext, useEffect } from 'react';\n import { Link, Switch, Route, useHistory } from 'react-router-dom';\n import { firebaseAuth } from '../provider/AuthProvider';\n \n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n import { faPlus } from '@fortawesome/free-solid-svg-icons';\n \n import DeckCreator from './decks-and-cards/DeckCreator';\n import DeckEditor from './decks-and-cards/DeckEditor';\n import DeckList from './decks-and-cards/DeckList';\n import PageHeading from './PageHeading';\n \n const CreatedDecks = ({\n   decks,\n   cards,\n }) => {\n   const [deckToEdit, setDeckToEdit] = useState(null);\n   const { user } = useContext(firebaseAuth);\n   const history = useHistory();\n \n   if (!user) {\n     history.push(\"/log-in\");\n   }\n \n   return (\n     <div className=\"dashboard\">\n         <Switch>\n           <Route path=\"/app/edit\">\n             <DeckEditor\n               deckToEdit={deckToEdit}\n               setDeckToEdit={setDeckToEdit}\n               cards={cards}\n             />\n           </Route>\n           <Route path=\"/app/create\">\n             <PageHeading \n               title=\"新セット\"\n             />\n             <DeckCreator />\n           </Route>\n           <Route path=\"/app/created\">\n             <div style={{ display: 'flex' }}>\n               <div style={{ width: '100%', margin: '0 auto', paddingRight: 30 }}>\n                 <PageHeading\n                   title=\"作ったセット\"\n                 />\n                 <div>\n                   <DeckList\n                     decks={decks}\n                     setDeckToEdit={setDeckToEdit}\n                   />\n                 </div>\n               </div>\n               <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', paddingTop: 100, paddingLeft: 60, width: 200}}>\n                 <button\n                   onClick={() => {\n                     history.push('/app/create')\n                   }}\n                   style={{color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30}}\n                 >\n                   <><FontAwesomeIcon icon={faPlus} style={{marginRight: 5}} /> 新作</>\n                 </button>\n               </div>\n             </div>\n           </Route>\n         </Switch>\n     </div>\n   );\n }\n \n export default CreatedDecks;","/**\n * Handles logic for getting the selected deck and cards.\n * Generates FlippableCards for each card to be shown, and \n * renders them in a Carousel.\n */\n\n import React, { useState, useEffect } from 'react';\n import firebase from 'firebase';\n \n import { useHistory, useParams } from 'react-router-dom';\n \n import Spinner from '../Spinner';\n \n const shuffleCard = (array) => {\n    let currentIndex = array.length, randomIndex;\n\n    while (currentIndex != 0) {\n\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n const Test = () => {\n   const history = useHistory();\n   const [cards, setCards] = useState([]);\n   const [hashCards, setHashCards] = useState(null);\n   const [isCardFlipped, setIsCardFlipped] = useState(false);\n   const [canView, setCanView] = useState(true);\n   const [isLoaded, setIsLoaded] = useState(false);\n   const { hash } = useParams();\n   const [correctAnswer, setCorrectAnswer] = useState([]);\n   const [selectedAnswer, setSelectedAnswer] = useState([]);\n   const [result, setResult] = useState();\n   const [submitted, setSubmitted] = useState(false);\n \n   useEffect(() => {\n     setIsLoaded(false);\n     setHashCards(null);\n     setCards(null);\n \n     console.log(hash)\n     if (hash === undefined) return;\n \n     const db = firebase.firestore();\n \n     db.collection('decks').doc(hash).get()\n     .then(snapshot => {\n       setIsLoaded(true);\n     })\n     .catch(error => {\n       setIsLoaded(true);\n       console.log(\"Error: \", error.message)\n     })\n \n     let ref = db.collection('decks').doc(hash);\n     ref.get()\n       .then(snapshot => {\n         let arr = [];\n         snapshot.data().cards?.forEach(item => arr.push(item));\n         setHashCards(arr);\n       })\n       .catch(error => console.log(\"Error: \", error.message))\n   }, [hash]);\n \n   useEffect(() => {\n     setIsLoaded(false);\n     let _cards = [];\n \n     if (hashCards != null) {\n       _cards = hashCards;\n     } else {\n       _cards = [];\n     }\n \n     let _listCorrectAnswer = [];\n     if (_cards.length > 0) {\n       setCards(_cards.map((ele, cardIndex) => {\n        const question = ele.front\n        let answers = [];\n        answers.push(ele.back);\n        while (answers.length < 4) {\n            const randomIndex = Math.floor(Math.random() * _cards.length);\n            if (!answers.includes(_cards[randomIndex].back)) {\n                answers.push(_cards[randomIndex].back)\n            }\n        }\n        shuffleCard(answers);\n        for (let index = 0; index < answers.length; index++) {\n            const element = answers[index];\n            if (element == ele.back) {\n                _listCorrectAnswer.push(index)\n            }\n        }\n        return {\n            question: question,\n            answers: answers,\n        }\n       }));\n       setCorrectAnswer(_listCorrectAnswer);\n       setSelectedAnswer(Array(_listCorrectAnswer.length).fill(-1))\n       setIsLoaded(true);\n     }\n\n     }, [isCardFlipped, hashCards]\n   );\n \n   if (!isLoaded) return (\n     <main>\n       <div className=\"container center\">\n         <Spinner />\n       </div>\n     </main>\n   );\n \n   if (!cards) return (\n     <div className=\"container center\">\n       <p>We couldn't find this deck. :(</p>\n     </div>\n   )\n \n   if (!canView || cards.length === 0) return (\n       <div className=\"container center\">\n         <p>This deck is either private or has no cards! If you are the owner, you can view it and edit it from your dashboard.</p>\n       </div>\n   );\n\n   const _generateListQuestion = () => {\n       return cards.map((ele, cardIndex) => {\n         return (\n            <div style={{\n                border: '1px solid rgba(0, 0, 0, 0.5)', \n                borderRadius: 20,\n                width: '100%',\n                marginBottom: 30,\n                padding: 30}}>\n                    <div style={{\n                        width: '100%',\n                        textAlign: 'center'\n                    }}>\n                        {ele?.question}\n                    </div>\n                {ele?.answers?.map((element, index)=> {\n                  let backgroundColor = index == selectedAnswer[cardIndex] ? 'green' : 'white'\n                  if (submitted) {\n                    if (selectedAnswer[cardIndex] != correctAnswer[cardIndex] && index == correctAnswer[cardIndex]) {\n                      backgroundColor = 'red'\n                    }\n                  }\n                    return <div style={{\n                        height: 30,\n                        width: '80%',\n                        marginLeft: '10%',\n                        marginBottom: 10,\n                        marginTop: 10,\n                        border: '1px solid rgba(0, 0, 0, 0.2)', \n                        borderRadius: 20,\n                        textAlign: 'center',\n                        lineHeight: 2,\n                        verticalAlign: 'center',\n                        backgroundColor: backgroundColor,\n                    }} onClick={(event) => {\n                     const newAnswer = [\n                         ...selectedAnswer.slice(0, cardIndex),\n                         index, \n                         ...selectedAnswer.slice(cardIndex + 1)\n                       ]\n                     setSelectedAnswer(newAnswer)\n                    }}>\n                        <div style={{color: index == selectedAnswer[cardIndex] ? 'white' : 'black',}}>\n                            {element}\n                        </div>\n                    </div>\n                })}\n            </div>\n         )\n       })\n   }\n\n   return (\n\n    <div>\n      <div \n        style={{\n            borderRadius: '10px', \n            backgroundColor: 'gray', \n            color: 'white', \n            width: '100px',\n            padding: '4px',\n            textAlign: 'center',\n            cursor: 'pointer',\n            marginBottom: '4px'\n        }} \n        onClick={() => {\n        history.push('/app/d/'+hash)\n        }}\n      >\n        戻る\n      </div>\n        {result != null && <div style={{\n            fontSize: 50,\n            marginBottom: 30,\n\n        }}>{`結果: ${result}/${cards.length}`}</div>}\n        {_generateListQuestion()}\n        <div style={{\n            height: 50,\n            width: '80%',\n            marginLeft: '10%',\n            backgroundColor: '#526CC6',\n            color: 'white',\n            fontSize: 26,\n            textAlign: 'center',\n            lineHeight: 2,\n            verticalAlign: 'center',\n            borderRadius: 25,\n            cursor: 'pointer'\n        }} onClick={(event) => {\n            let totalResult = 0\n            for (let index = 0; index < selectedAnswer.length; index++) {\n                const selected = selectedAnswer[index];\n                const correct = correctAnswer[index];\n                if (selected == correct) {\n                    totalResult += 1;\n                }\n            }\n            setSubmitted(true);\n            setResult(totalResult);\n            window.scrollTo(0, 0);\n        }}>回答を送信する</div>\n    </div>\n   );\n }\n \n export default Test;","/**\n * Handles logic for getting the selected deck and cards.\n * Generates FlippableCards for each card to be shown, and \n * renders them in a Carousel.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nimport { useParams } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\n\nimport Spinner from '../Spinner';\nimport PageHeading from '../PageHeading';\nimport { useAlert } from 'react-alert';\n\nconst shuffleCard = (array) => {\n\n    if (!array) {\n        return []\n    }\n    let currentIndex = array.length, randomIndex;\n\n    while (currentIndex != 0) {\n\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n\n        [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n}\n\nconst TestCompare = () => {\n    const history = useHistory();\n\n    const [hashCards, setHashCards] = useState([]);\n    const [originCards, setOriginCards] = useState([]);\n    const [randomCards, setRandomCards] = useState([]);\n    const [canView, setCanView] = useState(true);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [selectedIndex1, setSelectedIndex1] = useState(null);\n    const [selectedIndex2, setSelectedIndex2] = useState(null);\n    const { hash } = useParams();\n    const alert = useAlert()\n\n    useEffect(() => {\n        setIsLoaded(false);\n        setHashCards(null);\n\n        console.log(hash)\n        if (hash === undefined) return;\n\n        const db = firebase.firestore();\n\n        db.collection('decks').doc(hash).get()\n            .then(snapshot => {\n                setIsLoaded(true);\n            })\n            .catch(error => {\n                setIsLoaded(true);\n                console.log(\"Error: \", error.message)\n            })\n\n        let ref = db.collection('decks').doc(hash);\n        ref.get()\n            .then(snapshot => {\n                let arr = [];\n                snapshot.data().cards?.forEach(item => arr.push(item));\n                setHashCards(arr);\n            })\n            .catch(error => console.log(\"Error: \", error.message))\n    }, [hash]);\n\n    useEffect(() => {\n        setIsLoaded(false);\n        setOriginCards(hashCards)\n        let newArray = hashCards?.slice();\n        setRandomCards(shuffleCard(newArray))\n        setIsLoaded(true);\n    }, [hashCards]);\n\n    if (!isLoaded) return (\n        <main>\n            <div className=\"container center\">\n                <Spinner />\n            </div>\n        </main>\n    );\n\n    if (!hashCards) return (\n        <div className=\"container center\">\n            {/* <p>We couldn't find this deck. :(</p> */}\n            <p>ローディング...(</p>\n        </div>\n    )\n\n    if (!canView || hashCards.length === 0) return (\n        <div style={{display: 'flex', flexDirection: 'column', marginTop: '20vh'}}>\n            <div style={{textAlign: 'center'}}>\n                <p style={{fontSize: '30px'}}>テストが完了しました。 よくやった！</p>\n            </div>\n            <div style={{display: 'flex', justifyContent: 'center'}}>\n                <div \n                    style={{\n                        borderRadius: '10px', \n                        backgroundColor: 'gray', \n                        color: 'white', \n                        width: '100px',\n                        padding: '4px',\n                        textAlign: 'center',\n                        cursor: 'pointer'\n                    }} \n                    onClick={() => {\n                    history.push('/app/d/'+hash)\n                    }}\n                >\n                    戻る\n                </div>\n            </div>\n        </div>\n    );\n\n    const _onCheck = (index1, index2) => {\n        if (originCards[index1].back != randomCards[index2].back) {\n            setSelectedIndex1(null)\n            setSelectedIndex2(null)\n            alert.show('間違い!')\n        } else {\n            originCards.splice(index1, 1);\n            randomCards.splice(index2, 1);\n            setSelectedIndex1(null)\n            setSelectedIndex2(null)\n            alert.show('正しい!')\n        }\n    }\n\n    const _generateListFront = () => {\n        return originCards?.map((ele, index) => {\n            return (\n                <div style={{\n                    height: 30,\n                    width: '80%',\n                    marginLeft: '10%',\n                    marginBottom: 10,\n                    marginTop: 10,\n                    border: '1px solid rgba(0, 0, 0, 0.2)',\n                    borderRadius: 20,\n                    textAlign: 'center',\n                    lineHeight: 2,\n                    verticalAlign: 'center',\n                    backgroundColor: selectedIndex1 == index ? 'green' : 'white',\n                }} onClick={(event) => {\n                    if (selectedIndex1 == index) {\n                        setSelectedIndex1(null)\n                    } else {\n                        setSelectedIndex1(index)\n                        if (selectedIndex2 != null) {\n                            _onCheck(index, selectedIndex2)\n                        }\n                    }\n                }}>\n                    <div style={{\n                        width: '100%',\n                        textAlign: 'center',\n                        color: selectedIndex1 == index ? 'white' : 'black'\n                    }}>\n                        {ele?.front}\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    const _generateListBack = () => {\n        return randomCards?.map((ele, index) => {\n            return (\n                <div style={{\n                    height: 30,\n                    width: '80%',\n                    marginLeft: '10%',\n                    marginBottom: 10,\n                    marginTop: 10,\n                    border: '1px solid rgba(0, 0, 0, 0.2)',\n                    borderRadius: 20,\n                    textAlign: 'center',\n                    lineHeight: 2,\n                    verticalAlign: 'center',\n                    backgroundColor: selectedIndex2 == index ? 'green' : 'white',\n                }} onClick={(event) => {\n                    if (selectedIndex2 == index) {\n                        setSelectedIndex2(null)\n                    } else {\n                        setSelectedIndex2(index)\n                        if (selectedIndex1 != null) {\n                            _onCheck(selectedIndex1, index)\n                        }\n                    }\n                }}>\n                    <div style={{\n                        width: '100%',\n                        textAlign: 'center',\n                        color: selectedIndex2 == index ? 'white' : 'black'\n                    }}>\n                        {ele?.back}\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    return (\n        <div style={{ display: 'flex' }}>\n            <div style={{ width: '50%', margin: '0 auto', paddingRight: 30 }}>\n                <PageHeading\n                    title=\"フロント\"\n                />\n                <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                    <div>\n                        {_generateListFront()}\n                    </div>\n                </div>\n            </div>\n            <div style={{ width: '50%', margin: '0 auto', paddingLeft: 30 }}>\n                <PageHeading\n                    title=\"バック\"\n                />\n                <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                    <div>\n                        {_generateListBack()}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TestCompare;\n","/**\n * Displays the dashboard page.\n */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRandom, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from './Breadcrumb';\nimport DeckCreator from './decks-and-cards/DeckCreator';\nimport DeckEditor from './decks-and-cards/DeckEditor';\nimport DeckList from './decks-and-cards/DeckList';\nimport PageHeading from './PageHeading';\nimport SavedDecks from './SavedDecks';\nimport CreatedDecks from './CreatedDecks';\nimport Deck from './decks-and-cards/Deck';\nimport Test from './decks-and-cards/Test';\nimport TestCompare from './decks-and-cards/TestCompare';\nimport { useAlert } from 'react-alert';\n\nconst Dashboard = ({\n  userStatus,\n  decks,\n  saveDecks,\n  cards,\n}) => {\n  const [deckToEdit, setDeckToEdit] = useState(null);\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n  const isPrenium = () => {\n    return userStatus?.isPrenium ?? false\n  }\n  const alert = useAlert()\n\n  const handleButtons = (event) => {\n    switch (event.target.name) {\n      case \"exit\":\n        if (user) {\n          history.push(\"/app\");\n          return;\n        }\n        history.push(\"/\");\n        return;\n      default:\n        return;\n    }\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <Switch>\n        <Route path=\"/app/edit\">\n          <DeckEditor\n            deckToEdit={deckToEdit}\n            setDeckToEdit={setDeckToEdit}\n            cards={cards}\n          />\n        </Route>\n        <Route path=\"/app/create\">\n          <PageHeading\n            title=\"新セット\"\n            styles={{textAlign: 'left'}}\n          />\n          <DeckCreator />\n        </Route>\n        <Route path=\"/app/saved\">\n          <SavedDecks\n            saveDecks={saveDecks}\n          />\n        </Route>\n        <Route path=\"/app/created\">\n          <CreatedDecks\n            decks={decks}\n            cards={cards}\n          />\n        </Route>\n        <Route path=\"/app/d/:hash\">\n          <Deck \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app/test/:hash\">\n          <Test/>\n        </Route>\n        <Route path=\"/app/test-match/:hash\">\n          <TestCompare/>\n        </Route>\n        <Route path=\"/app\">\n          {!isPrenium() && <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n            <div style={{color: 'red'}}>プレミアムにアップグレードしていない場合は、完全な機能のためにアップグレードしてください</div>\n            <button style={{width: 100, height: 40, borderRadius: 10, background: 'rgb(234, 178, 174)', fontSize: 12}} onClick={\n              () => {history.push('/upgrade')}\n            }>アップグレード</button>\n          </div>}\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '50%', margin: '0 auto', paddingRight: 30 }}>\n              <PageHeading\n                title=\"作ったセット\"\n              />\n              <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                <div>\n                  <DeckList\n                    decks={isPrenium() ? decks : decks.slice(0,3)}\n                    setDeckToEdit={setDeckToEdit}\n                    userStatus={userStatus}\n                  />\n                </div>\n              </div>\n            </div>\n            <div style={{ width: '50%', margin: '0 auto', paddingLeft: 30 }}>\n              <PageHeading\n                title=\"保存したセット\"\n              />\n              <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                <div>\n                  <DeckList\n                    decks={isPrenium() ? saveDecks : saveDecks.slice(0, 3)}\n                    userStatus={userStatus}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', paddingTop: 100, paddingLeft: 60, width: 200 }}>\n              <button\n                onClick={() => {\n                  if (isPrenium() || decks.length < 3) {\n                    history.push('/app/create')\n                  } else {\n                    alert.show(\"プレミアムにアップグレードしていない場合は、完全な機能のためにアップグレードしてください\")\n                  }\n                }} \n                style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30 }}\n              >\n                <>新作</>\n              </button>\n            </div>\n          </div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Dashboard;","import React, { useContext, useState } from 'react';\nimport { Link, useHistory, Switch, Route } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nimport PageHeading from './PageHeading';\nimport DeckList from './decks-and-cards/DeckList';\nimport DeckEditor from './decks-and-cards/DeckEditor';\n\nconst Home = ({\n  allDecks,\n  userStatus\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const [deckToEdit1, setDeckToEdit] = useState(null);\n  const history = useHistory();\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n  return (\n    <Switch>\n      <Route path=\"/app-edit\" >\n        <DeckEditor\n          deckToEdit={deckToEdit1}\n          setDeckToEdit={setDeckToEdit}\n        />\n      </Route>\n      <Route path=\"/\">\n        <>\n          <header className=\"hero\">\n            <section>\n              <div className=\"hero-content\">\n                <div className=\"buttons\">\n                  <>\n                  </>\n                </div>\n              </div>\n            </section>\n            <div className=\"card-design\">\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          </header>\n\n          <section className=\"public-decks\">\n            <div>\n              <PageHeading\n                title=\"全てセット\"\n              />\n              <div style={{textAlign: 'left'}}>\n                <DeckList\n                  //de tam day vi sort hoac orderBy trong useHook ko duoc :v\n                  decks={allDecks.sort((a, b) => b.saveCount - a.saveCount)}\n                  setDeckToEdit={setDeckToEdit}\n                  userStatus={userStatus}\n                />\n              </div>\n            </div>\n          </section>\n        </>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Home;","/**\n * Hook for user authentication and account management:\n * \n * Logging user in\n * Signing user up\n * Logging user out\n * Updating user email\n * Changing user password\n * Deleting account\n */\n\nimport { useState, useEffect, useContext } from 'react';\nimport { auth, db, fb } from '../firebase/firebaseIndex';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nconst useAuth = (username = null, email = null, password = null, newPassword = null, avatarUrl = null) => {\n  const { user } = useContext(firebaseAuth);\n\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(\"pending\");\n\n  const [login, setLogin] = useState(0);\n  const [signup, setSignup] = useState(0);\n  const [logout, setLogout] = useState(0);\n  const [changeEmail, setChangeEmail] = useState(0);\n  const [changePassword, setChangePassword] = useState(0);\n  const [deleteAccount, setDeleteAccount] = useState(0);\n\n  // Logging user in\n  useEffect(() => {\n    if (login === 0 || user != null) return;\n    setError(null);\n    setStatus(\"loading\");\n    auth.signInWithEmailAndPassword(email, password)\n    .then((userCredential) => {\n      let _user = userCredential.user;\n      db.collection('users').doc(_user.uid).get().then((doc) => {\n        let data = {\n          uid: _user.uid,\n          ...doc.data()\n        }\n        if (data.isActive ?? false) {\n          setUserData(data);\n          setStatus(\"success\");\n        } else {\n          auth.signOut()\n          setError(\"deactive\");\n          setStatus(\"error\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error logging user in: \", error.message);\n        setError(error);\n        setStatus(\"error\");\n      });\n    })\n    .catch((error) => {\n      console.error(\"Error logging user in: \", error.message);\n      setError(error);\n      setStatus(\"error\");\n    })\n  }, [login]);\n\n  // Signing user up\n  useEffect(() => {\n    if (signup === 0 || user != null) return;\n    setError(null);\n    setStatus(\"loading\");\n    auth.createUserWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        let _user = userCredential.user;\n        db.collection('users').doc(_user.uid).set({\n          username: username,\n          email: email,\n          isActive: true,\n          isPrenium: false,\n          coin: 0,\n        });\n        userCredential.user.updateProfile({displayName: username})\n        setUserData(_user);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        console.error(\"Error signing user in: \", error.message);\n        setError(error);\n        setStatus(\"error\");\n      })\n\n  }, [signup]);\n\n  // Logging user out\n  useEffect(() => {\n    if (logout === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    auth.signOut()\n    .then(() => {\n      console.log(\"Logged out\");\n      setUserData(null);\n      localStorage.removeItem('deck')\n      localStorage.removeItem('save_decks')\n      setStatus(\"success\");\n    })\n    .catch(error => {\n      console.error(\"Error logging user out: \", error.message);\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [logout]);\n\n  useEffect(() => {\n    if (changeEmail === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\")\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      console.log(\"User successfully reauthenticated.\");\n      auth.currentUser.updateEmail(email)\n      .then(() => {\n        db.collection('users').doc(user.uid).update({\n          email: email,\n        });\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n      setStatus(\"loading\")\n      auth.currentUser.updateProfile({displayName: username, photoURL: avatarUrl})\n      .then(() => {\n        setUserData(auth.currentUser);\n        db.collection('users').doc(user.uid).update({\n          username: username,\n        });\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [changeEmail]);\n\n  // Changing password\n  useEffect(() => {\n    if (changePassword === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n    \n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      console.log(\"User successfully reauthenticated.\");\n      auth.currentUser.updatePassword(newPassword).then(function() {\n        setStatus(\"success\");\n      }).catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [changePassword])\n\n  // Delete account\n  useEffect(() => {\n    if (deleteAccount === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n\n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      auth.currentUser.delete().then(() => {\n        setStatus(\"success\");\n      }).catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      })\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    });\n\n  }, [deleteAccount])\n\n  const handleLogin = () => setLogin(prev => prev + 1);\n  const handleSignup = () => setSignup(prev => prev + 1);\n  const handleLogout = () => setLogout(prev => prev + 1);\n  const handleChangeEmail = () => setChangeEmail(prev => prev + 1);\n  const handleChangePassword = () => setChangePassword(prev => prev + 1);\n  const handleDeleteAccount = () => setDeleteAccount(prev => prev + 1);\n  const resetStatus = () => setStatus('pending');\n\n  return { \n    userData, \n    error, \n    status,\n    handleLogin, \n    handleSignup, \n    handleLogout,\n    handleChangeEmail,\n    handleChangePassword,\n    handleDeleteAccount,\n    resetStatus\n  };\n}\n\nexport default useAuth;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst Login = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n  const [inputs, setInputs] = useState({ email: \"\", password: \"\" });\n\n  const { status, error, handleLogin} = useAuth(null, inputs.email, inputs.password);\n  const { user } = useContext(firebaseAuth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleLogin();\n  }\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/app\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    if (error === \"deactive\") {\n      setErrorMessage(\"User deactived\");\n        return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/user-not-found\":\n        setErrorMessage(\"メールアドレスとパスワードが一致しません。\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"メールアドレスとパスワードが一致しません。\");\n        return;\n      case \"auth/invalid-email\":\n        setErrorMessage(\"有効なメールアドレスを入力してください。\");\n        return;\n      default:\n        setErrorMessage(\"何かがうまくいかなかった。もう一度やり直してください。\");\n        return;\n    }\n\n  }, [error]);\n\n  return (\n    <div className=\"login\" style={{textAlign: 'center'}}>\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', marginRight: 200}}>\n        <div style={{display: 'flex', paddingRight: 50, fontSize: 25, alignItems: 'center'}}>\n          <Link to=\"/sign-up\">サインアップ</Link>\n        </div>\n        <PageHeading \n          title=\"ログイン\"\n        />\n      </div>\n      <form style={{display: 'inline-block'}} onSubmit={handleSubmit}>\n        <TextInput \n          labelText=\"メールアドレス\"\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n          id=\"email\"\n          name=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          placeholder=\"メールアドレス\"\n        />\n        <TextInput \n          labelText=\"パスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button \n          className=\"btn btn-primary\"\n          style={{backgroundColor: '#526CC6', borderColor: 'unset', borderRadius: 20, borderWidth: 0}}\n          disabled={inputs.password === \"\" || inputs.email === \"\"}        \n        >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"ログイン\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;","/**\n * Displays a spinner for 1 second when logging out.\n */\n\nimport React, { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport useAuth from '../../hooks/useAuth';\n\nimport Spinner from '../Spinner';\n\nconst Logout = () => {\n  const { user } = useContext(firebaseAuth);\n  const { handleLogout } = useAuth()\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!user) return;\n    handleLogout();\n    setTimeout(() => history.push(\"/\"), 1000);\n  }, [user]);\n\n  return (\n    <div className=\"container center\">\n      <p><Spinner /> Logging out . . .</p>\n    </div>\n  );\n}\n\nexport default Logout;","/**\n * Displays the update password page.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from '../Breadcrumb';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst ChangePassword = ({\n  handleChange,\n  inputs,\n  error,\n  onSubmit,\n  status\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n  \n  return (\n    <>\n      <PageHeading\n        title=\"パスワードを変更してください\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"新しいパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"new-password\"\n          name=\"newPassword\"\n          value={inputs.newPassword}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-primary\"　style={{color: 'white', background: '#526CC6', border: 'unset'}}>\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"パスワードを変更する\"}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default ChangePassword;","/**\n * Displays the delete account page.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from '../Breadcrumb';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst DeleteAccount = ({\n  handleChange,\n  inputs,\n  error,\n  onSubmit\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    switch (error) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n  \n  return (\n    <>\n      <PageHeading\n        title=\"アカウントを削除する\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-warning\">アカウントを完全に削除する</button>\n      </form>\n    </>\n  );\n}\n\nexport default DeleteAccount;","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faEnvelope, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst UpdateProfile = ({\n  handleChange,\n  inputs,\n  onSubmit,\n  error,\n  status,\n  onBack\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n\n  useEffect(() => {\n    return () => onBack();\n  }, [])\n\n  return (\n    <>\n      <PageHeading\n        title=\"メールを更新する\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"ユーザー名\"\n          icon={<FontAwesomeIcon icon={faUser} />}\n          id=\"username\"\n          name=\"username\"\n          value={inputs.username}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"メルアドレス\"\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n          id=\"email\"\n          name=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          placeholder=\"メルアドレス\"\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-primary\" \n        style={{color: 'white', background: '#526CC6', border: 'unset'}}\n        disabled={inputs.password === \"\" || inputs.email === \"\" || inputs.username === \"\"}   >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"メールを更新する\"}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default UpdateProfile;","/**\n * Shows the My Account page and sets up the useAuth\n * hook to be used on ChangePassword, UpdateEmail and\n * DeleteAccount components.\n */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport ChangePassword from './ChangePassword';\nimport DeleteAccount from './DeleteAccount';\nimport PageHeading from '../PageHeading';\nimport UpdateProfile from './UpdateProfile';\n\nconst MyAccount = ({userStatus}) => {\n  const { user } = useContext(firebaseAuth);\n  const [inputs, setInputs] = useState({ \n    email: user.email || \"\",\n    password: \"\", \n    newPassword: \"\", \n    username: user.displayName || \"\", \n    avatarUrl: user.photoUrl || \"\"});\n\n  const { \n    loading, \n    error, \n    status, \n    handleChangeEmail, \n    handleChangePassword, \n    handleDeleteAccount,\n    resetStatus\n  } = useAuth(inputs.username, inputs.email, inputs.password, inputs.newPassword);\n\n  const isPrenium = () => {\n    return userStatus?.isPrenium ?? false\n  }\n  const history = useHistory();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"my-account\">\n      <div className=\"my-account-inner\" style={{width: '50%', margin: '0 auto'}}>\n        <Switch>\n          <Route exact path=\"/my-account\">\n            <div>\n              <PageHeading\n                title=\"アカウント\"\n                subTitle={isPrenium() ? \"プレミアム\" : \"トライアル\"}\n                subTitleStyles={{color: isPrenium() ? 'green' : 'red', textAlign: 'center'}}\n              />\n              <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between'}}>\n                <div>{`利用可能なお金: ${userStatus?.coin ?? 0} 円`}</div>\n                <button style={{width: 100, height: 30, borderRadius: 10, background: 'green', color: 'white', fontSize: 10}} onClick={() => {\n                  history.push('/buy-coin')\n                }}>お金を入金する</button>\n                <button style={{width: 100, height: 30, borderRadius: 10, background: 'rgb(234, 178, 174)', fontSize: 10}} onClick={() => {\n                  history.push('/upgrade')\n                }}>アップグレード</button>\n\n              </div>\n              <div className=\"account-data\">\n                  <Link to=\"/my-account/change-email\" className=\"btn btn-tertiary\">\n                    <span>メールを更新する</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                  </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/my-account/change-password\" className=\"btn btn-tertiary\">\n                  <span>パスワードを変更してください</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/my-account/delete-account\" className=\"btn btn-warning\">\n                  <FontAwesomeIcon icon={faTrash} />&nbsp;&nbsp;&nbsp;アカウントを削除する\n                </Link>\n              </div>\n            </div>\n          </Route>\n\n          <Route exact path=\"/my-account/change-email\">\n            <UpdateProfile \n              handleChange={handleChange}\n              inputs={inputs}\n              loading={loading}\n              onSubmit={handleChangeEmail}\n              error={error}\n              status={status}\n              onBack={resetStatus}\n            />\n          </Route>\n\n          <Route exact path=\"/my-account/change-password\">\n            <ChangePassword \n              handleChange={handleChange}\n              loading={loading}\n              inputs={inputs}\n              onSubmit={handleChangePassword}\n              error={error}\n              status={status}\n            />\n          </Route>\n          \n          <Route exact path=\"/my-account/delete-account\">\n            <DeleteAccount \n              handleChange={handleChange}\n              inputs={inputs}\n              onSubmit={handleDeleteAccount}\n              error={error}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default MyAccount;","import React, {useEffect, useState} from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navlinks = ({ closeMenu, userName }) => {\n  const [firstChar, setFirstChar] = useState('');\n  const [bgColor, setBgColor] = useState('');\n\n  const getFirstChar = () => {\n    if (userName) {\n      setFirstChar(userName.charAt(0).toUpperCase());\n    }\n  }\n\n  useEffect(() => {\n    setBgColor('#' + getRandomColor());\n    getFirstChar();\n  },[userName]);\n\n  const getRandomColor = () => {\n    return Math.floor(Math.random()*16777215).toString(16)\n  }\n\n  return (\n    <div style={{position: 'relative', display: 'flex'}}>\n      <div className=\"avatar-btn\" style={{backgroundColor: `${bgColor}`}}>\n        <div className=\"name\">{firstChar}</div>\n      </div>\n      <div className=\"avt-links\">\n        <ul>\n        <li>\n          <NavLink\n            to=\"/my-account\"\n            className=\"link\"\n            onClick={() => closeMenu()}\n          >\n            プロフィール\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/log-out\" className=\"link\" onClick={() => closeMenu()}>\n            ログアウト\n          </NavLink>\n        </li>\n        </ul>\n      </div>\n      <div style={{height: '36px', display: 'flex', alignItems: 'center', marginLeft: '8px', fontSize: '20px', color: 'white'}}>{userName}</div>\n    </div>\n  );\n};\n\nexport default Navlinks;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReply, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\n\nimport Navlinks from './Navlinks';\nimport TextInput from './TextInput';\n\nconst Nav = ({\n  onClick,\n  isMenuOpen,\n  mobile=false,\n  onSearch,\n}) => {\n  const [navClasses, setNavClasses] = useState(\"navbar\");\n  const btnClasses= \"btn btn-hamburger small-screen-only \" + (isMenuOpen && \"open\"); \n  let location = useLocation();\n  const { user } = useContext(firebaseAuth);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n\n    if (mobile) {\n      setNavClasses(\"navbar\");\n      return;\n    }\n\n    if (location.pathname !== \"/\") {\n      setNavClasses(\"navbar light\");\n      return;\n    }\n\n    setNavClasses(\"navbar\");\n  }, [location, mobile])\n\n  if (!user) {\n    return null\n  }\n\n  return (\n    <header className={navClasses} style={{background: '#526CC6'}}>\n      <div className=\"navbar-inner\">\n        <div className=\"logo\">\n        <Link to=\"/\" className=\"logo\" >\n        ディスカバリー\n        </Link>\n        <div style={{height: 30, width: 2, backgroundColor: 'black', marginLeft: 20, marginRight: 20}}></div>\n        <Link to=\"/app\" className=\"logo\">\n          私のフラッシュカード\n        </Link>\n          </div>\n          <input\n          style={{outline: 'unset', height: 30, borderRadius: 15, paddingLeft: 10, borderColor: 'white'}}\n          id=\"search\"\n          name=\"search\"\n          placeholder='検索する'\n          value={searchText}\n          onChange={(e) => {\n            setSearchText(e.target.value)\n            onSearch(e.target.value)\n          }}\n        />\n          \n        <div className=\"right-nav\">\n          <nav className=\"large-screen-only\">\n            <Navlinks closeMenu={() => null } userName={user.displayName}/>\n          </nav>\n          <button \n            className={btnClasses}\n            name=\"toggle-menu\"\n            onClick={onClick}\n          >\n            <span></span>\n            <span></span>\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Nav;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst Signup = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [inputs, setInputs] = useState({username: \"\", email: \"\", password: \"\" });\n  const history = useHistory();\n\n  const { status, error, handleSignup} = useAuth(inputs.username, inputs.email, inputs.password);\n  const { user } = useContext(firebaseAuth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleSignup();\n  }\n\n  useEffect(() => {\n    if (error === null) return;\n    console.log(error.message);\n  }, [error])\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/app\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/weak-password\":\n        setErrorMessage(\"パスワードは6文字以上である必要があります。\");\n        return;\n      case \"auth/email-already-in-use\":\n        setErrorMessage(\"このメールはすでに登録されています。\");\n        return;\n      case \"auth/invalid-email\":\n        setErrorMessage(\"有効なメールアドレスを入力してください。\");\n        return;\n      default:\n        setErrorMessage(\"何かがうまくいかなかった。 もう一度やり直してください。\");\n        return;\n    }\n  }, [error]);\n\n  return (\n    <div className=\"signup\" style={{textAlign: 'center'}}>\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', marginRight: 200}}>\n        <div style={{display: 'flex', paddingRight: 50, fontSize: 25, alignItems: 'center'}}>\n          <Link to=\"/log-in\">ログイン</Link>\n        </div>\n        <PageHeading \n        title=\"サインアップ\"\n      />\n      </div>\n      <form style={{display: 'inline-block'}} onSubmit={handleSubmit}>\n      <TextInput \n          labelText=\"ユーザー名\"\n          id=\"username\"\n          name=\"username\"\n          placeholder=\"ユーザー名\"\n          value={inputs.username}\n          onChange={handleChange}\n          icon={<FontAwesomeIcon icon={faUser} />}\n        />\n        <TextInput \n          labelText=\"メールアドレス\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"メールアドレス\"\n          value={inputs.email}\n          onChange={handleChange}\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n        />\n        <TextInput \n          labelText=\"パスワード\"\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button \n          className=\"btn btn-primary\"\n          style={{backgroundColor: '#526CC6', borderColor: 'unset', borderRadius: 20, borderWidth: 0}}\n          disabled={inputs.username === \"\" || inputs.password === \"\" || inputs.email === \"\"}\n        >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"サインアップ\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;","/**\n * Shows the My Account page and sets up the useAuth\n * hook to be used on ChangePassword, UpdateEmail and\n * DeleteAccount components.\n */\n\n import React, { useState, useContext, useEffect } from 'react';\n import { firebaseAuth } from '../../provider/AuthProvider';\n import { Link, Switch, Route, useHistory } from 'react-router-dom';\n import useAuth from '../../hooks/useAuth';\n \n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n import { faAngleRight, faTrash } from '@fortawesome/free-solid-svg-icons';\n \n import ChangePassword from './ChangePassword';\n import DeleteAccount from './DeleteAccount';\n import PageHeading from '../PageHeading';\n import UpdateProfile from './UpdateProfile';\nimport { useAlert } from 'react-alert';\nimport { dbMethods } from '../../firebase/dbMethods';\n \n const Upgrade = ({\n    userStatus,\n  }) => {\n   const { user } = useContext(firebaseAuth);\n   const [inputs, setInputs] = useState({ \n     email: user.email || \"\",\n     password: \"\", \n     newPassword: \"\", \n     username: user.displayName || \"\", \n     avatarUrl: user.photoUrl || \"\"});\n \n   const { \n     loading, \n     error, \n     status, \n     handleChangeEmail, \n     handleChangePassword, \n     handleDeleteAccount,\n     resetStatus\n   } = useAuth(inputs.username, inputs.email, inputs.password, inputs.newPassword);\n  \n   const history = useHistory();\n\n   const alert = useAlert();\n \n   const handleChange = e => {\n     const { name, value } = e.target;\n     setInputs(prev => ({ ...prev, [name]: value }));\n   }\n \n   if (!user) {\n     history.push(\"/log-in\");\n   }\n\n   const isPrenium = () => {\n       return userStatus?.isPrenium ?? false\n    }\n \n   return (\n     <div className=\"my-account\">\n       <div className=\"my-account-inner\" style={{width: '50%', margin: '0 auto'}}>\n         <Switch>\n           <Route exact path=\"/upgrade\">\n             <div>\n               <PageHeading\n                 title=\"アップグレード\"\n               />\n               <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between'}}>\n                 <div>{`利用可能なお金: ${userStatus?.coin ?? 0} 円`}</div>\n                 <button style={{width: 100, height: 30, borderRadius: 10, background: 'green', color: 'white', fontSize: 10}} onClick={() => {\n                   history.push('/buy-coin')\n                 }}>お金を入金する</button>\n               </div>\n               <h3>\n                   {isPrenium() ? \"現在プレミアム機能を使用しています\" : \"現在トライアル機能を使用しています\"}\n               </h3>\n               {!isPrenium() && <div className=\"account-data\">\n                   <h4>これらの機能のロックを解除するには、100円/月でプレミアムにアップグレードしてください： </h4>\n                   <h5 style={{color: 'green'}}>・フラッシュカードの無制限の作成セット</h5>\n                   <h5 style={{color: 'orange'}}>・他の人のフラッシュカードのセットを無制限に保存</h5>\n                   <button className=\"btn btn-tertiary\" onClick={() => {\n                       if ((userStatus?.coin ?? 0) < 100) {\n                           alert.show(\"お金が足りない場合は、アップグレードするためにお金を追加入金してください\")\n                       } else {\n                           dbMethods.updateUser(user, userStatus?.coin - 100, true)\n                       }\n                   }}>\n                     <span>100円/月でプレミアムにアップグレード</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                   </button>\n               </div>}\n               <h4>これらの機能のロックを解除するには、500円/月でVIPにアップグレードしてください： </h4>\n                   <h5 style={{color: 'green'}}>・フラッシュカードのテストをカスタマイズします</h5>\n                   <h5 style={{color: 'orange'}}>・フラッシュカードからコンテストを作成する</h5>\n                   <h5 style={{color: 'blue'}}>・セットをダウンロードし、テストし、doc、pdf、..でコンテストします</h5>\n                   <button className=\"btn btn-tertiary\" onClick={() => {\n                       alert.show('機能は開発中です')\n                    }}>\n                     <span>500円/月でVIPにアップグレード</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                   </button>\n             </div>\n           </Route>\n \n           <Route exact path=\"/my-account/change-email\">\n             <UpdateProfile \n               handleChange={handleChange}\n               inputs={inputs}\n               loading={loading}\n               onSubmit={handleChangeEmail}\n               error={error}\n               status={status}\n               onBack={resetStatus}\n             />\n           </Route>\n \n           <Route exact path=\"/my-account/change-password\">\n             <ChangePassword \n               handleChange={handleChange}\n               loading={loading}\n               inputs={inputs}\n               onSubmit={handleChangePassword}\n               error={error}\n               status={status}\n             />\n           </Route>\n           \n           <Route exact path=\"/my-account/delete-account\">\n             <DeleteAccount \n               handleChange={handleChange}\n               inputs={inputs}\n               onSubmit={handleDeleteAccount}\n               error={error}\n             />\n           </Route>\n         </Switch>\n       </div>\n     </div>\n   );\n }\n \n export default Upgrade;","/**\n * Shows the My Account page and sets up the useAuth\n * hook to be used on ChangePassword, UpdateEmail and\n * DeleteAccount components.\n */\n\n import React, { useState, useContext, useEffect } from 'react';\n import { firebaseAuth } from '../../provider/AuthProvider';\n import { Link, Switch, Route, useHistory } from 'react-router-dom';\n import useAuth from '../../hooks/useAuth';\n \n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n import { faAngleRight, faTrash } from '@fortawesome/free-solid-svg-icons';\n \n import ChangePassword from './ChangePassword';\n import DeleteAccount from './DeleteAccount';\n import PageHeading from '../PageHeading';\n import UpdateProfile from './UpdateProfile';\nimport { useAlert } from 'react-alert';\nimport { dbMethods } from '../../firebase/dbMethods';\n \n const BuyCoin = ({\n    userStatus,\n  }) => {\n   const { user } = useContext(firebaseAuth);\n   const [inputs, setInputs] = useState({ \n     email: user.email || \"\",\n     password: \"\", \n     newPassword: \"\", \n     username: user.displayName || \"\", \n     avatarUrl: user.photoUrl || \"\"});\n \n   const { \n     loading, \n     error, \n     status, \n     handleChangeEmail, \n     handleChangePassword, \n     handleDeleteAccount,\n     resetStatus\n   } = useAuth(inputs.username, inputs.email, inputs.password, inputs.newPassword);\n  \n   const history = useHistory();\n\n   const alert = useAlert();\n \n   const handleChange = e => {\n     const { name, value } = e.target;\n     setInputs(prev => ({ ...prev, [name]: value }));\n   }\n \n   if (!user) {\n     history.push(\"/log-in\");\n   }\n\n   const isPrenium = () => {\n       return userStatus?.isPrenium ?? false\n   }\n \n   return (\n     <div className=\"my-account\">\n       <div className=\"my-account-inner\" style={{width: '50%', margin: '0 auto'}}>\n         <Switch>\n           <Route exact path=\"/buy-coin\">\n             <div>\n               <PageHeading\n                 title=\"お金を入金する\"\n               />\n               <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between'}}>\n                 <div>{`利用可能な円: ${userStatus?.coin ?? 0} 円`}</div>\n                 <button style={{width: 100, height: 30, borderRadius: 10, background: 'rgb(234, 178, 174)', fontSize: 10}} onClick={() => {\n                     history.push('/upgrade')\n                  }}>アップグレード</button>\n               </div>\n               <div className=\"account-data\">\n                   <h4>100円を入金する</h4>\n                   <button className=\"btn btn-tertiary\" onClick={() => {\n                     console.log(788888)\n                       dbMethods.updateUser(user, (userStatus?.coin?? 0) + 100, userStatus?.isPrenium ?? false)\n                    }}>\n                     <span>100円を入金する</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                   </button>\n               </div>\n               <h4>1000円を入金する</h4>\n                   <button className=\"btn btn-tertiary\" onClick={() => {\n                       dbMethods.updateUser(user, (userStatus?.coin?? 0) + 1000, userStatus?.isPrenium ?? false)\n                    }}>\n                     <span>1000円を入金する</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                   </button>\n             </div>\n           </Route>\n \n           <Route exact path=\"/my-account/change-email\">\n             <UpdateProfile \n               handleChange={handleChange}\n               inputs={inputs}\n               loading={loading}\n               onSubmit={handleChangeEmail}\n               error={error}\n               status={status}\n               onBack={resetStatus}\n             />\n           </Route>\n \n           <Route exact path=\"/my-account/change-password\">\n             <ChangePassword \n               handleChange={handleChange}\n               loading={loading}\n               inputs={inputs}\n               onSubmit={handleChangePassword}\n               error={error}\n               status={status}\n             />\n           </Route>\n           \n           <Route exact path=\"/my-account/delete-account\">\n             <DeleteAccount \n               handleChange={handleChange}\n               inputs={inputs}\n               onSubmit={handleDeleteAccount}\n               error={error}\n             />\n           </Route>\n         </Switch>\n       </div>\n     </div>\n   );\n }\n \n export default BuyCoin;","/**\n * Main wrapper for the app, containing the shuffle functionality\n * used by Deck and Dashboard components.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport { firebaseAuth } from './provider/AuthProvider';\nimport useOnDecksSnapshot from './hooks/useOnDecksSnapshot';\nimport useOnAllDecksSnapshot from './hooks/useOnAllDecksSnapshot';\nimport useOnUserStatusSnapshot from './hooks/useOnUserStatusSnapshot';\nimport useOnSavedDecksSnapshot from './hooks/useOnSavedDecksSnapshot';\n\nimport Deck from './components/decks-and-cards/Deck';\nimport Dashboard from './components/Dashboard';\nimport Home from './components/Home';\nimport Login from './components/account-management/Login';\nimport Logout from './components/account-management/Logout';\nimport MyAccount from './components/account-management/MyAccount';\nimport Nav from './components/Nav';\nimport Signup from './components/account-management/Signup';\nimport Upgrade from './components/account-management/Upgrade';\nimport BuyCoin from './components/account-management/BuyCoin';\n\nconst App = () => {\n  const [selectedDecks, setSelectedDecks] = useState([]);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const history = useHistory();\n  const { user } = useContext(firebaseAuth);\n  const { decks } = useOnDecksSnapshot(user);\n  const { allDecks } = useOnAllDecksSnapshot(user);\n  const { saveDecks } = useOnSavedDecksSnapshot(user);\n  const { userStatus } = useOnUserStatusSnapshot(user); \n\n  const [decksData, setDecksData] = useState([]);\n  const [saveDecksData, setSaveDecksData] = useState([]);\n  const [allDecksData, setAllDecksData] = useState([]);\n\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    if (!isSearching) {\n      setDecksData(decks)\n    }\n  }, [decks])\n\n  useEffect(() => {\n    if (!isSearching) {\n      setSaveDecksData(saveDecks)\n    }\n  }, [saveDecks])\n\n  useEffect(() => {\n    if (!isSearching) {\n      setAllDecksData(allDecks)\n    }\n  }, [allDecks])\n\n  useEffect(() => {\n    if (userStatus == null) {\n      return;\n    }\n    if (!(userStatus?.isActive ?? false)) {\n      history.push('/log-out');\n    }\n  }, [userStatus])\n\n  useEffect(() => {\n    if (!searchText || searchText.length == 0) {\n      setIsSearching(false)\n      setDecksData(decks)\n      setSaveDecksData(saveDecks)\n      setAllDecksData(allDecks)\n    } else {\n      setIsSearching(true)\n      setDecksData(decks.filter((element) => {return element.title.includes(searchText)}));\n      setSaveDecksData(saveDecks.filter((element) => {return element.title.includes(searchText)}));\n      setAllDecksData(allDecks.filter((element) => {return element.title.includes(searchText)}));\n    }\n  }, [searchText])\n\n  useEffect(() => {\n    if (user) return;\n    setSelectedDecks([]);\n  }, [user]);\n\n  const onSearch = (text) => {\n    setSearchText(text);\n  }\n\n  const handleButtons = (event) => {\n    switch (event.target.name) {\n      case \"exit\":\n        if (user) {\n          history.push(\"/app\");\n          return;\n        }\n        history.push(\"/\");\n        return;\n  \n      case \"toggle-menu\":\n        setIsMenuOpen(prev => !prev);\n        return;\n      default:\n        return;\n    }\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"app\">\n      <Nav \n        onClick={handleButtons}\n        isMenuOpen={isMenuOpen}\n        onSearch={onSearch}\n      />\n      <Switch>\n        <Route path=\"/log-in\">\n          <Login />\n        </Route>\n        <Route path=\"/log-out\">\n          <main>\n            <Logout />\n          </main>\n        </Route>\n        <Route path=\"/sign-up\">\n          <Signup />\n        </Route>\n        <Route path=\"/my-account\">\n          <main>\n            <MyAccount \n              userStatus={userStatus}\n            />\n          </main>\n        </Route>\n        <Route path=\"/upgrade\">\n          <main>\n            <Upgrade \n              userStatus={userStatus}\n            />\n          </main>\n        </Route>\n        <Route path=\"/buy-coin\">\n          <main>\n            <BuyCoin\n              userStatus={userStatus}\n            />\n          </main>\n        </Route>\n        <Route path=\"/app/shuffle\">\n          <Deck \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app/d/:hash\">\n          <Deck \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app\">\n          <main>\n            <Dashboard \n              onClick={handleButtons}\n              decks={decksData}\n              saveDecks={saveDecksData}\n              selectedDecks={selectedDecks}\n              setSelectedDecks={setSelectedDecks}\n              userStatus={userStatus}\n            />\n          </main>\n        </Route>\n        <Route path=\"/\">\n          <main>\n            <Home \n              allDecks={allDecksData} \n              setSelectedDecks={setSelectedDecks} \n              selectedDecks={selectedDecks}\n              userStatus={userStatus}\n              />\n          </main>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport { render } from 'react-dom'\nimport { HashRouter } from 'react-router-dom';\nimport AuthProvider from './provider/AuthProvider';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\n\nimport './styles/normalize.css';\nimport './styles/styles.css';\nimport App from './App';\n\nconst options = {\n  position: positions.MIDDLE,\n  timeout: 3000,\n  offset: '30px',\n  transition: transitions.SCALE\n}\n\nconst Root = () => (\n  <React.StrictMode>\n    <HashRouter>\n      <AuthProvider>\n        \n      <AlertProvider template={AlertTemplate} {...options}>\n        <App />\n      </AlertProvider>\n      </AuthProvider>\n    </HashRouter>\n  </React.StrictMode>\n)\n\nrender(<Root />, document.getElementById('root'))\n"],"sourceRoot":""}