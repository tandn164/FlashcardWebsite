{"version":3,"sources":["firebase/firebaseIndex.js","provider/AuthProvider.js","hooks/useOnDecksSnapshot.js","hooks/useGetShuffledCards.js","hooks/useOnSavedDecksSnapshot.js","hooks/useOnAllDecksSnapshot.js","components/Carousel.js","components/Header.js","components/decks-and-cards/CardContent.js","components/decks-and-cards/FlippableCard.js","components/Spinner.js","components/decks-and-cards/Deck.js","firebase/dbMethods.js","components/TextInput.js","components/decks-and-cards/DeckCreator.js","components/decks-and-cards/CardEditor.js","components/Accordion.js","components/decks-and-cards/CardCreator.js","components/PageHeading.js","components/decks-and-cards/DeckEditor.js","components/decks-and-cards/SelectableDeck.js","components/decks-and-cards/DeckList.js","components/SavedDecks.js","components/CreatedDecks.js","components/Dashboard.js","components/Home.js","hooks/useAuth.js","components/account-management/Login.js","components/account-management/Logout.js","components/account-management/ChangePassword.js","components/account-management/DeleteAccount.js","components/account-management/UpdateProfile.js","components/account-management/MyAccount.js","components/Navlinks.js","components/Nav.js","components/account-management/Signup.js","components/MobileMenu.js","components/Footer.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","db","firestore","fb","firebaseAuth","React","createContext","AuthProvider","props","useState","user","setUser","useEffect","unsub","onAuthStateChanged","Provider","value","children","useOnDecksSnapshot","decks","setDecks","unsubscribe","collection","where","uid","onSnapshot","snapshot","arr","forEach","deck","push","data","error","console","log","message","useGetShuffledCards","deckIds","cards","setCards","length","card","useOnSavedDecksSnapshot","saveDecks","doc","save_decks","localStorage","setItem","JSON","stringify","useOnAllDecksSnapshot","allDecks","Carousel","leftButtonText","rightButtonText","animTime","items","previousCallback","nextCallback","showButtons","index","setIndex","carouselItems","setCarouselItems","canSlide","setCanSlide","carousel","useRef","modifiedItems","map","ele","className","key","firstItem","cloneElement","lastItem","unshift","setTimeout","current","style","transition","handleClick","event","target","name","idx","undefined","ref","marginLeft","width","onClick","disabled","Header","title","CardContent","text","FlippableCard","frontTitle","backTitle","frontText","backText","isFlipped","setIsFlipped","header","icon","faTimes","backHeader","footer","prev","faReply","size","Spinner","faSpinner","Deck","shuffledCards","hashCards","setHashCards","isCardFlipped","setIsCardFlipped","canView","setCanView","isLoaded","setIsLoaded","hash","useParams","get","then","private","catch","_cards","front","back","id","slideCallback","faAngleLeft","faAngleRight","dbMethods","document","newDeck","numCards","owner","set","err","deckId","delete","update","FieldValue","arrayUnion","arrayRemove","updatedDeck","newCard","res","increment","cardId","updatedCard","TextInput","labelText","type","placeholder","onChange","autocomplete","isHidden","setIsHidden","faLock","htmlFor","autoComplete","preventDefault","faEye","faEyeSlash","DeckCreator","setTitle","useContext","history","useHistory","onSubmit","faHeading","CardEditor","setFront","setBack","handleInput","faTrash","Accordion","setCard","cardEditorElements","setCardEditorElements","elements","classes","Fragment","faAngleUp","faAngleDown","CardCreator","isOpen","setIsOpen","faMinus","faPlus","PageHeading","titleElement","textAlign","DeckEditor","selectedDecks","deckToEdit","setDeckToEdit","localDeck","parse","getItem","updateSuccess","setUpdateSuccess","subtitle","SelectableDeck","toggleDeck","setSelectedDecks","mine","saved","setSaved","savedDecksRaw","isSaved","savedDecks","filterArray","filter","item","background","marginBottom","borderRadius","color","stopPropagation","faEdit","faSave","DeckList","deckList","setDeckList","SavedDecks","path","display","margin","paddingRight","CreatedDecks","flexDirection","justifyContent","paddingTop","paddingLeft","border","fontSize","paddingBottom","marginRight","Dashboard","padding","slice","Home","deckToEdit1","to","useAuth","username","email","password","newPassword","avatarUrl","userData","setUserData","setError","status","setStatus","login","setLogin","signup","setSignup","logout","setLogout","changeEmail","setChangeEmail","changePassword","setChangePassword","deleteAccount","setDeleteAccount","signInWithEmailAndPassword","userCredential","_user","createUserWithEmailAndPassword","updateProfile","displayName","signOut","code","credential","EmailAuthProvider","currentUser","reauthenticateWithCredential","updateEmail","photoURL","updatePassword","handleLogin","handleSignup","handleLogout","handleChangeEmail","handleChangePassword","handleDeleteAccount","resetStatus","Login","errorMessage","setErrorMessage","inputs","setInputs","handleChange","e","alignItems","faEnvelope","backgroundColor","borderColor","borderWidth","Logout","ChangePassword","DeleteAccount","UpdateProfile","onBack","faUser","MyAccount","photoUrl","loading","exact","Navlinks","closeMenu","Nav","isMenuOpen","mobile","navClasses","setNavClasses","btnClasses","location","useLocation","pathname","Signup","MobileMenu","handleButtons","Footer","App","setIsMenuOpen","setShuffledCards","Object","assign","randomized_cards","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","fisherYatesShuffle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aa93ed74.chunk.js","sourcesContent":["/**\n * Initialize firebase authentication and firestore.\n */\n\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/app';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyB25ZqbIrDuXWUokLFcsbltpjUf5pjhb-w\",\n  authDomain: \"flashcardapp-d3306.firebaseapp.com\",\n  databaseURL: \"https://flashcardapp-d3306.firebaseio.com\",\n  projectId: \"flashcardapp-d3306\",\n  storageBucket: \"flashcardapp-d3306.appspot.com\",\n  messagingSenderId: \"635798969664\",\n  appId: \"1:635798969664:web:562fb322eeb9d31667eea5\",\n  measurementId: \"G-XSQ0TX77TY\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth=firebase.auth();\nexport const db=firebase.firestore();\nexport const fb=firebase;\n\nexport default { firebaseConfig }","/**\n * Context Provider for the current user.\n */\n\nimport React, {useState, useEffect} from 'react';\nimport { auth } from '../firebase/firebaseIndex';\n\nexport const firebaseAuth = React.createContext();\n\nconst AuthProvider = (props) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsub = auth.onAuthStateChanged((user) => {\n      user ? setUser(user) : setUser(null);\n    });\n\n    return () => unsub();\n  });\n\n  return (\n    <firebaseAuth.Provider\n      value={{\n        user\n      }}\n    >\n      {props.children}\n    </firebaseAuth.Provider>\n  )\n}\n\nexport default AuthProvider;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnDecksSnapshot = (user) => {\n  const db = firebase.firestore();\n  const [decks, setDecks] = useState([]);\n\n  // Get decks from collection where owner is the current user.\n  useEffect(() => {\n    if (!user) {\n      setDecks([]);\n      return;\n    }\n\n    let ref = db.collection('decks');\n    let unsubscribe = ref.where(\"owner\", \"==\", user.uid).onSnapshot((snapshot) => {\n      let arr = [];\n      snapshot.forEach(deck => arr.push(deck.data()));\n      setDecks(arr);\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, [user]);\n\n  return { decks };\n}\n\nexport default useOnDecksSnapshot;","/**\n * Hook which subscribes to the collection of cards in the \n * firestore database.\n */\n\nimport { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useGetShuffledCards = (user, deckIds) => {\n  const db = firebase.firestore();\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    if (!user) {\n      setCards([]);\n      return;\n    }\n\n    if (deckIds.length === 0) {\n      setCards([]);\n      return;\n    }\n\n    let ref = db.collection('cards');\n    let unsubscribe = ref.where(\"deckId\", \"in\", deckIds).onSnapshot((snapshot) => {\n      let arr = [];\n      snapshot.forEach(card => arr.push(card.data()));\n      setCards(arr);\n      /* console.log(\"Cards updated: \", arr) */\n    }, (error) => {\n      console.log(\"Error: \", error.message)\n    })\n    return () => unsubscribe();\n  }, [user, deckIds])\n\n  return { cards };\n}\n\nexport default useGetShuffledCards;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnSavedDecksSnapshot = (user) => {\n    const db = firebase.firestore();\n    const [saveDecks, setDecks] = useState([]);\n    useEffect(() => {\n      if (!user) {\n        setDecks([]);\n        return;\n      }\n\n      let unsubscribe = db.collection('users').doc(user.uid).onSnapshot((snapshot) => {\n        let arr = [];\n        snapshot.data().save_decks.forEach(deck => arr.push(deck));\n        setDecks(arr)\n        localStorage.setItem('save_decks', JSON.stringify(arr))\n      }, error => console.log(\"Error: \", error.message))\n      return () => unsubscribe();\n    }, [user]);\n    return { saveDecks };\n  }\n\n  export default useOnSavedDecksSnapshot;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnAllDecksSnapshot = () => {\n  const db = firebase.firestore();\n  const [allDecks, setDecks] = useState([]);\n\n  useEffect(() => {\n    let ref = db.collection('decks');\n    let unsubscribe = ref.onSnapshot((snapshot) => {\n      let arr = [];\n      snapshot.forEach(deck => arr.push(deck.data()));\n      setDecks(arr);\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, []);\n\n  return { allDecks };\n}\n\nexport default useOnAllDecksSnapshot;","/**\n * A modular carousel component with wrap-around and transitions.\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\n\n/* If WRAP_BUFFER is too short, wrap-around transitions\n   will be set too soon. */\nconst WRAP_BUFFER = 50;\n\nconst Carousel = ({\n  leftButtonText=\"<\",\n  rightButtonText=\">\",\n  animTime=.5,\n  items,\n  previousCallback,\n  nextCallback,\n  showButtons=true\n}) => {\n  const [index, setIndex] = useState(0);\n  const [carouselItems, setCarouselItems] = useState([]);\n  const [canSlide, setCanSlide] = useState(true);\n  const carousel = useRef(null);\n\n  // Generates the carousel items, with a cloned copy of the first and last\n  // item at the beginning and end, respectively. This facilitates\n  // smooth wrap-around transitions.\n  useEffect(() => {\n    let modifiedItems = items.map((ele) => {\n      return (\n        <div \n          className=\"carousel__item\"\n          key={ele.key}\n        >\n          {ele}\n        </div>\n      );\n    });\n\n    if (items.length > 0) {\n      let firstItem = React.cloneElement(modifiedItems[0], { key: \"first\" });\n      let lastItem = React.cloneElement(modifiedItems[modifiedItems.length - 1], { key: \"last\" });\n      modifiedItems.unshift(lastItem);\n      modifiedItems.push(firstItem);\n    }\n\n    setCarouselItems(modifiedItems);\n  }, [items]);\n\n  // The wrap-around functionality.\n  useEffect(() => {\n    if (carouselItems.length < 3) return;\n\n    if (index === 0 || index === carouselItems.length - 1) {\n      setTimeout(() => {\n        carousel.current.style.transition = \"margin 0s cubic-bezier(.645,.045,.355,1)\";\n        \n        if (index === 0) {\n          setIndex(carouselItems.length - 2);\n        } else if (index === carouselItems.length - 1) {\n          setIndex(1);\n        }\n      }, animTime * 1000);\n    }\n\n    if (index === 1 || index === carouselItems.length - 2) {\n      setTimeout(() => {\n        carousel.current.style.transition = \"margin \" + animTime + \"s cubic-bezier(.645,.045,.355,1)\";\n      }, WRAP_BUFFER);\n    }\n  }, [index, carouselItems, animTime]);\n\n  const handleClick = (event) => {\n    if (!canSlide) return;\n\n    if (event.target.name === \"right\") {\n      setIndex(idx => idx + 1);\n      if (nextCallback !== undefined) {\n        nextCallback(index-1);\n      }\n    } else if (event.target.name === \"left\") {\n      setIndex(idx => idx - 1);\n      if (previousCallback !== undefined) {\n        previousCallback(index-1);\n      }\n    }\n    setCanSlide(false);\n    setTimeout(() => setCanSlide(true), animTime * 1000 + WRAP_BUFFER);\n  }\n\n  return (\n    <div className=\"carousel\">\n      <div \n        ref={carousel}\n        className=\"carousel__inner\"\n        style={{ \n          marginLeft: \"calc(-100% * \" + index + \")\",\n          width: (carouselItems.length * 100) + \"%\",\n          transition: \"margin \" + animTime + \"s\",\n       }}\n      >\n        {carouselItems}\n      </div>\n      <div className=\"spacer\"></div>\n      {showButtons &&\n        <>\n          <button \n            className=\"btn-carousel left\"\n            onClick={(event) => handleClick(event)}\n            name=\"left\"\n            disabled={!canSlide}\n          >{leftButtonText}</button>\n          <button \n            className=\"btn-carousel right\"\n            onClick={(event) => handleClick(event)}\n            name=\"right\"\n            disabled={!canSlide}\n          >{rightButtonText}</button>\n        </>\n      }\n    </div>\n  );\n}\n\nexport default Carousel;","/**\n * Displays a header with a title and optional child elements.\n */\n\nimport React from 'react';\n\nconst Header = ({\n  title,\n  children\n}) => {\n  return (\n    <header className=\"card-header\">\n      <p>\n        {title}\n      </p>\n      <div>\n        {children}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","/**\n * Displays a simple p tag.\n */\n\nimport React from 'react';\n\nconst CardContent = ({\n  text\n}) => {\n  return (\n    <>\n      <p className=\"content\">\n        {text}\n      </p>\n    </>\n  );\n}\n\nexport default CardContent;","/**\n * Displays a flash card and its content.\n */\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReply, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport Header from '../Header';\nimport CardContent from './CardContent';\n\nconst FlippableCard = ({\n  onClick,\n  frontTitle,\n  backTitle,\n  frontText,\n  backText,\n  isFlipped,\n  setIsFlipped,\n}) => {\n  const header = (\n    <Header title={frontTitle}>\n      <button \n        className=\"btn btn-icon-small\"\n        name=\"exit\"\n        onClick={onClick}\n      >\n        <FontAwesomeIcon icon={faTimes} />&nbsp;Close\n      </button>\n    </Header>\n  );\n\n  const backHeader = React.cloneElement(header, { title: backTitle });\n\n  const footer = (\n    <footer>\n      <button \n        className=\"curl\"\n        name=\"toggle\"\n        onClick={ () => setIsFlipped(prev => !prev) }\n      >    \n        <FontAwesomeIcon icon={faReply} size=\"2x\" className=\"icon\" />\n      </button>\n    </footer>\n  );\n \n  return (\n    <div className={isFlipped ? \"flippable flipped\" : \"flippable\"}>\n      <div className=\"flippable__inner\">\n        <div className=\"flippable__content front\">\n          {header}\n            <CardContent text={frontText} />\n          {footer}\n        </div>\n        <div className=\"flippable__content back\">\n          {backHeader}\n            <CardContent text={backText} />\n          {footer}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FlippableCard;","/**\n * A simple loading icon.\n */\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nconst Spinner = ({\n  size=\"1x\"\n}) => {\n  return <FontAwesomeIcon icon={faSpinner} size={size} className=\"spinner\"/>\n}\n\nexport default Spinner;","/**\n * Handles logic for getting the selected deck and cards.\n * Generates FlippableCards for each card to be shown, and \n * renders them in a Carousel.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport firebase from 'firebase';\n\nimport { useParams } from 'react-router-dom';\n\nimport Carousel from '../Carousel';\nimport FlippableCard from './FlippableCard';\nimport Spinner from '../Spinner';\n\nconst Deck = ({ \n  shuffledCards,\n  onClick,\n}) => {\n  const [cards, setCards] = useState([]);\n  const [hashCards, setHashCards] = useState(null);\n  const [isCardFlipped, setIsCardFlipped] = useState(false);\n  const [canView, setCanView] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const { hash } = useParams();\n\n  /* Gets the deck and its based on the hash in the URL,\n     and checks whether it is private or not. */\n  useEffect(() => {\n    setIsLoaded(false);\n    setHashCards(null);\n    setCards(null);\n\n    if (hash === undefined) return;\n    if (shuffledCards.length > 0) return;\n\n    const db = firebase.firestore();\n\n    db.collection('decks').doc(hash).get()\n    .then(snapshot => {\n      if (snapshot.data().private) {\n        setCanView(false);\n        setIsLoaded(true);\n      }\n    })\n    .catch(error => {\n      setIsLoaded(true);\n      console.log(\"Error: \", error.message)\n    })\n\n    let ref = db.collection('cards');\n    ref.where(\"deckId\", \"==\", hash).get()\n      .then(snapshot => {\n        let arr = [];\n        snapshot.forEach(card => arr.push(card.data()));\n        setHashCards(arr);\n      })\n      .catch(error => console.log(\"Error: \", error.message))\n  }, [hash]);\n\n  /* Generates an array of FlippableCards for each card in the deck. */\n  useEffect(() => {\n    setIsLoaded(false);\n    let _cards = [];\n\n    if (hashCards != null) {\n      _cards = hashCards;\n    } else {\n      _cards = shuffledCards;\n    }\n\n    if (_cards.length > 0) {\n      setCards(_cards.map((ele) => {\n        return (\n          <FlippableCard \n            key={ele.id}\n            frontTitle=\"Front\"\n            backTitle=\"Back\"\n            frontText={ele.front}\n            backText={ele.back}\n            onClick={onClick}\n            isFlipped={isCardFlipped}\n            setIsFlipped={setIsCardFlipped}\n          />\n        )\n      }));\n      setIsLoaded(true);\n    }\n\n    }, [shuffledCards, isCardFlipped, onClick, hashCards]\n  );\n\n  if (!isLoaded) return (\n    <main>\n      <div className=\"container center\">\n        <Spinner />\n      </div>\n    </main>\n  );\n\n  if (!cards) return (\n    <div className=\"container center\">\n      <p>We couldn't find this deck. :(</p>\n    </div>\n  )\n\n  if (!canView || cards.length === 0) return (\n      <div className=\"container center\">\n        <p>This deck is either private or has no cards! If you are the owner, you can view it and edit it from your dashboard.</p>\n      </div>\n  );\n\n  const slideCallback = () => {\n    setIsCardFlipped(false);\n  }\n\n  return (\n    <Carousel \n      items={cards}\n      leftButtonText={<FontAwesomeIcon icon={faAngleLeft} />}\n      rightButtonText={<FontAwesomeIcon icon={faAngleRight} />}\n      animTime={.3}\n      previousCallback={slideCallback}\n      nextCallback={slideCallback}\n      showButtons={true}\n    />\n  );\n}\n\nexport default Deck;","/**\n * Methods for accessing the firestore database:\n * \n * createDeck\n * deleteDeck\n * updateDeck\n * createCard\n * updateCard\n * deleteCard\n */\n\nimport { db } from './firebaseIndex';\nimport firebase from 'firebase';\n\nexport const dbMethods = {\n\n  createDeck: (user, title) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const document = db.collection('decks').doc();\n\n    const newDeck = {\n      id: document.id,\n      numCards: 0,\n      title,\n      owner: user.uid,\n    }\n\n    document.set(newDeck)\n    .then(console.log(\"Created new deck.\"))\n    .catch(err => {\n      console.error(\"Error creating deck: \", err.message);\n    });\n  },\n\n  deleteDeck: (user, deckId) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    db.collection('decks').doc(deckId).delete()\n    .then(console.log(\"Deck successfully deleted.\"))\n    .catch(err => {\n      console.error(\"Error deleting deck: \", err.message);\n    });\n  },\n\n  saveDeck: (user, deck) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n    return db.collection('users').doc(user.uid).update({\n      save_decks: firebase.firestore.FieldValue.arrayUnion(deck)\n    })\n    .then(() => {\n      console.log(\"Updated deck with id: \", deck.id);\n    })\n    .catch(err => {\n      console.error(\"Error updating document: \", err.message);\n      \n    });\n  },\n\n  unsaveDeck: (user, deck) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n    return db.collection('users').doc(user.uid).update({\n      save_decks: firebase.firestore.FieldValue.arrayRemove({id: deck.id, numCards: deck.numCards, owner: deck.owner, private: deck.private, title: deck.title})\n    })\n    .then(() => {\n      console.log(\"Updated deck with id: \", deck.id);\n    })\n    .catch(err => {\n      console.error(\"Error updating document: \", err.message);\n      \n    });\n  },\n\n  updateDeck: (user, deckId, title) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const updatedDeck = {\n      title,\n    }\n\n    return db.collection('decks').doc(deckId).update(updatedDeck)\n    .then(() => {\n      console.log(\"Updated deck with id: \", deckId);\n      \n    })\n    .catch(err => {\n      console.error(\"Error updating document: \", err.message);\n      \n    });\n  },\n\n  createCard: (user, deckId, front, back) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const document = db.collection('cards').doc();\n\n    const newCard = {\n      id: document.id,\n      deckId,\n      owner: user.uid,\n      front,\n      back,\n    }\n\n    document.set(newCard)\n    .then(res => {\n      console.log(\"New card created.\")\n      db.collection('decks').doc(deckId).update({\n        numCards: firebase.firestore.FieldValue.increment(1)\n      })\n      .catch(err => {\n        console.error(\"Error increasing card count.\");\n      })\n    })\n    .catch(err => {\n      console.error(\"Error creating card: \", err.message);\n    });\n  },\n\n  updateCard: (user, cardId, front, back) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const updatedCard = {\n      front,\n      back\n    }\n    console.log(\"CardId: \", cardId);\n\n    db.collection('cards').doc(cardId).update(updatedCard)\n    .then(res => {\n      console.log(\"Updated card with id: \", cardId);\n    })\n    .catch(err => {\n      console.error(\"Error updating card: \", err.message);\n    })\n  },\n\n  deleteCard: (user, deckId, cardId) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    db.collection('cards').doc(cardId).delete()\n    .then(res => {\n      console.log(\"Card successfully deleted.\")\n      db.collection('decks').doc(deckId).update({\n        numCards: firebase.firestore.FieldValue.increment(-1)\n      })\n      .catch(err => {\n        console.error(\"Error decreasing card count.\");\n      })\n    })\n    \n    .catch(err => {\n      console.error(\"Error deleting card: \", err.message);\n    });\n  },\n\n  saveCard: () => {\n\n  }\n}","/**\n * Displays a text or password input, dependinding on \n * the type prop. The password input can toggle between\n * password and text types.\n */\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash, faLock } from '@fortawesome/free-solid-svg-icons';\n\nconst TextInput = ({\n  labelText,\n  icon=null,\n  type=\"text\",\n  id=\"\",\n  name=\"\",\n  placeholder=\"\",\n  value,\n  onChange,\n  autocomplete=\"on\"\n}) => {\n  const [isHidden, setIsHidden] = useState(true);\n\n  const toggleHidden = (event) => {\n    event.preventDefault();\n    setIsHidden(prev => !prev);\n  }\n\n  if (icon === null && type===\"password\")\n    icon = <FontAwesomeIcon icon={faLock} />\n\n  return (\n    <div className=\"input-block\">\n      <label htmlFor={id}>{labelText}</label>\n      <div className=\"input-row\">\n        {icon}\n        <input \n          type={type === \"password\" ? isHidden ? \"password\" : \"text\" : type}\n          name={name}\n          id={id}\n          value={value}\n          onChange={onChange}\n          \n          autoComplete={autocomplete}\n        >\n        </input>\n        {type === \"password\" &&\n          <button\n            type=\"button\"\n            className=\"btn btn-icon\"\n            onClick={toggleHidden}\n          >\n            {isHidden ?\n              <FontAwesomeIcon icon={faEye} />\n            :\n              <FontAwesomeIcon icon={faEyeSlash} />\n            }\n          </button>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default TextInput;","/**\n * Handles the creation of new decks.\n */\n\nimport React, { useState, useContext } from 'react';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { useHistory } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeading } from '@fortawesome/free-solid-svg-icons';\n\nimport TextInput from '../TextInput';\n\nconst DeckCreator = () => {\n  const [title, setTitle] = useState(\"\");\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n\n  const createDeck = (event) => {\n    event.preventDefault();\n    dbMethods.createDeck(user, title);\n    history.push(\"/app\");\n  }\n\n  return (\n    <form \n      id=\"new-deck\" \n      onSubmit={createDeck}\n    >\n      <TextInput \n        labelText=\"Title\"\n        icon={<FontAwesomeIcon icon={faHeading} />}\n        id=\"title\"\n        name=\"title\"\n        value={title}\n        onChange={(event) => setTitle(event.target.value)}\n        placeholder=\"New Deck\"\n        autocomplete=\"off\"\n      />\n    </form>\n  );\n}\n\nexport default DeckCreator;","/**\n * Handles displaying each card editor.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nconst CardEditor = ({\n  card,\n  onSubmit\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n\n  useEffect(() => {\n    setFront(card.front);\n    setBack(card.back);\n  }, [card])\n\n  const handleInput = (event) => {\n    if (event.target.name === \"front\") {\n      setFront(event.target.value);\n    } else if (event.target.name === \"back\") {\n      setBack(event.target.value);\n    }\n  }\n\n  const updateCard = (event) => {\n    event.preventDefault();\n    console.log(\"Card to update: \", card.id);\n    dbMethods.updateCard(user, card.id, front, back)\n    onSubmit();\n  }\n\n  const deleteCard = (event) => {\n    event.preventDefault();\n    dbMethods.deleteCard(user, card.deckId, card.id);\n  }\n\n  return (\n    <form className=\"card-editor\" onSubmit={updateCard}>\n      <div className=\"input-block\">\n        <textarea\n          name=\"front\"\n          id={card.id + \"-front\"}\n          value={front}\n          onChange={handleInput}\n        />\n        <label htmlFor={card.id + \"-front\"}>Front</label>\n      </div>\n      <div className=\"input-block\">\n        <textarea\n          name=\"back\"\n          id={card.id + \"-back\"}\n          value={back}\n          onChange={handleInput}\n        />\n        <label htmlFor={card.id + \"-back\"}>Back</label>\n      </div>\n      <button className=\"btn\">Update</button>\n      <button className=\"btn btn-warning\"\n        onClick={deleteCard}\n      >\n        <FontAwesomeIcon icon={faTrash} /> Delete card\n      </button>\n    </form>\n  );\n}\n\nexport default CardEditor;","/**\n * Generates and displays all the toggleable card editor boxes\n * in an accordion.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\n\nimport CardEditor from './decks-and-cards/CardEditor';\n\nconst Accordion = ({\n  cards\n}) => {\n  const [card, setCard] = useState(\"\");\n  const [cardEditorElements, setCardEditorElements] = useState([]);\n\n  const handleClick = (event) => {\n    setCard(prev => prev === event.target.value ? \"\" : event.target.value);\n  }\n\n  useEffect(() => {\n    const elements = cards.map(ele => {\n      let classes = ele.id === card ? \"btn btn-tertiary highlighted\" : \"btn btn-tertiary\";\n      return (\n        <React.Fragment key={ele.id} >\n          <button \n            className={classes}\n            value={ele.id}\n            onClick={handleClick}\n          >\n            <span className=\"truncate\">\"{ele.front}\"</span> \n            {card === ele.id ?\n              <FontAwesomeIcon icon={faAngleUp} />\n            :\n              <FontAwesomeIcon icon={faAngleDown} />\n            }\n          </button>\n          {card === ele.id && \n            <CardEditor\n              card={ele}\n              onSubmit={() => setCard(\"\")}\n            />\n          }\n        </React.Fragment>\n      )\n    })\n\n    setCardEditorElements(elements);\n  }, [card, cards]);\n\n  return (\n    <>\n      {cardEditorElements}\n    </>\n  );\n}\n\nexport default Accordion;","/**\n * Renders the toggleable card creator box.\n */\n\nimport React, { useState, useContext } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { dbMethods } from '../../firebase/dbMethods';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\n\nconst CardCreator = ({\n  deckId\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const [isOpen, setIsOpen] = useState(false);\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n\n  const handleInput = (event) => {\n    if (event.target.name === \"front\") {\n      setFront(event.target.value);\n    } else if (event.target.name === \"back\") {\n      setBack(event.target.value);\n    }\n  }\n\n  const createCard = (event) => {\n    event.preventDefault();\n    console.log(\"Creating new card.\");\n    dbMethods.createCard(user, deckId, front, back);\n    setFront(\"\");\n    setBack(\"\");\n    setIsOpen(false);\n  }\n\n  if (!isOpen) return (\n    <button className=\"btn btn-tertiary\"\n      onClick={() => setIsOpen(true)}\n    >\n      Add card <FontAwesomeIcon icon={faPlus} className=\"icon\" />\n    </button>\n  );\n\n  return (\n    <>\n      <button id=\"add\" className=\"btn btn-tertiary highlighted\"\n        onClick={() => setIsOpen(false)}\n      >\n        Add card <FontAwesomeIcon icon={faMinus} className=\"icon\"/>\n      </button>\n      <form className=\"card-editor\" onSubmit={createCard}>\n        <div className=\"input-block\">\n          <textarea\n            name=\"front\"\n            id=\"new-front\"\n            value={front}\n            onChange={handleInput}\n          />\n          <label htmlFor=\"new-front\">Front</label>\n        </div>\n        <div className=\"input-block\">\n          <textarea\n            name=\"back\"\n            id=\"new-back\"\n            value={back}\n            onChange={handleInput}\n          />        \n          <label htmlFor=\"new-back\">Back</label>\n        </div>\n        <button className=\"btn\">Create</button>\n      </form>\n    </>\n  );\n}\n\nexport default CardCreator;","/**\n * Displays a heading with a subtitle.\n */\n\nimport React from 'react';\n\nconst PageHeading = ({\n  title,\n}) => {\n  let titleElement = null;\n  titleElement=<h1 style={{textAlign: 'center'}}>{title}</h1>\n\n  return (\n    <header className=\"page-heading\">\n      {titleElement}\n    </header>\n  )\n}\n\nexport default PageHeading;","import React, { useState, useContext } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { useHistory } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeading } from '@fortawesome/free-solid-svg-icons';\n\nimport Accordion from '../Accordion';\nimport CardCreator from './CardCreator';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst DeckEditor = ({\n  selectedDecks,\n  deckToEdit,\n  setDeckToEdit,\n  cards\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n  const localDeck = JSON.parse(localStorage.getItem('deck'))\n  const deck = deckToEdit || localDeck;\n  const [title, setTitle] = useState(deck.title);\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n\n  const updateDeck = (event) => {\n    event.preventDefault();\n    dbMethods.updateDeck(user, deck.id, title)\n    setDeckToEdit({...deckToEdit, title});\n    setUpdateSuccess(true);\n    setTimeout(() => setUpdateSuccess(false), 3000);\n  }\n\n  const deleteDeck = (event) => {\n    event.preventDefault();\n    dbMethods.deleteDeck(user, deck.id);\n    history.push('/app');\n    setDeckToEdit(null);\n  }\n\n  return (\n    <>\n      <PageHeading\n        title=\"Edit deck.\"\n        subtitle=\"Update the title and privacy status of your deck.\"\n      />\n      <form onSubmit={updateDeck}>\n        <TextInput \n          labelText=\"Title\"\n          icon={<FontAwesomeIcon icon={faHeading} />}\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          placeholder=\"New Deck\"\n          autocomplete=\"off\"\n        />\n        <button\n          className=\"btn btn-primary\"\n        >\n          {updateSuccess ? \"Success!\" : \"Update\" }\n        </button>\n      </form>\n      <div>\n        <PageHeading \n          title=\"カード\"\n        />\n        <Accordion\n          deckId={selectedDecks[0]}\n          cards={cards}\n        />\n        <CardCreator \n          deckId={selectedDecks[0]}\n        />\n      </div>\n      <div>\n        <PageHeading \n          title=\"Delete deck.\"\n        />\n        <form onSubmit={deleteDeck}>\n          <button\n            className=\"btn btn-warning\"\n          >Delete</button>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default DeckEditor;","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faSave, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { db } from '../../firebase/firebaseIndex';\n\nconst SelectableDeck = ({\n  toggleDeck,\n  setSelectedDecks,\n  length,\n  deck,\n  setDeckToEdit,\n  mine\n}) => {\n  const history = useHistory();\n  const {user} = useContext(firebaseAuth)\n  const [saved, setSaved] = useState(false);\n  const savedDecksRaw = localStorage.getItem('save_decks')\n\n  useEffect(() => {\n    setSaved(isSaved())\n  },[])\n\n  const isSaved = () => {\n    if (!savedDecksRaw || savedDecksRaw.length == 0) {\n      return false\n    }\n    let savedDecks = JSON.parse(savedDecksRaw)\n    if (!savedDecks || savedDecks.length == 0) {\n      return false\n    }\n    let filterArray = savedDecks.filter(item => item.id == deck.id)\n    return (filterArray && filterArray.length > 0)\n  }\n\n  return (\n    <li style={{background: '#EAB2AE', marginBottom: 20, borderRadius: 10}}\n      // className={selectedDecks?.includes(id) ? \"selected\" : \"\"}\n      // onClick={(event) => {\n      //   event.stopPropagation();\n      //   toggleDeck(id);\n      // }}\n      // role=\"checkbox\"\n      // aria-checked={selectedDecks?.includes(id) ? \"true\" : \"false\"}\n    >\n      <div>\n        {/* <input\n          name={id}\n          type=\"checkbox\"\n          checked={selectedDecks?.includes(id)}\n          onChange={() => null}\n        /> */}\n        <label htmlFor=\"checkbox\" className=\"truncate\">\n          <span></span>\n          <strong>{deck.title}</strong> ({length} {\"カード\"})\n          \n        </label>\n      </div>\n      <div className=\"button-row\">\n        {mine ? <button \n          className=\"btn btn-icon\"\n          style={{color: 'black'}}\n          onClick={(event) => {\n            event.stopPropagation();\n            setDeckToEdit();\n            localStorage.setItem('deck', JSON.stringify(deck));\n            history.push(\"/app/edit\");\n          }}\n        >\n          <FontAwesomeIcon icon={faEdit} /> 編集する\n        </button>\n        : <button \n        className=\"btn btn-icon\"\n        style={{color: 'black'}}\n        onClick={(event) => {\n          event.stopPropagation();\n          if (saved) {\n            dbMethods.unsaveDeck(user, deck)\n            setSaved(false)\n          } else {\n            dbMethods.saveDeck(user, deck)\n            setSaved(true)\n          }\n        }}\n      >\n        <FontAwesomeIcon icon={saved ? faTrash : faSave} /> {saved ? \"削除する\" : \"保存する\"}\n      </button>\n        }\n      </div>\n    </li>\n  );\n}\n\nexport default SelectableDeck;","import React, { useState, useEffect, useContext } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport SelectableDeck from './SelectableDeck';\n\nconst DeckList = ({\n  decks,\n  selectedDecks,\n  setSelectedDecks,\n  setDeckToEdit,\n}) => {\n  const [deckList, setDeckList] = useState([]);\n  const { user } = useContext(firebaseAuth);\n\n  // const toggleDeck = (deckId) => {\n  //   setSelectedDecks(decks => {\n  //     if (decks.includes(deckId)) {\n  //       return decks.filter(ele => ele !== deckId)\n  //     } else {\n  //       return [...decks, deckId];\n  //     }\n  //   });\n  // }\n\n  useEffect(() => {\n    if (!decks) {return}\n    setDeckList(decks.map(deck => {\n      return (\n        <SelectableDeck \n          key={deck.id}\n          // toggleDeck={toggleDeck}\n          // selectedDecks={selectedDecks}\n          length={deck.numCards}\n          // setSelectedDecks={setSelectedDecks}\n          deck={deck}\n          mine={deck.owner == user.uid}\n          setDeckToEdit={() => {\n            setDeckToEdit({ id: deck.id, title: deck.title, private: deck.private });\n          }}\n        />\n      );}\n    ));\n  }, [decks]);\n\n  return (\n    <div className=\"deck-list\">\n      <ul>\n        {deckList.length > 0 ? \n          deckList\n        :\n          <p>セットがありません。 作成して開始してください！</p>\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default DeckList;"," import React, { useState, useContext, useEffect } from 'react';\n import { Link, Switch, Route, useHistory } from 'react-router-dom';\n import { firebaseAuth } from '../provider/AuthProvider';\n  \n import DeckList from './decks-and-cards/DeckList';\n import PageHeading from './PageHeading';\n \n const SavedDecks = ({\n   saveDecks,\n }) => {\n   const { user } = useContext(firebaseAuth);\n   const history = useHistory();\n \n   if (!user) {\n     history.push(\"/log-in\");\n   }\n \n   return (\n     <div className=\"dashboard\">\n         <Switch>\n           <Route path=\"/app/saved\">\n             <div style={{ display: 'flex' }}>\n               <div style={{ width: '100%', margin: '0 auto', paddingRight: 30 }}>\n                 <PageHeading\n                   title=\"保存したセット\"\n                 />\n                 <div>\n                   <DeckList\n                     decks={saveDecks}\n                   />\n                 </div>\n               </div>\n             </div>\n           </Route>\n         </Switch>\n     </div>\n   );\n }\n \n export default SavedDecks;","/**\n * Displays the dashboard page.\n */\n\n import React, { useState, useContext, useEffect } from 'react';\n import { Link, Switch, Route, useHistory } from 'react-router-dom';\n import { firebaseAuth } from '../provider/AuthProvider';\n \n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n import { faPlus } from '@fortawesome/free-solid-svg-icons';\n \n import DeckCreator from './decks-and-cards/DeckCreator';\n import DeckEditor from './decks-and-cards/DeckEditor';\n import DeckList from './decks-and-cards/DeckList';\n import PageHeading from './PageHeading';\n \n const CreatedDecks = ({\n   decks,\n   cards,\n   selectedDecks,\n }) => {\n   const [deckToEdit, setDeckToEdit] = useState(null);\n   const { user } = useContext(firebaseAuth);\n   const history = useHistory();\n \n   if (!user) {\n     history.push(\"/log-in\");\n   }\n \n   return (\n     <div className=\"dashboard\">\n         <Switch>\n           <Route path=\"/app/edit\">\n             <DeckEditor\n               selectedDecks={selectedDecks}\n               deckToEdit={deckToEdit}\n               setDeckToEdit={setDeckToEdit}\n               cards={cards}\n             />\n           </Route>\n           <Route path=\"/app/create\">\n             <PageHeading \n               title=\"New Deck!\"\n             />\n             <DeckCreator />\n           </Route>\n           <Route path=\"/app/created\">\n             <div style={{ display: 'flex' }}>\n               <div style={{ width: '100%', margin: '0 auto', paddingRight: 30 }}>\n                 <PageHeading\n                   title=\"作ったセット\"\n                 />\n                 <div>\n                   <DeckList\n                     decks={decks}\n                     setDeckToEdit={setDeckToEdit}\n                   />\n                 </div>\n               </div>\n               <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', paddingTop: 100, paddingLeft: 60, width: 200}}>\n                 <button\n                   onClick={() => {\n                     history.push('/app/create')\n                   }}\n                   style={{color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30}}\n                 >\n                   <><FontAwesomeIcon icon={faPlus} style={{marginRight: 5}} /> 新作</>\n                 </button>\n               </div>\n             </div>\n           </Route>\n         </Switch>\n     </div>\n   );\n }\n \n export default CreatedDecks;","/**\n * Displays the dashboard page.\n */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRandom, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from './Breadcrumb';\nimport DeckCreator from './decks-and-cards/DeckCreator';\nimport DeckEditor from './decks-and-cards/DeckEditor';\nimport DeckList from './decks-and-cards/DeckList';\nimport PageHeading from './PageHeading';\nimport SavedDecks from './SavedDecks';\nimport CreatedDecks from './CreatedDecks';\n\nconst Dashboard = ({\n  onClick,\n  decks,\n  saveDecks,\n  cards,\n  selectedDecks,\n  setSelectedDecks,\n}) => {\n  const [deckToEdit, setDeckToEdit] = useState(null);\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <Switch>\n        <Route path=\"/app/edit\">\n          <DeckEditor\n            selectedDecks={selectedDecks}\n            deckToEdit={deckToEdit}\n            setDeckToEdit={setDeckToEdit}\n            cards={cards}\n          />\n        </Route>\n        <Route path=\"/app/create\">\n          <PageHeading\n            title=\"New Deck!\"\n          />\n          <DeckCreator />\n        </Route>\n        <Route path=\"/app/saved\">\n          <SavedDecks\n            saveDecks={saveDecks}\n          />\n        </Route>\n        <Route path=\"/app/created\">\n          <CreatedDecks\n            decks={decks}\n            cards={cards}\n            selectedDecks={selectedDecks}\n          />\n        </Route>\n        <Route path=\"/app\">\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '50%', margin: '0 auto', paddingRight: 30 }}>\n              <PageHeading\n                title=\"作ったセット\"\n              />\n              <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                <div>\n                  <DeckList\n                    decks={decks.slice(0, 3)}\n                    setDeckToEdit={setDeckToEdit}\n                  />\n                </div>\n                {decks.length > 3 &&\n                  <div style={{ display: 'flex', justifyContent: 'end' }}>\n                    <button\n                      id=\"shuffle\"\n                      name=\"shuffle\"\n                      onClick={() => {\n                        history.push('/app/created')\n                      }}\n                      style={{ color: 'black', background: 'transparent', border: 'unset', fontSize: 20 }}\n                    > もっと見る\n                    </button>\n                  </div>}\n              </div>\n            </div>\n            <div style={{ width: '50%', margin: '0 auto', paddingLeft: 30 }}>\n              <PageHeading\n                title=\"保存したセット\"\n              />\n              <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                <div>\n                  <DeckList\n                    decks={saveDecks.slice(0, 3)}\n                  />\n                </div>\n                {saveDecks.length > 3 &&\n                  <div style={{ display: 'flex', justifyContent: 'end' }}>\n                    <button\n                      id=\"shuffle\"\n                      name=\"shuffle\"\n                      onClick={() => {\n                        history.push('/app/saved')\n                      }}\n                      style={{ color: 'black', background: 'transparent', border: 'unset', fontSize: 20 }}\n                    > もっと見る\n                    </button>\n                  </div>\n                }\n              </div>\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', paddingTop: 100, paddingLeft: 60, width: 200 }}>\n              <button\n                onClick={() => {\n                  history.push('/app/create')\n                }}\n                style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30 }}\n              >\n                <><FontAwesomeIcon icon={faPlus} style={{ marginRight: 5 }} /> 新作</>\n              </button>\n              <button\n                onClick={onClick}\n                style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30 }}\n              >\n                <><FontAwesomeIcon icon={faPlus} style={{ marginRight: 5 }} /> 復習</>\n              </button>\n              <button\n                onClick={onClick}\n                style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30 }}\n              >\n                <><FontAwesomeIcon icon={faPlus} style={{ marginRight: 5 }} /> 履歴</>\n              </button>\n            </div>\n          </div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Dashboard;","import React, { useContext, useState } from 'react';\nimport { Link, useHistory, Switch, Route } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nimport PageHeading from './PageHeading';\nimport DeckList from './decks-and-cards/DeckList';\nimport DeckEditor from './decks-and-cards/DeckEditor';\n\nconst Home = ({\n  allDecks,\n  selectedDecks,\n  cards\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const [deckToEdit1, setDeckToEdit] = useState(null);\n  const history = useHistory();\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n  return (\n    <Switch>\n      <Route path=\"/app-edit\" >\n        <DeckEditor\n          deckToEdit={deckToEdit1}\n          selectedDecks={selectedDecks}\n          setDeckToEdit={setDeckToEdit}\n          cards={cards}\n        />\n      </Route>\n      <Route path=\"/\">\n        <>\n          <header className=\"hero\">\n            <section>\n              <div className=\"hero-content\">\n                <div className=\"buttons\">\n                  <>\n                    <Link\n                      className=\"btn btn-cta\"\n                      to=\"/app\"\n                    >\n                      ダッシュボード\n                    </Link>\n                  </>\n                </div>\n              </div>\n            </section>\n            <div className=\"card-design\">\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          </header>\n\n          <section className=\"public-decks\">\n            <div>\n              <PageHeading\n                title=\"全てセット\"\n              />\n              <div style={{textAlign: 'left'}}>\n                <DeckList\n                  decks={allDecks}\n                  setDeckToEdit={setDeckToEdit}\n                />\n              </div>\n            </div>\n          </section>\n        </>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Home;","/**\n * Hook for user authentication and account management:\n * \n * Logging user in\n * Signing user up\n * Logging user out\n * Updating user email\n * Changing user password\n * Deleting account\n */\n\nimport { useState, useEffect, useContext } from 'react';\nimport { auth, db, fb } from '../firebase/firebaseIndex';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nconst useAuth = (username = null, email = null, password = null, newPassword = null, avatarUrl = null) => {\n  const { user } = useContext(firebaseAuth);\n\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(\"pending\");\n\n  const [login, setLogin] = useState(0);\n  const [signup, setSignup] = useState(0);\n  const [logout, setLogout] = useState(0);\n  const [changeEmail, setChangeEmail] = useState(0);\n  const [changePassword, setChangePassword] = useState(0);\n  const [deleteAccount, setDeleteAccount] = useState(0);\n\n  // Logging user in\n  useEffect(() => {\n    if (login === 0 || user != null) return;\n    setError(null);\n    setStatus(\"loading\");\n    auth.signInWithEmailAndPassword(email, password)\n    .then((userCredential) => {\n      let _user = userCredential.user;\n      setUserData(_user);\n      setStatus(\"success\");\n    })\n    .catch((error) => {\n      console.error(\"Error logging user in: \", error.message);\n      setError(error);\n      setStatus(\"error\");\n    })\n  }, [login]);\n\n  // Signing user up\n  useEffect(() => {\n    if (signup === 0 || user != null) return;\n    setError(null);\n    setStatus(\"loading\");\n    auth.createUserWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        let _user = userCredential.user;\n        db.collection('users').doc(_user.uid).set({\n          save_decks: []\n        });\n        userCredential.user.updateProfile({displayName: username})\n        setUserData(_user);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        console.error(\"Error signing user in: \", error.message);\n        setError(error);\n        setStatus(\"error\");\n      })\n\n  }, [signup]);\n\n  // Logging user out\n  useEffect(() => {\n    if (logout === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    auth.signOut()\n    .then(() => {\n      console.log(\"Logged out\");\n      setUserData(null);\n      setStatus(\"success\");\n    })\n    .catch(error => {\n      console.error(\"Error logging user out: \", error.message);\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [logout]);\n\n  useEffect(() => {\n    if (changeEmail === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\")\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      console.log(\"User successfully reauthenticated.\");\n      auth.currentUser.updateEmail(email)\n      .then(() => {\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n      setStatus(\"loading\")\n      auth.currentUser.updateProfile({displayName: username, photoURL: avatarUrl})\n      .then(() => {\n        setUserData(auth.currentUser);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [changeEmail]);\n\n  // Changing password\n  useEffect(() => {\n    if (changePassword === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n    \n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      console.log(\"User successfully reauthenticated.\");\n      auth.currentUser.updatePassword(newPassword).then(function() {\n        setStatus(\"success\");\n      }).catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [changePassword])\n\n  // Delete account\n  useEffect(() => {\n    if (deleteAccount === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n\n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      auth.currentUser.delete().then(() => {\n        setStatus(\"success\");\n      }).catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      })\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    });\n\n  }, [deleteAccount])\n\n  const handleLogin = () => setLogin(prev => prev + 1);\n  const handleSignup = () => setSignup(prev => prev + 1);\n  const handleLogout = () => setLogout(prev => prev + 1);\n  const handleChangeEmail = () => setChangeEmail(prev => prev + 1);\n  const handleChangePassword = () => setChangePassword(prev => prev + 1);\n  const handleDeleteAccount = () => setDeleteAccount(prev => prev + 1);\n  const resetStatus = () => setStatus('pending');\n\n  return { \n    userData, \n    error, \n    status,\n    handleLogin, \n    handleSignup, \n    handleLogout,\n    handleChangeEmail,\n    handleChangePassword,\n    handleDeleteAccount,\n    resetStatus\n  };\n}\n\nexport default useAuth;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst Login = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n  const [inputs, setInputs] = useState({ email: \"\", password: \"\" });\n\n  const { status, error, handleLogin} = useAuth(null, inputs.email, inputs.password);\n  const { user } = useContext(firebaseAuth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleLogin();\n  }\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/app\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/user-not-found\":\n        setErrorMessage(\"メールアドレスとパスワードが一致しません。\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"メールアドレスとパスワードが一致しません。\");\n        return;\n      case \"auth/invalid-email\":\n        setErrorMessage(\"有効なメールアドレスを入力してください。\");\n        return;\n      default:\n        setErrorMessage(\"何かがうまくいかなかった。もう一度やり直してください。\");\n        return;\n    }\n\n  }, [error]);\n\n  return (\n    <div className=\"login\" style={{textAlign: 'center'}}>\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', marginRight: 200}}>\n        <div style={{display: 'flex', paddingRight: 50, fontSize: 25, alignItems: 'center'}}>\n          <Link to=\"/sign-up\">サインアップ</Link>\n        </div>\n        <PageHeading \n          title=\"ログイン\"\n        />\n      </div>\n      <form style={{display: 'inline-block'}} onSubmit={handleSubmit}>\n        <TextInput \n          labelText=\"メールアドレス\"\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n          id=\"email\"\n          name=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          placeholder=\"メールアドレス\"\n        />\n        <TextInput \n          labelText=\"パスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button \n          className=\"btn btn-primary\"\n          style={{backgroundColor: '#526CC6', borderColor: 'unset', borderRadius: 20, borderWidth: 0}}\n          disabled={inputs.password === \"\" || inputs.email === \"\"}        \n        >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"ログイン\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;","/**\n * Displays a spinner for 1 second when logging out.\n */\n\nimport React, { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport useAuth from '../../hooks/useAuth';\n\nimport Spinner from '../Spinner';\n\nconst Logout = () => {\n  const { user } = useContext(firebaseAuth);\n  const { handleLogout } = useAuth()\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!user) return;\n    handleLogout();\n    setTimeout(() => history.push(\"/\"), 1000);\n  }, [user]);\n\n  return (\n    <div className=\"container center\">\n      <p><Spinner /> Logging out . . .</p>\n    </div>\n  );\n}\n\nexport default Logout;","/**\n * Displays the update password page.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from '../Breadcrumb';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst ChangePassword = ({\n  handleChange,\n  inputs,\n  error,\n  onSubmit,\n  status\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n  \n  return (\n    <>\n      <PageHeading\n        title=\"パスワードを変更してください\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"新しいパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"new-password\"\n          name=\"newPassword\"\n          value={inputs.newPassword}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-primary\"　style={{color: 'white', background: '#526CC6', border: 'unset'}}>\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"パスワードを変更する\"}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default ChangePassword;","/**\n * Displays the delete account page.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from '../Breadcrumb';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst DeleteAccount = ({\n  handleChange,\n  inputs,\n  error,\n  onSubmit\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    switch (error) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n  \n  return (\n    <>\n      <PageHeading\n        title=\"アカウントを削除する\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-warning\">アカウントを完全に削除する</button>\n      </form>\n    </>\n  );\n}\n\nexport default DeleteAccount;","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faEnvelope, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst UpdateProfile = ({\n  handleChange,\n  inputs,\n  onSubmit,\n  error,\n  status,\n  onBack\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n\n  useEffect(() => {\n    return () => onBack();\n  }, [])\n\n  return (\n    <>\n      <PageHeading\n        title=\"メールを更新する\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"ユーザー名\"\n          icon={<FontAwesomeIcon icon={faUser} />}\n          type=\"username\"\n          id=\"username\"\n          name=\"username\"\n          value={inputs.username}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"メルアドレス\"\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n          id=\"email\"\n          name=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          placeholder=\"メルアドレス\"\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-primary\" \n        style={{color: 'white', background: '#526CC6', border: 'unset'}}\n        disabled={inputs.password === \"\" || inputs.email === \"\" || inputs.username === \"\"}   >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"メールを更新する\"}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default UpdateProfile;","/**\n * Shows the My Account page and sets up the useAuth\n * hook to be used on ChangePassword, UpdateEmail and\n * DeleteAccount components.\n */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport ChangePassword from './ChangePassword';\nimport DeleteAccount from './DeleteAccount';\nimport PageHeading from '../PageHeading';\nimport UpdateProfile from './UpdateProfile';\n\nconst MyAccount = () => {\n  const { user } = useContext(firebaseAuth);\n  const [inputs, setInputs] = useState({ \n    email: user.email || \"\",\n    password: \"\", \n    newPassword: \"\", \n    username: user.displayName || \"\", \n    avatarUrl: user.photoUrl || \"\"});\n\n  const { \n    loading, \n    error, \n    status, \n    handleChangeEmail, \n    handleChangePassword, \n    handleDeleteAccount,\n    resetStatus\n  } = useAuth(inputs.username, inputs.email, inputs.password, inputs.newPassword);\n\n  const history = useHistory();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"my-account\">\n      <div className=\"my-account-inner\" style={{width: '50%', margin: '0 auto'}}>\n        <Switch>\n          <Route exact path=\"/my-account\">\n            <div>\n              <PageHeading\n                title=\"アカウント\"\n              />\n              <div className=\"account-data\">\n                  <Link to=\"/my-account/change-email\" className=\"btn btn-tertiary\">\n                    <span>メールを更新する</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                  </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/my-account/change-password\" className=\"btn btn-tertiary\">\n                  <span>パスワードを変更してください</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/log-out\" className=\"btn btn-tertiary\">\n                  <span>ログアウト</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/my-account/delete-account\" className=\"btn btn-warning\">\n                  <FontAwesomeIcon icon={faTrash} />&nbsp;&nbsp;&nbsp;アカウントを削除する\n                </Link>\n              </div>\n            </div>\n          </Route>\n\n          <Route exact path=\"/my-account/change-email\">\n            <UpdateProfile \n              handleChange={handleChange}\n              inputs={inputs}\n              loading={loading}\n              onSubmit={handleChangeEmail}\n              error={error}\n              status={status}\n              onBack={resetStatus}\n            />\n          </Route>\n\n          <Route exact path=\"/my-account/change-password\">\n            <ChangePassword \n              handleChange={handleChange}\n              loading={loading}\n              inputs={inputs}\n              onSubmit={handleChangePassword}\n              error={error}\n              status={status}\n            />\n          </Route>\n          \n          <Route exact path=\"/my-account/delete-account\">\n            <DeleteAccount \n              handleChange={handleChange}\n              inputs={inputs}\n              onSubmit={handleDeleteAccount}\n              error={error}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default MyAccount;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navlinks = ({\n  closeMenu\n}) => {\n  return (\n    <ul>\n        <li>\n          <NavLink to=\"/my-account\" className=\"link\" onClick={() => closeMenu()}>\n            プロフィール\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/log-out\" className=\"link\" onClick={() => closeMenu()}>\n            ログアウト\n          </NavLink>\n        </li>\n    </ul>\n  )\n}\n\nexport default Navlinks;","import React, { useState, useEffect, useContext } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReply } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\n\nimport Navlinks from './Navlinks';\n\nconst Nav = ({\n  onClick,\n  isMenuOpen,\n  mobile=false\n}) => {\n  const [navClasses, setNavClasses] = useState(\"navbar\");\n  const btnClasses= \"btn btn-hamburger small-screen-only \" + (isMenuOpen && \"open\"); \n  let location = useLocation();\n  const { user } = useContext(firebaseAuth);\n\n  useEffect(() => {\n\n    if (mobile) {\n      setNavClasses(\"navbar\");\n      return;\n    }\n\n    if (location.pathname !== \"/\") {\n      setNavClasses(\"navbar light\");\n      return;\n    }\n\n    setNavClasses(\"navbar\");\n  }, [location, mobile])\n\n  if (!user) {\n    return null\n  }\n\n  return (\n    <header className={navClasses} style={{background: '#526CC6'}}>\n      <div className=\"navbar-inner\">\n        <Link to=\"/\" className=\"logo\">\n          Flash Cards\n        </Link>\n        <div className=\"right-nav\">\n          <nav className=\"large-screen-only\">\n            <Navlinks closeMenu={() => null}/>\n          </nav>\n          <button \n            className={btnClasses}\n            name=\"toggle-menu\"\n            onClick={onClick}\n          >\n            <span></span>\n            <span></span>\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Nav;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst Signup = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [inputs, setInputs] = useState({username: \"\", email: \"\", password: \"\" });\n  const history = useHistory();\n\n  const { status, error, handleSignup} = useAuth(inputs.username, inputs.email, inputs.password);\n  const { user } = useContext(firebaseAuth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleSignup();\n  }\n\n  useEffect(() => {\n    if (error === null) return;\n    console.log(error.message);\n  }, [error])\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/app\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/weak-password\":\n        setErrorMessage(\"パスワードは6文字以上である必要があります。\");\n        return;\n      case \"auth/email-already-in-use\":\n        setErrorMessage(\"このメールはすでに登録されています。\");\n        return;\n      case \"auth/invalid-email\":\n        setErrorMessage(\"有効なメールアドレスを入力してください。\");\n        return;\n      default:\n        setErrorMessage(\"何かがうまくいかなかった。 もう一度やり直してください。\");\n        return;\n    }\n  }, [error]);\n\n  return (\n    <div className=\"signup\" style={{textAlign: 'center'}}>\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', marginRight: 200}}>\n        <div style={{display: 'flex', paddingRight: 50, fontSize: 25, alignItems: 'center'}}>\n          <Link to=\"/log-in\">ログイン</Link>\n        </div>\n        <PageHeading \n        title=\"サインアップ\"\n      />\n      </div>\n      <form style={{display: 'inline-block'}} onSubmit={handleSubmit}>\n      <TextInput \n          labelText=\"ユーザー名\"\n          id=\"username\"\n          name=\"username\"\n          placeholder=\"ユーザー名\"\n          value={inputs.username}\n          onChange={handleChange}\n          icon={<FontAwesomeIcon icon={faUser} />}\n        />\n        <TextInput \n          labelText=\"メールアドレス\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"メールアドレス\"\n          value={inputs.email}\n          onChange={handleChange}\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n        />\n        <TextInput \n          labelText=\"パスワード\"\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button \n          className=\"btn btn-primary\"\n          style={{backgroundColor: '#526CC6', borderColor: 'unset', borderRadius: 20, borderWidth: 0}}\n          disabled={inputs.username === \"\" || inputs.password === \"\" || inputs.email === \"\"}\n        >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"サインアップ\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;","/**\n * Displays the mobile menu.\n */\n\nimport React from 'react';\nimport Navlinks from './Navlinks';\nimport Nav from './Nav';\n\nconst MobileMenu = ({\n  isOpen,\n  setIsOpen,\n  handleButtons\n}) => {\n\n  const closeMenu = () => {\n    setIsOpen(false);\n  }\n\n  return (\n    <div className={isOpen ? \"mobile-menu open\" : \"mobile-menu\"}>\n      <Nav onClick={handleButtons} isMenuOpen={isOpen} mobile={true}/>\n      <Navlinks closeMenu={closeMenu} />\n    </div>\n  )\n}\n\nexport default MobileMenu;","/**\n * Displays the footer.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\nconst Footer = () => {\n  return (\n    <footer style={{background: '#526CC6'}}>\n      <section>\n        <span className=\"logo\">赤黒</span>\n      </section>\n    </footer>\n  );\n}\n\nexport default Footer;","/**\n * Main wrapper for the app, containing the shuffle functionality\n * used by Deck and Dashboard components.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport { firebaseAuth } from './provider/AuthProvider';\nimport useOnDecksSnapshot from './hooks/useOnDecksSnapshot';\nimport useGetShuffledCards from './hooks/useGetShuffledCards';\nimport useOnSavedDecksSnapshot from './hooks/useOnSavedDecksSnapshot';\nimport useOnAllDecksSnapshot from './hooks/useOnAllDecksSnapshot';\n\nimport Deck from './components/decks-and-cards/Deck';\nimport Dashboard from './components/Dashboard';\nimport Home from './components/Home';\nimport Login from './components/account-management/Login';\nimport Logout from './components/account-management/Logout';\nimport MyAccount from './components/account-management/MyAccount';\nimport Nav from './components/Nav';\nimport Signup from './components/account-management/Signup';\nimport MobileMenu from './components/MobileMenu';\nimport Footer from './components/Footer';\n\nconst fisherYatesShuffle = (array) => {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = Object.assign({}, array[currentIndex]);\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n}\n\nconst App = () => {\n  const [selectedDecks, setSelectedDecks] = useState([]);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [shuffledCards, setShuffledCards] = useState([]);\n\n  const history = useHistory();\n  const { user } = useContext(firebaseAuth);\n  const { decks } = useOnDecksSnapshot(user);\n  const { saveDecks } = useOnSavedDecksSnapshot(user);\n  const { allDecks } = useOnAllDecksSnapshot();\n  const { cards } = useGetShuffledCards(user, selectedDecks);\n\n  useEffect(() => {\n    let _cards = [];\n    shuffledCards.forEach(card => {\n      cards.forEach((updatedCard) => {\n        if (updatedCard.id === card.id) {\n          _cards.push(Object.assign({}, updatedCard)); \n        }\n      })\n    });\n    setShuffledCards(_cards);\n  }, [cards]);\n\n  useEffect(() => {\n    if (user) return;\n    setShuffledCards([]);\n    setSelectedDecks([]);\n  }, [user]);\n\n  const handleButtons = (event) => {\n    switch (event.target.name) {\n      case \"exit\":\n        setShuffledCards([]);\n        if (user) {\n          history.push(\"/app\");\n          return;\n        }\n        history.push(\"/\");\n        return;\n\n      case \"shuffle\":\n        if (selectedDecks.length === 0) return;\n        const randomized_cards = fisherYatesShuffle(cards);\n        setShuffledCards(randomized_cards);\n        history.push(\"/app/shuffle\");\n        return;\n\n      case \"toggle-menu\":\n        setIsMenuOpen(prev => !prev);\n        return;\n      default:\n        return;\n    }\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"app\">\n      <Nav \n        onClick={handleButtons}\n        isMenuOpen={isMenuOpen}\n      />\n      <MobileMenu \n        isOpen={isMenuOpen}\n        setIsOpen={setIsMenuOpen}\n        handleButtons={handleButtons}\n      />\n      <Switch>\n        <Route path=\"/log-in\">\n          <Login />\n          <Footer />\n        </Route>\n        <Route path=\"/log-out\">\n          <main>\n            <Logout />\n          </main>\n        </Route>\n        <Route path=\"/sign-up\">\n          <Signup />\n          <Footer />\n        </Route>\n        <Route path=\"/my-account\">\n          <main>\n            <MyAccount />\n            <Footer />\n          </main>\n        </Route>\n        <Route path=\"/app/shuffle\">\n          <Deck \n            shuffledCards={shuffledCards}\n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app/d/:hash\">\n          <Deck \n            shuffledCards={shuffledCards}\n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app\">\n          <main>\n            <Dashboard \n              onClick={handleButtons}\n              decks={decks}\n              saveDecks={saveDecks}\n              cards={cards}\n              selectedDecks={selectedDecks}\n              setSelectedDecks={setSelectedDecks}\n            />\n            <Footer />\n          </main>\n        </Route>\n        <Route path=\"/\">\n          <main>\n            <Home \n              cards={cards} \n              allDecks={allDecks} \n              setSelectedDecks={setSelectedDecks} \n              selectedDecks={selectedDecks}\n              />\n            <Footer />\n          </main>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport AuthProvider from './provider/AuthProvider';\n\nimport './styles/normalize.css';\nimport './styles/styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <AuthProvider>\n        \n        <App />\n      </AuthProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}