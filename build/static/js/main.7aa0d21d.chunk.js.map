{"version":3,"sources":["firebase/firebaseIndex.js","provider/AuthProvider.js","hooks/useOnDecksSnapshot.js","hooks/useOnSavedDecksSnapshot.js","hooks/useOnAllDecksSnapshot.js","components/Carousel.js","components/Header.js","components/decks-and-cards/CardContent.js","components/decks-and-cards/FlippableCard.js","components/Spinner.js","components/decks-and-cards/Deck.js","firebase/dbMethods.js","components/TextInput.js","components/PageHeading.js","components/decks-and-cards/UploadAndDisplayImage.js","components/decks-and-cards/CardEditor.js","components/decks-and-cards/CardCreator.js","components/Accordion.js","components/decks-and-cards/DeckCreator.js","components/decks-and-cards/DeckEditor.js","components/decks-and-cards/SelectableDeck.js","components/decks-and-cards/DeckList.js","components/SavedDecks.js","components/CreatedDecks.js","components/decks-and-cards/Test.js","components/decks-and-cards/TestCompare.js","components/Dashboard.js","components/Home.js","hooks/useAuth.js","components/account-management/Login.js","components/account-management/Logout.js","components/account-management/ChangePassword.js","components/account-management/DeleteAccount.js","components/account-management/UpdateProfile.js","components/account-management/MyAccount.js","components/Navlinks.js","components/Nav.js","components/account-management/Signup.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","db","firestore","fb","storage","firebaseAuth","React","createContext","AuthProvider","props","useState","user","setUser","useEffect","unsub","onAuthStateChanged","Provider","value","children","useOnDecksSnapshot","decks","setDecks","unsubscribe","collection","where","uid","onSnapshot","snapshot","arr","forEach","deck","push","data","error","console","log","message","useOnSavedDecksSnapshot","saveDecks","doc","save_decks","localStorage","setItem","JSON","stringify","useOnAllDecksSnapshot","allDecks","Carousel","leftButtonText","rightButtonText","animTime","items","previousCallback","nextCallback","showButtons","index","setIndex","carouselItems","setCarouselItems","canSlide","setCanSlide","carousel","useRef","modifiedItems","map","ele","className","key","handleClick","event","target","name","length","idx","undefined","setTimeout","ref","style","marginLeft","width","transition","onClick","disabled","Header","title","CardContent","text","imageUrl","alt","height","src","FlippableCard","frontTitle","backTitle","frontText","backText","isFlipped","setIsFlipped","imageRef","header","icon","faTimes","backHeader","cloneElement","footer","prev","faReply","size","setImageUrl","getDownloadURL","then","downloadURL","Spinner","faSpinner","Deck","cards","setCards","setTitle","description","setDescription","hashCards","setHashCards","isCardFlipped","setIsCardFlipped","canView","isLoaded","setIsLoaded","hash","useParams","shuffle","setShuffle","cardShuffle","setCardShuffle","history","useHistory","alert","useAlert","get","catch","item","_cards","front","back","id","slideCallback","display","flexDirection","justifyContent","alignItems","backgroundColor","position","top","maxWidth","fontWeight","wordBreak","background","textAlign","zIndex","color","lineHeight","verticalAlign","borderRadius","marginTop","marginBottom","array","randomIndex","currentIndex","Math","floor","random","shuffleCard","faAngleLeft","faAngleRight","show","border","fontSize","paddingBottom","faPlus","marginRight","dbMethods","isPublic","saveCount","document","newDeck","numCards","owner","set","err","deckId","delete","update","FieldValue","arrayUnion","increment","arrayRemove","updatedDeck","TextInput","labelText","type","placeholder","onChange","autocomplete","isHidden","setIsHidden","faLock","htmlFor","outline","autoComplete","preventDefault","faEye","faEyeSlash","PageHeading","titleElement","styles","UploadAndDisplayImage","onSetImage","image","setImage","filePath","setFilePath","useContext","uploadTask","files","put","on","progress","bytesTransferred","totalBytes","state","child","CardEditor","card","onSubmit","onUpdate","onDelete","setFront","setBack","handleInput","faTrash","CardCreator","onCreateCard","isOpen","setIsOpen","faMinus","Accordion","listCards","onCards","setCard","cardEditorElements","setCardEditorElements","onDeleteCard","splice","updateElements","onUpdateCard","elements","classes","Fragment","faAngleUp","faAngleDown","newCard","DeckCreator","updateSuccess","setUpdateSuccess","setListCards","setIsPublic","checkReadyToCreate","createDeck","faPaperclip","faBook","checked","DeckEditor","deckToEdit","setDeckToEdit","localDeck","parse","getItem","checkReadyToUpdate","updateDeck","SelectableDeck","toggleDeck","setSelectedDecks","mine","saved","setSaved","savedDecksRaw","isSaved","savedDecks","filterArray","filter","stopPropagation","faEdit","faSave","Items","currentItems","PaginatedItems","itemsPerPage","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","slice","ceil","nextLabel","onPageChange","newOffset","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","DeckList","deckList","setDeckList","private","SavedDecks","path","margin","paddingRight","CreatedDecks","paddingTop","paddingLeft","Test","correctAnswer","setCorrectAnswer","selectedAnswer","setSelectedAnswer","result","setResult","submitted","setSubmitted","_listCorrectAnswer","cardIndex","question","answers","includes","Array","fill","padding","element","newAnswer","totalResult","TestCompare","originCards","setOriginCards","randomCards","setRandomCards","selectedIndex1","setSelectedIndex1","selectedIndex2","setSelectedIndex2","newArray","_onCheck","index1","index2","Dashboard","Home","deckToEdit1","to","sort","a","b","useAuth","username","email","password","newPassword","avatarUrl","userData","setUserData","setError","status","setStatus","login","setLogin","signup","setSignup","logout","setLogout","changeEmail","setChangeEmail","changePassword","setChangePassword","deleteAccount","setDeleteAccount","signInWithEmailAndPassword","userCredential","_user","createUserWithEmailAndPassword","updateProfile","displayName","signOut","removeItem","code","credential","EmailAuthProvider","currentUser","reauthenticateWithCredential","updateEmail","photoURL","updatePassword","handleLogin","handleSignup","handleLogout","handleChangeEmail","handleChangePassword","handleDeleteAccount","resetStatus","Login","errorMessage","setErrorMessage","inputs","setInputs","handleChange","e","faEnvelope","borderColor","borderWidth","Logout","ChangePassword","DeleteAccount","UpdateProfile","onBack","faUser","MyAccount","photoUrl","loading","exact","Navlinks","closeMenu","userName","firstChar","setFirstChar","bgColor","setBgColor","getRandomColor","charAt","toUpperCase","toString","Nav","isMenuOpen","mobile","onSearch","navClasses","setNavClasses","btnClasses","location","useLocation","searchText","setSearchText","pathname","Signup","App","selectedDecks","setIsMenuOpen","decksData","setDecksData","saveDecksData","setSaveDecksData","allDecksData","setAllDecksData","isSearching","setIsSearching","handleButtons","options","positions","MIDDLE","timeout","offset","transitions","SCALE","Root","StrictMode","template","AlertTemplate","render","getElementById"],"mappings":"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","file":"static/js/main.7aa0d21d.chunk.js","sourcesContent":["/**\n * Initialize firebase authentication and firestore.\n */\n\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyB25ZqbIrDuXWUokLFcsbltpjUf5pjhb-w\",\n  authDomain: \"flashcardapp-d3306.firebaseapp.com\",\n  databaseURL: \"https://flashcardapp-d3306.firebaseio.com\",\n  projectId: \"flashcardapp-d3306\",\n  storageBucket: \"flashcardapp-d3306.appspot.com\",\n  messagingSenderId: \"635798969664\",\n  appId: \"1:635798969664:web:562fb322eeb9d31667eea5\",\n  measurementId: \"G-XSQ0TX77TY\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth=firebase.auth();\nexport const db=firebase.firestore();\nexport const fb=firebase;\nexport const storage=firebase.storage();\n\nexport default { firebaseConfig }","/**\n * Context Provider for the current user.\n */\n\nimport React, {useState, useEffect} from 'react';\nimport { auth } from '../firebase/firebaseIndex';\n\nexport const firebaseAuth = React.createContext();\n\nconst AuthProvider = (props) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsub = auth.onAuthStateChanged((user) => {\n      user ? setUser(user) : setUser(null);\n    });\n\n    return () => unsub();\n  });\n\n  return (\n    <firebaseAuth.Provider\n      value={{\n        user\n      }}\n    >\n      {props.children}\n    </firebaseAuth.Provider>\n  )\n}\n\nexport default AuthProvider;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnDecksSnapshot = (user) => {\n  const db = firebase.firestore();\n  const [decks, setDecks] = useState([]);\n\n  // Get decks from collection where owner is the current user.\n  useEffect(() => {\n    if (!user) {\n      setDecks([]);\n      return;\n    }\n\n    let ref = db.collection('decks');\n    let unsubscribe = ref.where(\"owner\", \"==\", user.uid).onSnapshot((snapshot) => {\n      let arr = [];\n      snapshot.forEach(deck => arr.push(deck.data()));\n      setDecks(arr);\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, [user]);\n\n  return { decks };\n}\n\nexport default useOnDecksSnapshot;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnSavedDecksSnapshot = (user) => {\n    const db = firebase.firestore();\n    const [saveDecks, setDecks] = useState([]);\n    useEffect(() => {\n      if (!user) {\n        setDecks([]);\n        return;\n      }\n\n      let unsubscribe = db.collection('users').doc(user.uid).onSnapshot((snapshot) => {\n        let arr = [];\n        snapshot.data().save_decks?.forEach(deck => arr.push(deck));\n        setDecks(arr)\n        localStorage.setItem('save_decks', JSON.stringify(arr))\n      }, error => console.log(\"Error: \", error.message))\n      return () => unsubscribe();\n    }, [user]);\n    return { saveDecks };\n  }\n\n  export default useOnSavedDecksSnapshot;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnAllDecksSnapshot = () => {\n  const db = firebase.firestore();\n  const [allDecks, setDecks] = useState([]);\n\n  useEffect(() => {\n    let ref = db.collection('decks');\n    let unsubscribe = ref.where(\"isPublic\", \"==\", true).onSnapshot((snapshot) => {\n      let arr = [];\n      snapshot.forEach(deck => arr.push(deck.data()));\n      setDecks(arr);\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, []);\n\n  return { allDecks };\n}\n\nexport default useOnAllDecksSnapshot;","/**\n * A modular carousel component with wrap-around and transitions.\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\n\n/* If WRAP_BUFFER is too short, wrap-around transitions\n   will be set too soon. */\nconst WRAP_BUFFER = 50;\n\nconst Carousel = ({\n  leftButtonText=\"<\",\n  rightButtonText=\">\",\n  animTime=.5,\n  items,\n  previousCallback,\n  nextCallback,\n  showButtons=true\n}) => {\n  const [index, setIndex] = useState(0);\n  const [carouselItems, setCarouselItems] = useState([]);\n  const [canSlide, setCanSlide] = useState(true);\n  const carousel = useRef(null);\n\n  // Generates the carousel items, with a cloned copy of the first and last\n  // item at the beginning and end, respectively. This facilitates\n  // smooth wrap-around transitions.\n  useEffect(() => {\n    let modifiedItems = items.map((ele) => {\n      return (\n        <div \n          className=\"carousel__item\"\n          key={ele.key}\n        >\n          {ele}\n        </div>\n      );\n    });\n\n    setCarouselItems(modifiedItems);\n  }, [items]);\n\n  const handleClick = (event) => {\n    if (!canSlide) return;\n    if (event.target.name === \"right\") {\n      if (index == carouselItems.length - 1) { return }\n      setIndex(idx => idx + 1);\n      if (nextCallback !== undefined) {\n        nextCallback(index-1);\n      }\n    } else if (event.target.name === \"left\") {\n      if (index == 0) { return }\n      setIndex(idx => idx - 1);\n      if (previousCallback !== undefined) {\n        previousCallback(index-1);\n      }\n    }\n    setCanSlide(false);\n    setTimeout(() => setCanSlide(true), animTime * 1000 + WRAP_BUFFER);\n  }\n\n  return (\n    <div className=\"carousel\">\n      <div \n        ref={carousel}\n        className=\"carousel__inner\"\n        style={{ \n          marginLeft: \"calc(-100% * \" + index + \")\",\n          width: (carouselItems.length * 100) + \"%\",\n          transition: \"margin \" + animTime + \"s\",\n       }}\n      >\n        {carouselItems}\n      </div>\n      <div className=\"spacer\"></div>\n      {showButtons &&\n        <>\n          {index > 0 && <button \n            className=\"btn-carousel left\"\n            onClick={(event) => handleClick(event)}\n            name=\"left\"\n            disabled={!canSlide}\n          >{leftButtonText}</button>}\n          {index < carouselItems.length - 1 && <button \n            className=\"btn-carousel right\"\n            onClick={(event) => handleClick(event)}\n            name=\"right\"\n            disabled={!canSlide}\n          >{rightButtonText}</button>}\n        </>\n      }\n    </div>\n  );\n}\n\nexport default Carousel;","/**\n * Displays a header with a title and optional child elements.\n */\n\nimport React from 'react';\n\nconst Header = ({\n  title,\n  children\n}) => {\n  return (\n    <header className=\"card-header\">\n      <p>\n        {title}\n      </p>\n      <div>\n        {children}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","/**\n * Displays a simple p tag.\n */\n\nimport React from 'react';\n\nconst CardContent = ({\n  text,\n  imageUrl,\n}) => {\n  return (\n    <>\n      {imageUrl && <div>\n        <img alt=\"not fount\" height={\"250px\"} src={imageUrl} />\n        <br />\n      </div>}\n      <p className=\"content\">\n        {text}\n      </p>\n    </>\n  );\n}\n\nexport default CardContent;","/**\n * Displays a flash card and its content.\n */\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReply, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport Header from '../Header';\nimport CardContent from './CardContent';\nimport { storage } from '../../firebase/firebaseIndex';\n\nconst FlippableCard = ({\n  onClick,\n  frontTitle,\n  backTitle,\n  frontText,\n  backText,\n  isFlipped,\n  setIsFlipped,\n  imageRef,\n}) => {\n  const header = (\n    <Header title={frontTitle}>\n      <button \n        className=\"btn btn-icon-small\"\n        name=\"exit\"\n        onClick={onClick}\n      >\n        <FontAwesomeIcon icon={faTimes} />&nbsp;Close\n      </button>\n    </Header>\n  );\n\n  const backHeader = React.cloneElement(header, { title: backTitle });\n\n  const footer = (\n    <footer>\n      <button \n        className=\"curl\"\n        name=\"toggle\"\n        onClick={ () => setIsFlipped(prev => !prev) }\n      >    \n        <FontAwesomeIcon icon={faReply} size=\"2x\" className=\"icon\" />\n      </button>\n    </footer>\n  );\n\n  const [imageUrl, setImageUrl] = useState(null);\n\n  useState(() => {\n    if (imageRef) {\n      console.log(imageRef);\n      storage.ref(imageRef).getDownloadURL().then((downloadURL) => {\n          setImageUrl(downloadURL)\n      });\n  }\n  },[imageRef])\n \n  return (\n    <div className={isFlipped ? \"flippable flipped\" : \"flippable\"}>\n      <div className=\"flippable__inner\">\n        <div className=\"flippable__content front\">\n          {header}\n            <CardContent text={frontText} imageUrl={imageUrl} />\n          {footer}\n        </div>\n        <div className=\"flippable__content back\">\n          {backHeader}\n            <CardContent text={backText} />\n          {footer}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FlippableCard;","/**\n * A simple loading icon.\n */\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nconst Spinner = ({\n  size=\"1x\"\n}) => {\n  return <FontAwesomeIcon icon={faSpinner} size={size} className=\"spinner\"/>\n}\n\nexport default Spinner;","/**\n * Handles logic for getting the selected deck and cards.\n * Generates FlippableCards for each card to be shown, and \n * renders them in a Carousel.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport firebase from 'firebase';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Carousel from '../Carousel';\nimport FlippableCard from './FlippableCard';\nimport Spinner from '../Spinner';\nimport { faRandom, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { useAlert } from 'react-alert';\n\nconst Deck = ({\n  onClick,\n}) => {\n  const [cards, setCards] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [hashCards, setHashCards] = useState(null);\n  const [isCardFlipped, setIsCardFlipped] = useState(false);\n  const [canView, setCanView] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const { hash } = useParams();\n  const [shuffle, setShuffle] = useState(0);\n  const [cardShuffle, setCardShuffle] = useState([]);\n  const history = useHistory();\n  const alert = useAlert()\n\n  useEffect(() => {\n    setIsLoaded(false);\n    setHashCards(null);\n    setCards(null);\n\n    console.log(hash)\n    if (hash === undefined) return;\n\n    const db = firebase.firestore();\n\n    db.collection('decks').doc(hash).get()\n      .then(snapshot => {\n        setIsLoaded(true);\n      })\n      .catch(error => {\n        setIsLoaded(true);\n        console.log(\"Error: \", error.message)\n      })\n\n    let ref = db.collection('decks').doc(hash);\n    ref.get()\n      .then(snapshot => {\n        let arr = [];\n        snapshot.data().cards?.forEach(item => arr.push(item));\n        setHashCards(arr);\n        setTitle(snapshot.data().title)\n        setDescription(snapshot.data().description)\n      })\n      .catch(error => console.log(\"Error: \", error.message))\n  }, [hash]);\n\n  useEffect(() => {\n    setIsLoaded(false);\n    let _cards = [];\n\n    if (hashCards != null) {\n      _cards = hashCards;\n    } else {\n      _cards = [];\n    }\n\n    if (_cards.length > 0) {\n      setCards(_cards.map((ele) => {\n        return (\n          <FlippableCard\n            key={ele.id}\n            frontTitle=\"Front\"\n            backTitle=\"Back\"\n            frontText={ele.front}\n            backText={ele.back}\n            onClick={onClick}\n            isFlipped={isCardFlipped}\n            setIsFlipped={setIsCardFlipped}\n            imageRef={ele.imageRef}\n          />\n        )\n      }));\n      setCardShuffle(_cards.map((ele) => {\n        return (\n          <FlippableCard\n            key={ele.id}\n            frontTitle=\"Front\"\n            backTitle=\"Back\"\n            frontText={ele.front}\n            backText={ele.back}\n            onClick={onClick}\n            isFlipped={isCardFlipped}\n            setIsFlipped={setIsCardFlipped}\n            imageRef={ele.imageRef}\n          />\n        )\n      }));\n      setIsLoaded(true);\n    }\n\n  }, [isCardFlipped, onClick, hashCards]\n  );\n\n  if (!isLoaded) return (\n    <main>\n      <div className=\"container center\">\n        <Spinner />\n      </div>\n    </main>\n  );\n\n  if (!cards) return (\n    <div className=\"container center\">\n      <p>We couldn't find this deck. :(</p>\n    </div>\n  )\n\n  if (!canView || cards.length === 0) return (\n    <div className=\"container center\">\n      <p>This deck is either private or has no cards! If you are the owner, you can view it and edit it from your dashboard.</p>\n    </div>\n  );\n\n  const slideCallback = () => {\n    setIsCardFlipped(false);\n  }\n\n  const shuffleCard = (array) => {\n    let currentIndex = array.length, randomIndex;\n\n    while (currentIndex != 0) {\n\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ width: 250, display: 'flex', flexDirection: 'column', justifyContent: 'flex-end', alignItems: 'center', backgroundColor: '#DADCE2' }}>\n        <div style={{\n          position: 'absolute',\n          top: 100\n        }}>\n          {title}\n          <br/>\n          <br/>\n          <br/>\n          \n          <div style={{maxWidth: 200}}>\n            {\"説明: \"}\n            <text style={{fontWeight: '500', display: '-webkit-box', wordBreak: 'break-word'}}>{description}</text>\n          </div>\n        </div>\n        <div style={{\n          background: shuffle == 0 ? 'wheat' : 'green',\n          height: 30,\n          width: 100,\n          textAlign: 'center',\n          zIndex: 1,\n          color: shuffle == 0 ? 'black' : 'white',\n          lineHeight: 2,\n          verticalAlign: 'center',\n          borderRadius: 15,\n        }} onClick={(event) => {\n          setShuffle(0)\n        }}>ソート済み</div>\n        <div style={{\n          background: shuffle != 0 ? 'wheat' : 'green',\n          height: 30,\n          width: 100,\n          textAlign: 'center',\n          zIndex: 1,\n          color: shuffle != 0 ? 'black' : 'white',\n          marginTop: 50,\n          marginBottom: 100,\n          lineHeight: 2,\n          verticalAlign: 'center',\n          borderRadius: 15,\n        }} onClick={(event) => {\n          setCardShuffle(shuffleCard(cardShuffle))\n          setShuffle(prev => prev + 1)\n        }}>ミックス</div>\n      </div>\n      <Carousel\n        items={shuffle != 0 ? cardShuffle : cards}\n        leftButtonText={<FontAwesomeIcon icon={faAngleLeft} />}\n        rightButtonText={<FontAwesomeIcon icon={faAngleRight} />}\n        animTime={.3}\n        previousCallback={slideCallback}\n        nextCallback={slideCallback}\n        showButtons={true}\n      />\n      <div style={{ width: 250, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', backgroundColor: '#DADCE2' }}>\n        <button\n          onClick={() => {\n            if (cards.length >= 4) {\n              history.push('/app/test/'+hash)\n            } else {\n              alert.show('テストを作成するには、セットに少なくとも4枚のカードが必要です')\n            }\n          }}\n          style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30 }}\n        >\n          <><FontAwesomeIcon icon={faPlus} style={{ marginRight: 5 }} /> 復習</>\n        </button>\n        <button\n          onClick={() => {\n            history.push('/app/test-match/'+hash)\n          }}\n          style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30 }}\n        >\n          <><FontAwesomeIcon icon={faPlus} style={{ marginRight: 5 }} />マッチング</>\n        </button>\n        <button\n          onClick={() => {\n            alert.show('機能は開発中です')\n          }}\n          style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30 }}\n        >\n          <><FontAwesomeIcon icon={faPlus} style={{ marginRight: 5 }} /> 履歴</>\n        </button>\n      </div>\n    </div>\n\n  );\n}\n\nexport default Deck;","/**\n * Methods for accessing the firestore database:\n *\n * createDeck\n * deleteDeck\n * updateDeck\n * createCard\n * updateCard\n * deleteCard\n */\n\nimport { db } from \"./firebaseIndex\";\nimport firebase from \"firebase\";\n\nexport const dbMethods = {\n  createDeck: (user, title, description, cards, isPublic = true, saveCount) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const document = db.collection(\"decks\").doc();\n\n    const newDeck = {\n      id: document.id,\n      numCards: cards.length,\n      title,\n      description,\n      owner: user.uid,\n      cards: cards,\n      isPublic: isPublic,\n      saveCount: saveCount\n    };\n\n    document\n      .set(newDeck)\n      .then(console.log(\"Created new deck.\"))\n      .catch((err) => {\n        console.error(\"Error creating deck: \", err.message);\n      });\n  },\n\n  deleteDeck: (user, deckId) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    db.collection(\"decks\")\n      .doc(deckId)\n      .delete()\n      .then(console.log(\"Deck successfully deleted.\"))\n      .catch((err) => {\n        console.error(\"Error deleting deck: \", err.message);\n      });\n  },\n\n  saveDeck: (user, deck) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n    return db\n      .collection(\"users\")\n      .doc(user.uid)\n      .update({\n        save_decks: firebase.firestore.FieldValue.arrayUnion(deck),\n      })\n      .then(() => {\n        db.collection(\"decks\")\n          .doc(deck.id)\n          .update({\n            saveCount: firebase.firestore.FieldValue.increment(1)\n          })\n          .then(() => {\n            console.log(\"Updated save count number of deck with id: \", deck.id);\n          })\n          .catch((err) => {\n            console.error(\"Error updating document: \", err.message);\n          });\n        console.log(\"Updated deck with id: \", deck.id);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n\n  unsaveDeck: (user, deck) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n    return db\n      .collection(\"users\")\n      .doc(user.uid)\n      .update({\n        save_decks: firebase.firestore.FieldValue.arrayRemove({\n          id: deck.id,\n          numCards: deck.numCards,\n          owner: deck.owner,\n          title: deck.title,\n          description: deck.description,\n          cards: deck.cards,\n          isPublic: deck.isPublic,\n        }),\n      })\n      .then(() => {\n        let ref = db\n          .collection(\"decks\")\n          .doc(deck.id)\n          .get()\n          .then((doc) => {\n            if (doc.data().saveCount > 0) {\n              db.collection(\"decks\")\n                .doc(deck.id)\n                .update({\n                  saveCount: firebase.firestore.FieldValue.increment(-1),\n                })\n                .then(() => {\n                  console.log(\n                    \"Updated save count number of deck with id: \",\n                    deck.id\n                  );\n                })\n                .catch((err) => {\n                  console.error(\"Error updating document: \", err.message);\n                });\n            } else {\n              db.collection(\"decks\")\n                .doc(deck.id)\n                .update({\n                  saveCount: 0,\n                })\n                .then(() => {\n                  console.log(\n                    \"Updated save count number of deck with id: \",\n                    deck.id\n                  );\n                })\n                .catch((err) => {\n                  console.error(\"Error updating document: \", err.message);\n                });\n            }\n          })\n          .catch((err) => {\n            console.error(\"Error getting document data: \", err.message);\n          });\n        console.log(\"Updated deck with id: \", deck.id);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n\n  updateDeck: (user, deckId, title, description, cards, isPublic = true) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const updatedDeck = {\n      title,\n      description,\n      cards,\n      numCards: cards.length,\n      isPublic: isPublic,\n    };\n\n    return db\n      .collection(\"decks\")\n      .doc(deckId)\n      .update(updatedDeck)\n      .then(() => {\n        console.log(\"Updated deck with id: \", deckId);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n};\n","/**\n * Displays a text or password input, dependinding on \n * the type prop. The password input can toggle between\n * password and text types.\n */\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash, faLock } from '@fortawesome/free-solid-svg-icons';\n\nconst TextInput = ({\n  labelText,\n  icon=null,\n  type=\"text\",\n  id=\"\",\n  name=\"\",\n  placeholder=\"\",\n  value,\n  onChange,\n  autocomplete=\"on\"\n}) => {\n  const [isHidden, setIsHidden] = useState(true);\n\n  const toggleHidden = (event) => {\n    event.preventDefault();\n    setIsHidden(prev => !prev);\n  }\n\n  if (icon === null && type===\"password\")\n    icon = <FontAwesomeIcon icon={faLock} />\n\n  return (\n    <div className=\"input-block\">\n      <label htmlFor={id}>{labelText}</label>\n      <div className=\"input-row\">\n        {icon}\n        <input \n          type={type === \"password\" ? isHidden ? \"password\" : \"text\" : type}\n          name={name}\n          id={id}\n          value={value}\n          onChange={onChange}\n          style={{outline: \"none\"}}\n          autoComplete={autocomplete}\n        >\n        </input>\n        {type === \"password\" &&\n          <button\n            type=\"button\"\n            className=\"btn btn-icon\"\n            onClick={toggleHidden}\n          >\n            {isHidden ?\n              <FontAwesomeIcon icon={faEye} />\n            :\n              <FontAwesomeIcon icon={faEyeSlash} />\n            }\n          </button>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default TextInput;","/**\n * Displays a heading with a subtitle.\n */\n\nimport React from 'react';\n\nconst PageHeading = ({\n  title,\n  styles = {textAlign: 'center'}\n}) => {\n  let titleElement = null;\n  titleElement=<h1 style={styles}>{title}</h1>\n\n  return (\n    <header className=\"page-heading\">\n      {titleElement}\n    </header>\n  )\n}\n\nexport default PageHeading;","import React, { useContext, useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { storage } from \"../../firebase/firebaseIndex\";\nimport { firebaseAuth } from \"../../provider/AuthProvider\";\n\nconst UploadAndDisplayImage = ({\n    onSetImage,\n    imageRef\n}) => {\n    const [image, setImage] = useState(null);\n    const [filePath, setFilePath] = useState(imageRef);\n    const { user } = useContext(firebaseAuth);\n    const alert = useAlert()\n\n    useEffect(() => {\n        if (imageRef) {\n            storage.ref(imageRef).getDownloadURL().then((downloadURL) => {\n                setImage(downloadURL)\n            });\n            setFilePath(imageRef)\n        }\n    }, [imageRef]);\n\n    return (\n        <div style={{paddingBottom: 20}}>\n            {filePath && (\n                <div>\n                    <img alt=\"not fount\" width={\"250px\"} src={image} />\n                    <br />\n                    <button onClick={() => {\n                        const deleteTask = storage.ref(filePath).delete();\n                        deleteTask.then(() => {\n                            alert.show('ファイルが正常に削除されました');\n                            setFilePath(null)\n                            onSetImage(null)\n                        }).catch((error) => {\n                        });\n                    }}>削除する</button>\n                </div>\n            )}\n            <br />\n\n            <br />\n            {filePath == null && \n            <input\n            type=\"file\"\n            name=\"myImage\"\n            onChange={(event) => {\n                \n                const uploadTask = storage.ref(`${user.uid}/${event.target.files[0].name}`).put(event.target.files[0]);\n                uploadTask.on('state_changed',\n                    (snapshot) => {\n                        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                        console.log('Upload is ' + progress + '% done');\n                        switch (snapshot.state) {\n                            case 'paused':\n                                console.log('Upload is paused');\n                                break;\n                            case 'running':\n                                console.log('Upload is running');\n                                break;\n                        }\n                    },\n                    (error) => {\n                    },\n                    () => {\n                        storage.ref(`${user.uid}`).child(event.target.files[0].name).getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                            alert.show(\"ファイルが正常にアップロードされました\")\n                            onSetImage(`${user.uid}/${event.target.files[0].name}`);\n                            setImage(downloadURL)\n                            setFilePath(`${user.uid}/${event.target.files[0].name}`)\n                        });\n                    }\n                );\n            }}\n        />\n            }\n        </div>\n    );\n};\n\nexport default UploadAndDisplayImage;","/**\n * Handles displaying each card editor.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport UploadAndDisplayImage from './UploadAndDisplayImage';\n\nconst CardEditor = ({\n  index,\n  card,\n  onSubmit,\n  onUpdate,\n  onDelete\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    setFront(card.front);\n    setBack(card.back);\n    setImage(card.imageRef);\n  }, [card])\n\n  const handleInput = (event) => {\n    if (event.target.name === \"front\") {\n      setFront(event.target.value);\n    } else if (event.target.name === \"back\") {\n      setBack(event.target.value);\n    }\n  }\n\n  const updateCard = (event) => {\n    event.preventDefault();\n    if (front.length <= 0 || image == null) {\n      return;\n    }\n    if (back.length <=0 ) {\n      return;\n    }\n    console.log(\"Card to update: \", card.id);\n    onUpdate(index, front, back, image)\n    onSubmit();\n  }\n\n  const deleteCard = (event) => {\n    event.preventDefault();\n    onDelete(index)\n  }\n\n  return (\n    <form className=\"card-editor\" onSubmit={updateCard}>\n      <div className=\"input-block\">\n        <textarea\n          name=\"front\"\n          id={card.id + \"-front\"}\n          value={front}\n          onChange={handleInput}\n        />\n        <label htmlFor={card.id + \"-front\"}>Front</label>\n      </div>\n      <div className=\"input-block\">\n        <textarea\n          name=\"back\"\n          id={card.id + \"-back\"}\n          value={back}\n          onChange={handleInput}\n        />\n        <label htmlFor={card.id + \"-back\"}>Back</label>\n      </div>\n      <UploadAndDisplayImage onSetImage={(image)=>{\n        setImage(image);\n      }} imageRef={image}/>\n      <button className=\"btn\">Update</button>\n      <button className=\"btn btn-warning\"\n        onClick={deleteCard}\n      >\n        <FontAwesomeIcon icon={faTrash} /> Delete card\n      </button>\n    </form>\n  );\n}\n\nexport default CardEditor;","/**\n * Renders the toggleable card creator box.\n */\n\nimport React, { useState } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport UploadAndDisplayImage from './UploadAndDisplayImage';\n\nconst CardCreator = ({\n  onCreateCard\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  const handleInput = (event) => {\n    if (event.target.name === \"front\") {\n      setFront(event.target.value);\n    } else if (event.target.name === \"back\") {\n      setBack(event.target.value);\n    }\n  }\n\n  const createCard = (event) => {\n    event.preventDefault();\n    if (front.length <= 0 && image == null) {\n      return;\n    }\n    if (back.length <=0 ) {\n      return;\n    }\n    console.log(\"Creating new card.\");\n    onCreateCard(front, back, image);\n    setFront(\"\");\n    setBack(\"\");\n    setImage(null);\n    setIsOpen(false);\n  }\n\n  if (!isOpen) return (\n    <button className=\"btn btn-tertiary\"\n      onClick={() => setIsOpen(true)}\n    >\n      Add card <FontAwesomeIcon icon={faPlus} className=\"icon\" />\n    </button>\n  );\n\n  return (\n    <>\n      <button id=\"add\" className=\"btn btn-tertiary highlighted\"\n        onClick={() => setIsOpen(false)}\n      >\n        Add card <FontAwesomeIcon icon={faMinus} className=\"icon\"/>\n      </button>\n      <form className=\"card-editor\" onSubmit={createCard}>\n        <div className=\"input-block\">\n          <textarea\n            name=\"front\"\n            id=\"new-front\"\n            value={front}\n            onChange={handleInput}\n          />\n          <label htmlFor=\"new-front\">Front</label>\n        </div>\n        <div className=\"input-block\">\n          <textarea\n            name=\"back\"\n            id=\"new-back\"\n            value={back}\n            onChange={handleInput}\n            style={{outline: \"none\"}}\n          />        \n          <label htmlFor=\"new-back\">Back</label>\n        </div>\n        <UploadAndDisplayImage onSetImage={(image)=>{\n            setImage(image);\n        }} imageRef={image}/>\n        <button className=\"btn\">Create</button>\n      </form>\n    </>\n  );\n}\n\nexport default CardCreator;","/**\n * Generates and displays all the toggleable card editor boxes\n * in an accordion.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\n\nimport CardEditor from './decks-and-cards/CardEditor';\nimport CardCreator from './decks-and-cards/CardCreator';\n\nconst Accordion = ({\n  listCards,\n  onCards,\n}) => {\n  const [cards, setCards] = useState(listCards || []);\n  const [card, setCard] = useState(-1);\n  const [cardEditorElements, setCardEditorElements] = useState([]);\n\n  const handleClick = (event) => {\n    console.log(event.target.value)\n    setCard(prev => prev === event.target.value ? -1 : event.target.value);\n  }\n\n  const onCreateCard = (front, back, imageRef) => {\n    let newCard = {front: front, back: back, imageRef: imageRef}\n    console.log(28888, newCard);\n    cards.push(newCard)\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  const onDeleteCard = (index) => {\n    cards.splice(index, 1);\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  const onUpdateCard = (index, front, back, imageRef) => {\n    cards[index] = {front: front, back: back, imageRef: imageRef};\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  useEffect(() => {\n    setCards(listCards)\n  },[listCards])\n\n  useEffect(() => {\n    updateElements()\n  }, [card, cards]);\n\n  const updateElements = () => {\n    const elements = cards.map( (ele, index) => {\n      let classes = index === card ? \"btn btn-tertiary highlighted\" : \"btn btn-tertiary\";\n      console.log(index)\n      console.log(ele);\n      return (\n        <React.Fragment key={index} >\n          <button \n            className={classes}\n            value={index}\n            onClick={handleClick}\n          >\n            <span className=\"truncate\">\"{ele.front}\"</span> \n            {card === `${index}` ?\n              <FontAwesomeIcon icon={faAngleUp} />\n            :\n              <FontAwesomeIcon icon={faAngleDown} />\n            }\n          </button>\n          {card === `${index}` && \n            <CardEditor\n              index={index}\n              card={ele}\n              onSubmit={() => setCard(\"\")}\n              onDelete={onDeleteCard}\n              onUpdate={onUpdateCard}\n            />\n          }\n        </React.Fragment>\n      )\n    })\n\n    setCardEditorElements(elements);\n  }\n\n  return (\n    <>\n      {cardEditorElements}\n      <CardCreator\n        onCreateCard={onCreateCard}\n      />\n    </>\n  );\n}\n\nexport default Accordion;","/**\n * Handles the creation of new decks.\n */\n\nimport React, { useState, useContext } from 'react';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { useHistory } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook, faPaperclip } from '@fortawesome/free-solid-svg-icons';\n\nimport TextInput from '../TextInput';\nimport PageHeading from '../PageHeading';\nimport Accordion from '../Accordion';\nimport { useAlert } from 'react-alert';\n\nconst DeckCreator = () => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n  const [listCards, setListCards] = useState([]);\n  const [isPublic, setIsPublic] = useState(true);\n  const [saveCount, setSaveCount] = useState(0);\n  const alert = useAlert()\n\n  const checkReadyToCreate = (event) => {\n    event.preventDefault();\n    if(listCards.length == 0) alert.show(\"フラッシュカードセットを初期化するには、少なくとも1枚のカードが必要です！\");\n    else if (title.length <= 0) alert.show(\"フラッシュカードセットを初期化するには、セットのタイトルを入力する必要があります！\");\n    else if (description.length <= 0) alert.show(\"フラッシュカードセットを初期化するには、セットの説明を入力する必要があります！\");\n    else createDeck();\n  }\n\n  const createDeck = () => {\n    dbMethods.createDeck(user, title, description, listCards, isPublic, saveCount);\n    setUpdateSuccess(true);\n    history.push(\"/app\");\n  }\n\n  const onUpdateCards = (cards) => {\n    setListCards(cards)\n  }\n\n  const onUpdateDecks = (event) => {\n    createDeck();\n  }\n\n  return (\n    <div style={{textAlign: 'left'}}>\n      <form \n      id=\"new-deck\" \n      onSubmit={checkReadyToCreate}\n    >\n      <TextInput \n        labelText=\"題名\"\n        icon={<FontAwesomeIcon icon={faPaperclip} />}\n        id=\"title\"\n        name=\"title\"\n        value={title}\n        onChange={(event) => setTitle(event.target.value)}\n        autocomplete=\"off\"\n      />\n      <TextInput \n        labelText=\"説明\"\n        icon={<FontAwesomeIcon icon={faBook} />}\n        id=\"description\"\n        name=\"description\"\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n        autocomplete=\"off\"\n      />\n      <p>\n        <span></span>\n        パブリックシェアリング？ デフォルト：パブリック。\n      </p>\n      \n      <input\n        id=\"public-true\"\n        name=\"public\"\n        type=\"radio\"\n        value=\"はい\"\n        checked={isPublic ? true : false}\n        onChange={() => setIsPublic(true)}\n        style={{marginRight: '10px'}}\n      />\n      <span onClick={() => setIsPublic(true)}>パブリック</span>\n      <br></br>\n      <input\n        id=\"public-false\"\n        name=\"public\"\n        type=\"radio\"\n        value=\"いいえ\"\n        checked={isPublic ? false : true}\n        onChange={() => setIsPublic(false)}\n        style={{marginRight: '10px'}}\n      />\n      <span onClick={() => setIsPublic(false)}>プライベート</span>\n    </form>\n      <div>\n        <PageHeading \n          title=\"カード\"\n          styles={{textAlign: 'left'}}\n        />\n        <Accordion\n          listCards={listCards}\n          onCards={onUpdateCards}\n        />\n      </div>\n      <button className=\"btn btn-primary\" onClick={checkReadyToCreate}>\n          {updateSuccess ? \"Success!\" : \"作成\" }\n      </button>\n    </div>\n  );\n}\n\nexport default DeckCreator;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { useHistory } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook, faHeading, faPaperclip } from '@fortawesome/free-solid-svg-icons';\n\nimport Accordion from '../Accordion';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\nimport firebase from 'firebase';\nimport { useAlert } from 'react-alert';\n\nconst DeckEditor = ({\n  deckToEdit,\n  setDeckToEdit,\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n  const localDeck = JSON.parse(localStorage.getItem('deck'))\n  const deck = deckToEdit || localDeck;\n  const [title, setTitle] = useState(deck.title);\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n  const [description, setDescription] = useState(deck.description);\n  const [listCards, setListCards] = useState([])\n  console.log(deck);\n  const [isPublic, setIsPublic] = useState(deck.isPublic ?? true);\n  const alert = useAlert()\n\n  const checkReadyToUpdate = () => {\n    if(listCards.length == 0) alert.show(\"フラッシュカードセットを初期化するには、少なくとも1枚のカードが必要です！\");\n    else if (title.length <= 0) alert.show(\"フラッシュカードセットを初期化するには、セットのタイトルを入力する必要があります！\");\n    else if (description.length <= 0) alert.show(\"フラッシュカードセットを初期化するには、セットの説明を入力する必要があります！\");\n    else updateDeck();\n  }\n\n  const updateDeck = () => {\n    dbMethods.updateDeck(user, deck.id, title, description, listCards, isPublic)\n    setDeckToEdit({...deckToEdit, title});\n    setUpdateSuccess(true);\n    setTimeout(() => setUpdateSuccess(false), 3000);\n  }\n\n  const deleteDeck = (event) => {\n    event.preventDefault();\n    dbMethods.deleteDeck(user, deck.id);\n    history.push('/app');\n    setDeckToEdit(null);\n  }\n\n  const db = firebase.firestore();\n\n  useEffect(() => {\n    if (!deck) {\n      return\n    }\n    console.log(deck)\n    let ref = db.collection('decks').doc(deck.id);\n    ref.get()\n      .then(snapshot => {\n        let arr = [];\n        snapshot.data().cards?.forEach(item => arr.push(item));\n        setListCards(arr);\n      })\n      .catch(error => console.log(\"Error: \", error.message))\n  }, [])\n\n  const onUpdateCards = (cards) => {\n    setListCards(cards)\n  }\n\n  const onUpdateDecks = (event) => {\n    updateDeck();\n  }\n\n  return (\n    <div style={{textAlign: 'left'}}>\n      <PageHeading\n        title=\"セットを編集する\"\n        styles={{textAlign: 'left'}}\n      />\n      <form onSubmit={checkReadyToUpdate}>\n        <TextInput \n          labelText=\"題名\"\n          icon={<FontAwesomeIcon icon={faPaperclip} />}\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          placeholder=\"New Deck\"\n          autocomplete=\"off\"\n        />\n        <TextInput \n        labelText=\"説明\"\n        icon={<FontAwesomeIcon icon={faBook} />}\n        id=\"description\"\n        name=\"description\"\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n        autocomplete=\"off\"\n        />\n        <p>\n        <span></span>\n        パブリックシェアリング？ デフォルト：パブリック。\n      </p>\n      \n      <input\n        id=\"public-true\"\n        name=\"public\"\n        type=\"radio\"\n        value=\"はい\"\n        checked={isPublic ? true : false}\n        onChange={() => setIsPublic(true)}\n        style={{marginRight: '10px'}}\n      />\n      <span onClick={() => setIsPublic(true)}>パブリック</span>\n      <br></br>\n      <input\n        id=\"public-false\"\n        name=\"public\"\n        type=\"radio\"\n        value=\"いいえ\"\n        checked={isPublic ? false : true}\n        onChange={() => setIsPublic(false)}\n        style={{marginRight: '10px'}}\n      />\n      <span onClick={() => setIsPublic(false)}>プライベート</span>\n      </form>\n      <div>\n        <PageHeading \n          title=\"カード\"\n          styles={{textAlign: 'left'}}\n        />\n        <Accordion\n          listCards={listCards}\n          onCards={onUpdateCards}\n        />\n      </div>\n      <button\n          className=\"btn btn-primary\"\n          onClick={checkReadyToUpdate}\n        >\n          {updateSuccess ? \"Success!\" : \"編集\" }\n        </button>\n      <div>\n        <PageHeading \n          title=\"デッキを削除する\"\n          styles={{textAlign: 'left'}}\n        />\n        <form onSubmit={deleteDeck}>\n          <button\n            className=\"btn btn-warning\"\n          >削除する</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default DeckEditor;","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faSave, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { db } from '../../firebase/firebaseIndex';\n\nconst SelectableDeck = ({\n  toggleDeck,\n  setSelectedDecks,\n  length,\n  deck,\n  setDeckToEdit,\n  mine\n}) => {\n  const history = useHistory();\n  const {user} = useContext(firebaseAuth)\n  const [saved, setSaved] = useState(false);\n  const savedDecksRaw = localStorage.getItem('save_decks')\n\n  useEffect(() => {\n    setSaved(isSaved())\n  },[])\n\n  const isSaved = () => {\n    if (!savedDecksRaw || savedDecksRaw.length == 0) {\n      return false\n    }\n    let savedDecks = JSON.parse(savedDecksRaw)\n    if (!savedDecks || savedDecks.length == 0) {\n      return false\n    }\n    let filterArray = savedDecks.filter(item => item.id == deck.id)\n    return (filterArray && filterArray.length > 0)\n  }\n\n  return (\n    <li style={{background: '#EAB2AE', marginBottom: 20, borderRadius: 10}}\n      // className={selectedDecks?.includes(id) ? \"selected\" : \"\"}\n      // onClick={(event) => {\n      //   event.stopPropagation();\n      //   toggleDeck(id);\n      // }}\n      // role=\"checkbox\"\n      // aria-checked={selectedDecks?.includes(id) ? \"true\" : \"false\"}\n    >\n      <div\n        onClick={() => {\n          history.push('/app/d/'+deck.id)\n        }}\n      >\n        {/* <input\n          name={id}\n          type=\"checkbox\"\n          checked={selectedDecks?.includes(id)}\n          onChange={() => null}\n        /> */}\n        <label htmlFor=\"checkbox\" className=\"truncate\">\n          <span></span>\n          <strong>{deck.title}</strong> ({length} {\"カード\"})\n          \n        </label>\n      </div>\n      <div>\n      <span>説明:&nbsp;</span>\n      <div style={{maxWidth: 300}}>\n      <text style={{fontWeight: '500', display: '-webkit-box', wordBreak: 'break-word'}}>{deck.description}</text>\n        </div>\n      </div>\n      <div className=\"button-row\">\n        {mine ? <button \n          className=\"btn btn-icon\"\n          style={{color: 'black'}}\n          onClick={(event) => {\n            event.stopPropagation();\n            setDeckToEdit();\n            localStorage.setItem('deck', JSON.stringify(deck));\n            history.push(\"/app/edit\");\n          }}\n        >\n          <FontAwesomeIcon icon={faEdit} /> 編集する\n        </button>\n        : <button \n        className=\"btn btn-icon\"\n        style={{color: 'black'}}\n        onClick={(event) => {\n          event.stopPropagation();\n          if (saved) {\n            dbMethods.unsaveDeck(user, deck)\n            setSaved(false)\n          } else {\n            dbMethods.saveDeck(user, deck)\n            setSaved(true)\n          }\n        }}\n      >\n        <FontAwesomeIcon icon={saved ? faTrash : faSave} /> {saved ? \"削除する\" : \"保存する\"}\n      </button>\n        }\n      </div>\n    </li>\n  );\n}\n\nexport default SelectableDeck;","import React, { useState, useEffect, useContext } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport SelectableDeck from './SelectableDeck';\n\nfunction Items({ currentItems, user, setDeckToEdit}) {\n  return (\n    <React.Fragment>\n        {currentItems}\n    </React.Fragment>\n  );\n}\n\nfunction PaginatedItems({ itemsPerPage, decks, user, setDeckToEdit}) {\n  // We start with an empty list of items.\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    setCurrentItems(decks.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(decks.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage, decks]);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    const newOffset = event.selected * itemsPerPage % decks.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  return (\n    <>\n      <Items currentItems={currentItems} user={user} />\n      <ReactPaginate\n        nextLabel=\"次 ->\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={2}\n        pageCount={pageCount}\n        previousLabel=\"<- 前\"\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel=\"...\"\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n}\n\nconst DeckList = ({\n  decks,\n  setDeckToEdit,\n}) => {\n  const [deckList, setDeckList] = useState([]);\n  const { user } = useContext(firebaseAuth);\n\n  useEffect(() => {\n    if (!decks) {return}\n    setDeckList(decks.map(deck => {\n      return (\n        <SelectableDeck \n          key={deck.id}\n          length={deck.numCards}\n          deck={deck}\n          mine={user && deck.owner == user.uid}\n          setDeckToEdit={() => {\n            setDeckToEdit({ id: deck.id, title: deck.title, private: deck.private, description: deck.description, isPublic: deck.isPublic });\n          }}\n        />\n      );}\n    ));\n  }, [decks]);\n\n  useEffect(() => {\n  }, [deckList])\n\n  return (\n    <div className=\"deck-list\">\n      <ul>\n        {deckList.length > 0 ? \n          <PaginatedItems itemsPerPage={4} decks={deckList} user={user} setDeckToEdit={setDeckToEdit}/>\n        :\n          <p>セットがありません。 作成して開始してください！</p>\n        }\n      </ul>\n      \n    </div>\n  );\n}\n\nexport default DeckList;"," import React, { useState, useContext, useEffect } from 'react';\n import { Link, Switch, Route, useHistory } from 'react-router-dom';\n import { firebaseAuth } from '../provider/AuthProvider';\n  \n import DeckList from './decks-and-cards/DeckList';\n import PageHeading from './PageHeading';\n \n const SavedDecks = ({\n   saveDecks,\n }) => {\n   const { user } = useContext(firebaseAuth);\n   const history = useHistory();\n \n   if (!user) {\n     history.push(\"/log-in\");\n   }\n \n   return (\n     <div className=\"dashboard\">\n         <Switch>\n           <Route path=\"/app/saved\">\n             <div style={{ display: 'flex' }}>\n               <div style={{ width: '100%', margin: '0 auto', paddingRight: 30 }}>\n                 <PageHeading\n                   title=\"保存したセット\"\n                 />\n                 <div>\n                   <DeckList\n                     decks={saveDecks}\n                   />\n                 </div>\n               </div>\n             </div>\n           </Route>\n         </Switch>\n     </div>\n   );\n }\n \n export default SavedDecks;","/**\n * Displays the dashboard page.\n */\n\n import React, { useState, useContext, useEffect } from 'react';\n import { Link, Switch, Route, useHistory } from 'react-router-dom';\n import { firebaseAuth } from '../provider/AuthProvider';\n \n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n import { faPlus } from '@fortawesome/free-solid-svg-icons';\n \n import DeckCreator from './decks-and-cards/DeckCreator';\n import DeckEditor from './decks-and-cards/DeckEditor';\n import DeckList from './decks-and-cards/DeckList';\n import PageHeading from './PageHeading';\n \n const CreatedDecks = ({\n   decks,\n   cards,\n }) => {\n   const [deckToEdit, setDeckToEdit] = useState(null);\n   const { user } = useContext(firebaseAuth);\n   const history = useHistory();\n \n   if (!user) {\n     history.push(\"/log-in\");\n   }\n \n   return (\n     <div className=\"dashboard\">\n         <Switch>\n           <Route path=\"/app/edit\">\n             <DeckEditor\n               deckToEdit={deckToEdit}\n               setDeckToEdit={setDeckToEdit}\n               cards={cards}\n             />\n           </Route>\n           <Route path=\"/app/create\">\n             <PageHeading \n               title=\"新セット\"\n             />\n             <DeckCreator />\n           </Route>\n           <Route path=\"/app/created\">\n             <div style={{ display: 'flex' }}>\n               <div style={{ width: '100%', margin: '0 auto', paddingRight: 30 }}>\n                 <PageHeading\n                   title=\"作ったセット\"\n                 />\n                 <div>\n                   <DeckList\n                     decks={decks}\n                     setDeckToEdit={setDeckToEdit}\n                   />\n                 </div>\n               </div>\n               <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', paddingTop: 100, paddingLeft: 60, width: 200}}>\n                 <button\n                   onClick={() => {\n                     history.push('/app/create')\n                   }}\n                   style={{color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30}}\n                 >\n                   <><FontAwesomeIcon icon={faPlus} style={{marginRight: 5}} /> 新作</>\n                 </button>\n               </div>\n             </div>\n           </Route>\n         </Switch>\n     </div>\n   );\n }\n \n export default CreatedDecks;","/**\n * Handles logic for getting the selected deck and cards.\n * Generates FlippableCards for each card to be shown, and \n * renders them in a Carousel.\n */\n\n import React, { useState, useEffect } from 'react';\n import firebase from 'firebase';\n \n import { useParams } from 'react-router-dom';\n \n import Spinner from '../Spinner';\n \n const shuffleCard = (array) => {\n    let currentIndex = array.length, randomIndex;\n\n    while (currentIndex != 0) {\n\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n const Test = () => {\n   const [cards, setCards] = useState([]);\n   const [hashCards, setHashCards] = useState(null);\n   const [isCardFlipped, setIsCardFlipped] = useState(false);\n   const [canView, setCanView] = useState(true);\n   const [isLoaded, setIsLoaded] = useState(false);\n   const { hash } = useParams();\n   const [correctAnswer, setCorrectAnswer] = useState([]);\n   const [selectedAnswer, setSelectedAnswer] = useState([]);\n   const [result, setResult] = useState();\n   const [submitted, setSubmitted] = useState(false);\n \n   useEffect(() => {\n     setIsLoaded(false);\n     setHashCards(null);\n     setCards(null);\n \n     console.log(hash)\n     if (hash === undefined) return;\n \n     const db = firebase.firestore();\n \n     db.collection('decks').doc(hash).get()\n     .then(snapshot => {\n       setIsLoaded(true);\n     })\n     .catch(error => {\n       setIsLoaded(true);\n       console.log(\"Error: \", error.message)\n     })\n \n     let ref = db.collection('decks').doc(hash);\n     ref.get()\n       .then(snapshot => {\n         let arr = [];\n         snapshot.data().cards?.forEach(item => arr.push(item));\n         setHashCards(arr);\n       })\n       .catch(error => console.log(\"Error: \", error.message))\n   }, [hash]);\n \n   useEffect(() => {\n     setIsLoaded(false);\n     let _cards = [];\n \n     if (hashCards != null) {\n       _cards = hashCards;\n     } else {\n       _cards = [];\n     }\n \n     let _listCorrectAnswer = [];\n     if (_cards.length > 0) {\n       setCards(_cards.map((ele, cardIndex) => {\n        const question = ele.front\n        let answers = [];\n        answers.push(ele.back);\n        while (answers.length < 4) {\n            const randomIndex = Math.floor(Math.random() * _cards.length);\n            if (!answers.includes(_cards[randomIndex].back)) {\n                answers.push(_cards[randomIndex].back)\n            }\n        }\n        shuffleCard(answers);\n        for (let index = 0; index < answers.length; index++) {\n            const element = answers[index];\n            if (element == ele.back) {\n                _listCorrectAnswer.push(index)\n            }\n        }\n        return {\n            question: question,\n            answers: answers,\n        }\n       }));\n       setCorrectAnswer(_listCorrectAnswer);\n       setSelectedAnswer(Array(_listCorrectAnswer.length).fill(-1))\n       setIsLoaded(true);\n     }\n\n     }, [isCardFlipped, hashCards]\n   );\n \n   if (!isLoaded) return (\n     <main>\n       <div className=\"container center\">\n         <Spinner />\n       </div>\n     </main>\n   );\n \n   if (!cards) return (\n     <div className=\"container center\">\n       <p>We couldn't find this deck. :(</p>\n     </div>\n   )\n \n   if (!canView || cards.length === 0) return (\n       <div className=\"container center\">\n         <p>This deck is either private or has no cards! If you are the owner, you can view it and edit it from your dashboard.</p>\n       </div>\n   );\n\n   const _generateListQuestion = () => {\n       return cards.map((ele, cardIndex) => {\n         return (\n            <div style={{\n                border: '1px solid rgba(0, 0, 0, 0.5)', \n                borderRadius: 20,\n                width: '100%',\n                marginBottom: 30,\n                padding: 30}}>\n                    <div style={{\n                        width: '100%',\n                        textAlign: 'center'\n                    }}>\n                        {ele?.question}\n                    </div>\n                {ele?.answers?.map((element, index)=> {\n                  let backgroundColor = index == selectedAnswer[cardIndex] ? 'green' : 'white'\n                  if (submitted) {\n                    if (selectedAnswer[cardIndex] != correctAnswer[cardIndex] && index == correctAnswer[cardIndex]) {\n                      backgroundColor = 'red'\n                    }\n                  }\n                    return <div style={{\n                        height: 30,\n                        width: '80%',\n                        marginLeft: '10%',\n                        marginBottom: 10,\n                        marginTop: 10,\n                        border: '1px solid rgba(0, 0, 0, 0.2)', \n                        borderRadius: 20,\n                        textAlign: 'center',\n                        lineHeight: 2,\n                        verticalAlign: 'center',\n                        backgroundColor: backgroundColor,\n                    }} onClick={(event) => {\n                     const newAnswer = [\n                         ...selectedAnswer.slice(0, cardIndex),\n                         index, \n                         ...selectedAnswer.slice(cardIndex + 1)\n                       ]\n                     setSelectedAnswer(newAnswer)\n                    }}>\n                        <div style={{color: index == selectedAnswer[cardIndex] ? 'white' : 'black',}}>\n                            {element}\n                        </div>\n                    </div>\n                })}\n            </div>\n         )\n       })\n   }\n\n   return (\n\n    <div>\n        {result != null && <div style={{\n            fontSize: 50,\n            marginBottom: 30,\n\n        }}>{`結果: ${result}/${cards.length}`}</div>}\n        {_generateListQuestion()}\n        <div style={{\n            height: 50,\n            width: '80%',\n            marginLeft: '10%',\n            backgroundColor: '#526CC6',\n            color: 'white',\n            fontSize: 26,\n            textAlign: 'center',\n            lineHeight: 2,\n            verticalAlign: 'center',\n            borderRadius: 25,\n        }} onClick={(event) => {\n            let totalResult = 0\n            for (let index = 0; index < selectedAnswer.length; index++) {\n                const selected = selectedAnswer[index];\n                const correct = correctAnswer[index];\n                if (selected == correct) {\n                    totalResult += 1;\n                }\n            }\n            setSubmitted(true);\n            setResult(totalResult);\n        }}>Submit</div>\n    </div>\n   );\n }\n \n export default Test;","/**\n * Handles logic for getting the selected deck and cards.\n * Generates FlippableCards for each card to be shown, and \n * renders them in a Carousel.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nimport { useParams } from 'react-router-dom';\n\nimport Spinner from '../Spinner';\nimport PageHeading from '../PageHeading';\nimport { useAlert } from 'react-alert';\n\nconst shuffleCard = (array) => {\n    if (!array) {\n        return []\n    }\n    let currentIndex = array.length, randomIndex;\n\n    while (currentIndex != 0) {\n\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n\n        [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n}\n\nconst TestCompare = () => {\n    const [hashCards, setHashCards] = useState([]);\n    const [originCards, setOriginCards] = useState([]);\n    const [randomCards, setRandomCards] = useState([]);\n    const [canView, setCanView] = useState(true);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [selectedIndex1, setSelectedIndex1] = useState(null);\n    const [selectedIndex2, setSelectedIndex2] = useState(null);\n    const { hash } = useParams();\n    const alert = useAlert()\n\n    useEffect(() => {\n        setIsLoaded(false);\n        setHashCards(null);\n\n        console.log(hash)\n        if (hash === undefined) return;\n\n        const db = firebase.firestore();\n\n        db.collection('decks').doc(hash).get()\n            .then(snapshot => {\n                setIsLoaded(true);\n            })\n            .catch(error => {\n                setIsLoaded(true);\n                console.log(\"Error: \", error.message)\n            })\n\n        let ref = db.collection('decks').doc(hash);\n        ref.get()\n            .then(snapshot => {\n                let arr = [];\n                snapshot.data().cards?.forEach(item => arr.push(item));\n                setHashCards(arr);\n            })\n            .catch(error => console.log(\"Error: \", error.message))\n    }, [hash]);\n\n    useEffect(() => {\n        setIsLoaded(false);\n        setOriginCards(hashCards)\n        let newArray = hashCards?.slice();\n        setRandomCards(shuffleCard(newArray))\n        setIsLoaded(true);\n    }, [hashCards]);\n\n    if (!isLoaded) return (\n        <main>\n            <div className=\"container center\">\n                <Spinner />\n            </div>\n        </main>\n    );\n\n    if (!hashCards) return (\n        <div className=\"container center\">\n            <p>We couldn't find this deck. :(</p>\n        </div>\n    )\n\n    if (!canView || hashCards.length === 0) return (\n        <div className=\"container center\">\n            <p>Done!</p>\n        </div>\n    );\n\n    const _onCheck = (index1, index2) => {\n        if (originCards[index1].back != randomCards[index2].back) {\n            setSelectedIndex1(null)\n            setSelectedIndex2(null)\n            alert.show('Wrong!')\n        } else {\n            originCards.splice(index1, 1);\n            randomCards.splice(index2, 1);\n            setSelectedIndex1(null)\n            setSelectedIndex2(null)\n            alert.show('Correct!')\n        }\n    }\n\n    const _generateListFront = () => {\n        return originCards?.map((ele, index) => {\n            return (\n                <div style={{\n                    height: 30,\n                    width: '80%',\n                    marginLeft: '10%',\n                    marginBottom: 10,\n                    marginTop: 10,\n                    border: '1px solid rgba(0, 0, 0, 0.2)',\n                    borderRadius: 20,\n                    textAlign: 'center',\n                    lineHeight: 2,\n                    verticalAlign: 'center',\n                    backgroundColor: selectedIndex1 == index ? 'green' : 'white',\n                }} onClick={(event) => {\n                    if (selectedIndex1 == index) {\n                        setSelectedIndex1(null)\n                    } else {\n                        setSelectedIndex1(index)\n                        if (selectedIndex2 != null) {\n                            _onCheck(index, selectedIndex2)\n                        }\n                    }\n                }}>\n                    <div style={{\n                        width: '100%',\n                        textAlign: 'center',\n                        color: selectedIndex1 == index ? 'white' : 'black'\n                    }}>\n                        {ele?.front}\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    const _generateListBack = () => {\n        return randomCards?.map((ele, index) => {\n            return (\n                <div style={{\n                    height: 30,\n                    width: '80%',\n                    marginLeft: '10%',\n                    marginBottom: 10,\n                    marginTop: 10,\n                    border: '1px solid rgba(0, 0, 0, 0.2)',\n                    borderRadius: 20,\n                    textAlign: 'center',\n                    lineHeight: 2,\n                    verticalAlign: 'center',\n                    backgroundColor: selectedIndex2 == index ? 'green' : 'white',\n                }} onClick={(event) => {\n                    if (selectedIndex2 == index) {\n                        setSelectedIndex2(null)\n                    } else {\n                        setSelectedIndex2(index)\n                        if (selectedIndex1 != null) {\n                            _onCheck(selectedIndex1, index)\n                        }\n                    }\n                }}>\n                    <div style={{\n                        width: '100%',\n                        textAlign: 'center',\n                        color: selectedIndex2 == index ? 'white' : 'black'\n                    }}>\n                        {ele?.back}\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    return (\n        <div style={{ display: 'flex' }}>\n            <div style={{ width: '50%', margin: '0 auto', paddingRight: 30 }}>\n                <PageHeading\n                    title=\"Front\"\n                />\n                <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                    <div>\n                        {_generateListFront()}\n                    </div>\n                </div>\n            </div>\n            <div style={{ width: '50%', margin: '0 auto', paddingLeft: 30 }}>\n                <PageHeading\n                    title=\"Back\"\n                />\n                <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                    <div>\n                        {_generateListBack()}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TestCompare;\n","/**\n * Displays the dashboard page.\n */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRandom, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from './Breadcrumb';\nimport DeckCreator from './decks-and-cards/DeckCreator';\nimport DeckEditor from './decks-and-cards/DeckEditor';\nimport DeckList from './decks-and-cards/DeckList';\nimport PageHeading from './PageHeading';\nimport SavedDecks from './SavedDecks';\nimport CreatedDecks from './CreatedDecks';\nimport Deck from './decks-and-cards/Deck';\nimport Test from './decks-and-cards/Test';\nimport TestCompare from './decks-and-cards/TestCompare';\n\nconst Dashboard = ({\n  onClick,\n  decks,\n  saveDecks,\n  cards,\n}) => {\n  const [deckToEdit, setDeckToEdit] = useState(null);\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n\n  const handleButtons = (event) => {\n    switch (event.target.name) {\n      case \"exit\":\n        if (user) {\n          history.push(\"/app\");\n          return;\n        }\n        history.push(\"/\");\n        return;\n      default:\n        return;\n    }\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <Switch>\n        <Route path=\"/app/edit\">\n          <DeckEditor\n            deckToEdit={deckToEdit}\n            setDeckToEdit={setDeckToEdit}\n            cards={cards}\n          />\n        </Route>\n        <Route path=\"/app/create\">\n          <PageHeading\n            title=\"新セット\"\n            styles={{textAlign: 'left'}}\n          />\n          <DeckCreator />\n        </Route>\n        <Route path=\"/app/saved\">\n          <SavedDecks\n            saveDecks={saveDecks}\n          />\n        </Route>\n        <Route path=\"/app/created\">\n          <CreatedDecks\n            decks={decks}\n            cards={cards}\n          />\n        </Route>\n        <Route path=\"/app/d/:hash\">\n          <Deck \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app/test/:hash\">\n          <Test/>\n        </Route>\n        <Route path=\"/app/test-match/:hash\">\n          <TestCompare/>\n        </Route>\n        <Route path=\"/app\">\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '50%', margin: '0 auto', paddingRight: 30 }}>\n              <PageHeading\n                title=\"作ったセット\"\n              />\n              <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                <div>\n                  <DeckList\n                    decks={decks}\n                    setDeckToEdit={setDeckToEdit}\n                  />\n                </div>\n              </div>\n            </div>\n            <div style={{ width: '50%', margin: '0 auto', paddingLeft: 30 }}>\n              <PageHeading\n                title=\"保存したセット\"\n              />\n              <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                <div>\n                  <DeckList\n                    decks={saveDecks}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', paddingTop: 100, paddingLeft: 60, width: 200 }}>\n              <button\n                onClick={() => {\n                  history.push('/app/create')\n                }}\n                style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30 }}\n              >\n                <><FontAwesomeIcon icon={faPlus} style={{ marginRight: 5 }} /> 新作</>\n              </button>\n            </div>\n          </div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Dashboard;","import React, { useContext, useState } from 'react';\nimport { Link, useHistory, Switch, Route } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nimport PageHeading from './PageHeading';\nimport DeckList from './decks-and-cards/DeckList';\nimport DeckEditor from './decks-and-cards/DeckEditor';\n\nconst Home = ({\n  allDecks,\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const [deckToEdit1, setDeckToEdit] = useState(null);\n  const history = useHistory();\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n  return (\n    <Switch>\n      <Route path=\"/app-edit\" >\n        <DeckEditor\n          deckToEdit={deckToEdit1}\n          setDeckToEdit={setDeckToEdit}\n        />\n      </Route>\n      <Route path=\"/\">\n        <>\n          <header className=\"hero\">\n            <section>\n              <div className=\"hero-content\">\n                <div className=\"buttons\">\n                  <>\n                    <Link\n                      className=\"btn btn-cta\"\n                      to=\"/app\"\n                    >\n                      ダッシュボード\n                    </Link>\n                  </>\n                </div>\n              </div>\n            </section>\n            <div className=\"card-design\">\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          </header>\n\n          <section className=\"public-decks\">\n            <div>\n              <PageHeading\n                title=\"全てセット\"\n              />\n              <div style={{textAlign: 'left'}}>\n                <DeckList\n                  //de tam day vi sort hoac orderBy trong useHook ko duoc :v\n                  decks={allDecks.sort((a, b) => b.saveCount - a.saveCount)}\n                  setDeckToEdit={setDeckToEdit}\n                />\n              </div>\n            </div>\n          </section>\n        </>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Home;","/**\n * Hook for user authentication and account management:\n * \n * Logging user in\n * Signing user up\n * Logging user out\n * Updating user email\n * Changing user password\n * Deleting account\n */\n\nimport { useState, useEffect, useContext } from 'react';\nimport { auth, db, fb } from '../firebase/firebaseIndex';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nconst useAuth = (username = null, email = null, password = null, newPassword = null, avatarUrl = null) => {\n  const { user } = useContext(firebaseAuth);\n\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(\"pending\");\n\n  const [login, setLogin] = useState(0);\n  const [signup, setSignup] = useState(0);\n  const [logout, setLogout] = useState(0);\n  const [changeEmail, setChangeEmail] = useState(0);\n  const [changePassword, setChangePassword] = useState(0);\n  const [deleteAccount, setDeleteAccount] = useState(0);\n\n  // Logging user in\n  useEffect(() => {\n    if (login === 0 || user != null) return;\n    setError(null);\n    setStatus(\"loading\");\n    auth.signInWithEmailAndPassword(email, password)\n    .then((userCredential) => {\n      let _user = userCredential.user;\n      setUserData(_user);\n      setStatus(\"success\");\n    })\n    .catch((error) => {\n      console.error(\"Error logging user in: \", error.message);\n      setError(error);\n      setStatus(\"error\");\n    })\n  }, [login]);\n\n  // Signing user up\n  useEffect(() => {\n    if (signup === 0 || user != null) return;\n    setError(null);\n    setStatus(\"loading\");\n    auth.createUserWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        let _user = userCredential.user;\n        db.collection('users').doc(_user.uid).set({\n          save_decks: [],\n          username: username,\n          email: email,\n        });\n        userCredential.user.updateProfile({displayName: username})\n        setUserData(_user);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        console.error(\"Error signing user in: \", error.message);\n        setError(error);\n        setStatus(\"error\");\n      })\n\n  }, [signup]);\n\n  // Logging user out\n  useEffect(() => {\n    if (logout === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    auth.signOut()\n    .then(() => {\n      console.log(\"Logged out\");\n      setUserData(null);\n      localStorage.removeItem('deck')\n      localStorage.removeItem('save_decks')\n      setStatus(\"success\");\n    })\n    .catch(error => {\n      console.error(\"Error logging user out: \", error.message);\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [logout]);\n\n  useEffect(() => {\n    if (changeEmail === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\")\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      console.log(\"User successfully reauthenticated.\");\n      auth.currentUser.updateEmail(email)\n      .then(() => {\n        db.collection('users').doc(user.uid).update({\n          email: email,\n        });\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n      setStatus(\"loading\")\n      auth.currentUser.updateProfile({displayName: username, photoURL: avatarUrl})\n      .then(() => {\n        setUserData(auth.currentUser);\n        db.collection('users').doc(user.uid).update({\n          username: username,\n        });\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [changeEmail]);\n\n  // Changing password\n  useEffect(() => {\n    if (changePassword === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n    \n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      console.log(\"User successfully reauthenticated.\");\n      auth.currentUser.updatePassword(newPassword).then(function() {\n        setStatus(\"success\");\n      }).catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [changePassword])\n\n  // Delete account\n  useEffect(() => {\n    if (deleteAccount === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n\n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      auth.currentUser.delete().then(() => {\n        setStatus(\"success\");\n      }).catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      })\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    });\n\n  }, [deleteAccount])\n\n  const handleLogin = () => setLogin(prev => prev + 1);\n  const handleSignup = () => setSignup(prev => prev + 1);\n  const handleLogout = () => setLogout(prev => prev + 1);\n  const handleChangeEmail = () => setChangeEmail(prev => prev + 1);\n  const handleChangePassword = () => setChangePassword(prev => prev + 1);\n  const handleDeleteAccount = () => setDeleteAccount(prev => prev + 1);\n  const resetStatus = () => setStatus('pending');\n\n  return { \n    userData, \n    error, \n    status,\n    handleLogin, \n    handleSignup, \n    handleLogout,\n    handleChangeEmail,\n    handleChangePassword,\n    handleDeleteAccount,\n    resetStatus\n  };\n}\n\nexport default useAuth;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst Login = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n  const [inputs, setInputs] = useState({ email: \"\", password: \"\" });\n\n  const { status, error, handleLogin} = useAuth(null, inputs.email, inputs.password);\n  const { user } = useContext(firebaseAuth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleLogin();\n  }\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/app\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/user-not-found\":\n        setErrorMessage(\"メールアドレスとパスワードが一致しません。\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"メールアドレスとパスワードが一致しません。\");\n        return;\n      case \"auth/invalid-email\":\n        setErrorMessage(\"有効なメールアドレスを入力してください。\");\n        return;\n      default:\n        setErrorMessage(\"何かがうまくいかなかった。もう一度やり直してください。\");\n        return;\n    }\n\n  }, [error]);\n\n  return (\n    <div className=\"login\" style={{textAlign: 'center'}}>\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', marginRight: 200}}>\n        <div style={{display: 'flex', paddingRight: 50, fontSize: 25, alignItems: 'center'}}>\n          <Link to=\"/sign-up\">サインアップ</Link>\n        </div>\n        <PageHeading \n          title=\"ログイン\"\n        />\n      </div>\n      <form style={{display: 'inline-block'}} onSubmit={handleSubmit}>\n        <TextInput \n          labelText=\"メールアドレス\"\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n          id=\"email\"\n          name=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          placeholder=\"メールアドレス\"\n        />\n        <TextInput \n          labelText=\"パスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button \n          className=\"btn btn-primary\"\n          style={{backgroundColor: '#526CC6', borderColor: 'unset', borderRadius: 20, borderWidth: 0}}\n          disabled={inputs.password === \"\" || inputs.email === \"\"}        \n        >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"ログイン\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;","/**\n * Displays a spinner for 1 second when logging out.\n */\n\nimport React, { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport useAuth from '../../hooks/useAuth';\n\nimport Spinner from '../Spinner';\n\nconst Logout = () => {\n  const { user } = useContext(firebaseAuth);\n  const { handleLogout } = useAuth()\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!user) return;\n    handleLogout();\n    setTimeout(() => history.push(\"/\"), 1000);\n  }, [user]);\n\n  return (\n    <div className=\"container center\">\n      <p><Spinner /> Logging out . . .</p>\n    </div>\n  );\n}\n\nexport default Logout;","/**\n * Displays the update password page.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from '../Breadcrumb';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst ChangePassword = ({\n  handleChange,\n  inputs,\n  error,\n  onSubmit,\n  status\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n  \n  return (\n    <>\n      <PageHeading\n        title=\"パスワードを変更してください\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"新しいパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"new-password\"\n          name=\"newPassword\"\n          value={inputs.newPassword}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-primary\"　style={{color: 'white', background: '#526CC6', border: 'unset'}}>\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"パスワードを変更する\"}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default ChangePassword;","/**\n * Displays the delete account page.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from '../Breadcrumb';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst DeleteAccount = ({\n  handleChange,\n  inputs,\n  error,\n  onSubmit\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    switch (error) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n  \n  return (\n    <>\n      <PageHeading\n        title=\"アカウントを削除する\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-warning\">アカウントを完全に削除する</button>\n      </form>\n    </>\n  );\n}\n\nexport default DeleteAccount;","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faEnvelope, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst UpdateProfile = ({\n  handleChange,\n  inputs,\n  onSubmit,\n  error,\n  status,\n  onBack\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n\n  useEffect(() => {\n    return () => onBack();\n  }, [])\n\n  return (\n    <>\n      <PageHeading\n        title=\"メールを更新する\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"ユーザー名\"\n          icon={<FontAwesomeIcon icon={faUser} />}\n          id=\"username\"\n          name=\"username\"\n          value={inputs.username}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"メルアドレス\"\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n          id=\"email\"\n          name=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          placeholder=\"メルアドレス\"\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-primary\" \n        style={{color: 'white', background: '#526CC6', border: 'unset'}}\n        disabled={inputs.password === \"\" || inputs.email === \"\" || inputs.username === \"\"}   >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"メールを更新する\"}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default UpdateProfile;","/**\n * Shows the My Account page and sets up the useAuth\n * hook to be used on ChangePassword, UpdateEmail and\n * DeleteAccount components.\n */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport ChangePassword from './ChangePassword';\nimport DeleteAccount from './DeleteAccount';\nimport PageHeading from '../PageHeading';\nimport UpdateProfile from './UpdateProfile';\n\nconst MyAccount = () => {\n  const { user } = useContext(firebaseAuth);\n  const [inputs, setInputs] = useState({ \n    email: user.email || \"\",\n    password: \"\", \n    newPassword: \"\", \n    username: user.displayName || \"\", \n    avatarUrl: user.photoUrl || \"\"});\n\n  const { \n    loading, \n    error, \n    status, \n    handleChangeEmail, \n    handleChangePassword, \n    handleDeleteAccount,\n    resetStatus\n  } = useAuth(inputs.username, inputs.email, inputs.password, inputs.newPassword);\n\n  const history = useHistory();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"my-account\">\n      <div className=\"my-account-inner\" style={{width: '50%', margin: '0 auto'}}>\n        <Switch>\n          <Route exact path=\"/my-account\">\n            <div>\n              <PageHeading\n                title=\"アカウント\"\n              />\n              <div className=\"account-data\">\n                  <Link to=\"/my-account/change-email\" className=\"btn btn-tertiary\">\n                    <span>メールを更新する</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                  </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/my-account/change-password\" className=\"btn btn-tertiary\">\n                  <span>パスワードを変更してください</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/my-account/delete-account\" className=\"btn btn-warning\">\n                  <FontAwesomeIcon icon={faTrash} />&nbsp;&nbsp;&nbsp;アカウントを削除する\n                </Link>\n              </div>\n            </div>\n          </Route>\n\n          <Route exact path=\"/my-account/change-email\">\n            <UpdateProfile \n              handleChange={handleChange}\n              inputs={inputs}\n              loading={loading}\n              onSubmit={handleChangeEmail}\n              error={error}\n              status={status}\n              onBack={resetStatus}\n            />\n          </Route>\n\n          <Route exact path=\"/my-account/change-password\">\n            <ChangePassword \n              handleChange={handleChange}\n              loading={loading}\n              inputs={inputs}\n              onSubmit={handleChangePassword}\n              error={error}\n              status={status}\n            />\n          </Route>\n          \n          <Route exact path=\"/my-account/delete-account\">\n            <DeleteAccount \n              handleChange={handleChange}\n              inputs={inputs}\n              onSubmit={handleDeleteAccount}\n              error={error}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default MyAccount;","import React, {useEffect, useState} from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navlinks = ({ closeMenu, userName }) => {\n  const [firstChar, setFirstChar] = useState('');\n  const [bgColor, setBgColor] = useState('');\n\n  const getFirstChar = () => {\n    if (userName) {\n      setFirstChar(userName.charAt(0).toUpperCase());\n    }\n  }\n\n  useEffect(() => {\n    setBgColor('#' + getRandomColor());\n    console.log(bgColor);\n    getFirstChar();\n  },[userName]);\n\n  const getRandomColor = () => {\n    return Math.floor(Math.random()*16777215).toString(16)\n  }\n\n\n  \n  return (\n    <div style={{position: 'relative', display: 'flex'}}>\n      <div className=\"avatar-btn\" style={{backgroundColor: `${bgColor}`}}>\n        <div className=\"name\">{firstChar}</div>\n      </div>\n      <div className=\"avt-links\">\n        <ul>\n        <li>\n          <NavLink\n            to=\"/my-account\"\n            className=\"link\"\n            onClick={() => closeMenu()}\n          >\n            プロフィール\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/log-out\" className=\"link\" onClick={() => closeMenu()}>\n            ログアウト\n          </NavLink>\n        </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Navlinks;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReply, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\n\nimport Navlinks from './Navlinks';\nimport TextInput from './TextInput';\n\nconst Nav = ({\n  onClick,\n  isMenuOpen,\n  mobile=false,\n  onSearch,\n}) => {\n  const [navClasses, setNavClasses] = useState(\"navbar\");\n  const btnClasses= \"btn btn-hamburger small-screen-only \" + (isMenuOpen && \"open\"); \n  let location = useLocation();\n  const { user } = useContext(firebaseAuth);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n\n    if (mobile) {\n      setNavClasses(\"navbar\");\n      return;\n    }\n\n    if (location.pathname !== \"/\") {\n      setNavClasses(\"navbar light\");\n      return;\n    }\n\n    setNavClasses(\"navbar\");\n  }, [location, mobile])\n\n  if (!user) {\n    return null\n  }\n\n  return (\n    <header className={navClasses} style={{background: '#526CC6'}}>\n      <div className=\"navbar-inner\">\n        <div className=\"logo\">\n        <Link to=\"/\" className=\"logo\" >\n        ホーム\n        </Link>\n        <div style={{height: 30, width: 2, backgroundColor: 'black', marginLeft: 20, marginRight: 20}}></div>\n        <Link to=\"/app\" className=\"logo\">\n          私のフラッシュカード\n        </Link>\n          </div>\n          <input\n          style={{outline: 'unset', height: 30, borderRadius: 15, paddingLeft: 10, borderColor: 'white'}}\n          id=\"search\"\n          name=\"search\"\n          placeholder='検索する'\n          value={searchText}\n          onChange={(e) => {\n            setSearchText(e.target.value)\n            onSearch(e.target.value)\n          }}\n        />\n          \n        <div className=\"right-nav\">\n          <nav className=\"large-screen-only\">\n            <Navlinks closeMenu={() => null } userName={user.displayName}/>\n          </nav>\n          <button \n            className={btnClasses}\n            name=\"toggle-menu\"\n            onClick={onClick}\n          >\n            <span></span>\n            <span></span>\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Nav;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst Signup = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [inputs, setInputs] = useState({username: \"\", email: \"\", password: \"\" });\n  const history = useHistory();\n\n  const { status, error, handleSignup} = useAuth(inputs.username, inputs.email, inputs.password);\n  const { user } = useContext(firebaseAuth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleSignup();\n  }\n\n  useEffect(() => {\n    if (error === null) return;\n    console.log(error.message);\n  }, [error])\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/app\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/weak-password\":\n        setErrorMessage(\"パスワードは6文字以上である必要があります。\");\n        return;\n      case \"auth/email-already-in-use\":\n        setErrorMessage(\"このメールはすでに登録されています。\");\n        return;\n      case \"auth/invalid-email\":\n        setErrorMessage(\"有効なメールアドレスを入力してください。\");\n        return;\n      default:\n        setErrorMessage(\"何かがうまくいかなかった。 もう一度やり直してください。\");\n        return;\n    }\n  }, [error]);\n\n  return (\n    <div className=\"signup\" style={{textAlign: 'center'}}>\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', marginRight: 200}}>\n        <div style={{display: 'flex', paddingRight: 50, fontSize: 25, alignItems: 'center'}}>\n          <Link to=\"/log-in\">ログイン</Link>\n        </div>\n        <PageHeading \n        title=\"サインアップ\"\n      />\n      </div>\n      <form style={{display: 'inline-block'}} onSubmit={handleSubmit}>\n      <TextInput \n          labelText=\"ユーザー名\"\n          id=\"username\"\n          name=\"username\"\n          placeholder=\"ユーザー名\"\n          value={inputs.username}\n          onChange={handleChange}\n          icon={<FontAwesomeIcon icon={faUser} />}\n        />\n        <TextInput \n          labelText=\"メールアドレス\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"メールアドレス\"\n          value={inputs.email}\n          onChange={handleChange}\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n        />\n        <TextInput \n          labelText=\"パスワード\"\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button \n          className=\"btn btn-primary\"\n          style={{backgroundColor: '#526CC6', borderColor: 'unset', borderRadius: 20, borderWidth: 0}}\n          disabled={inputs.username === \"\" || inputs.password === \"\" || inputs.email === \"\"}\n        >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"サインアップ\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;","/**\n * Main wrapper for the app, containing the shuffle functionality\n * used by Deck and Dashboard components.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport { firebaseAuth } from './provider/AuthProvider';\nimport useOnDecksSnapshot from './hooks/useOnDecksSnapshot';\nimport useOnSavedDecksSnapshot from './hooks/useOnSavedDecksSnapshot';\nimport useOnAllDecksSnapshot from './hooks/useOnAllDecksSnapshot';\n\nimport Deck from './components/decks-and-cards/Deck';\nimport Dashboard from './components/Dashboard';\nimport Home from './components/Home';\nimport Login from './components/account-management/Login';\nimport Logout from './components/account-management/Logout';\nimport MyAccount from './components/account-management/MyAccount';\nimport Nav from './components/Nav';\nimport Signup from './components/account-management/Signup';\n\nconst App = () => {\n  const [selectedDecks, setSelectedDecks] = useState([]);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const history = useHistory();\n  const { user } = useContext(firebaseAuth);\n  const { decks } = useOnDecksSnapshot(user);\n  const { saveDecks } = useOnSavedDecksSnapshot(user);\n  const { allDecks } = useOnAllDecksSnapshot();\n\n  const [decksData, setDecksData] = useState([]);\n  const [saveDecksData, setSaveDecksData] = useState([]);\n  const [allDecksData, setAllDecksData] = useState([]);\n\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    if (!isSearching) {\n      setDecksData(decks)\n    }\n  }, [decks])\n\n  useEffect(() => {\n    if (!isSearching) {\n      setSaveDecksData(saveDecks)\n    }\n  }, [saveDecks])\n\n  useEffect(() => {\n    if (!isSearching) {\n      setAllDecksData(allDecks)\n    }\n  }, [allDecks])\n\n  useEffect(() => {\n    if (!searchText || searchText.length == 0) {\n      setIsSearching(false)\n      setDecksData(decks)\n      setSaveDecksData(saveDecks)\n      setAllDecksData(allDecks)\n    } else {\n      setIsSearching(true)\n      setDecksData(decks.filter((element) => {return element.title.includes(searchText)}));\n      setSaveDecksData(saveDecks.filter((element) => {return element.title.includes(searchText)}));\n      setAllDecksData(allDecks.filter((element) => {return element.title.includes(searchText)}));\n    }\n  }, [searchText])\n\n  useEffect(() => {\n    if (user) return;\n    setSelectedDecks([]);\n  }, [user]);\n\n  const onSearch = (text) => {\n    setSearchText(text);\n  }\n\n  const handleButtons = (event) => {\n    switch (event.target.name) {\n      case \"exit\":\n        if (user) {\n          history.push(\"/app\");\n          return;\n        }\n        history.push(\"/\");\n        return;\n  \n      case \"toggle-menu\":\n        setIsMenuOpen(prev => !prev);\n        return;\n      default:\n        return;\n    }\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"app\">\n      <Nav \n        onClick={handleButtons}\n        isMenuOpen={isMenuOpen}\n        onSearch={onSearch}\n      />\n      <Switch>\n        <Route path=\"/log-in\">\n          <Login />\n        </Route>\n        <Route path=\"/log-out\">\n          <main>\n            <Logout />\n          </main>\n        </Route>\n        <Route path=\"/sign-up\">\n          <Signup />\n        </Route>\n        <Route path=\"/my-account\">\n          <main>\n            <MyAccount />\n          </main>\n        </Route>\n        <Route path=\"/app/shuffle\">\n          <Deck \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app/d/:hash\">\n          <Deck \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app\">\n          <main>\n            <Dashboard \n              onClick={handleButtons}\n              decks={decksData}\n              saveDecks={saveDecksData}\n              selectedDecks={selectedDecks}\n              setSelectedDecks={setSelectedDecks}\n            />\n          </main>\n        </Route>\n        <Route path=\"/\">\n          <main>\n            <Home \n              allDecks={allDecksData} \n              setSelectedDecks={setSelectedDecks} \n              selectedDecks={selectedDecks}\n              />\n          </main>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport { render } from 'react-dom'\nimport { HashRouter } from 'react-router-dom';\nimport AuthProvider from './provider/AuthProvider';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\n\nimport './styles/normalize.css';\nimport './styles/styles.css';\nimport App from './App';\n\nconst options = {\n  position: positions.MIDDLE,\n  timeout: 3000,\n  offset: '30px',\n  transition: transitions.SCALE\n}\n\nconst Root = () => (\n  <React.StrictMode>\n    <HashRouter>\n      <AuthProvider>\n        \n      <AlertProvider template={AlertTemplate} {...options}>\n        <App />\n      </AlertProvider>\n      </AuthProvider>\n    </HashRouter>\n  </React.StrictMode>\n)\n\nrender(<Root />, document.getElementById('root'))\n"],"sourceRoot":""}