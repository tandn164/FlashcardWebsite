{"version":3,"sources":["firebase/firebaseIndex.js","provider/AuthProvider.js","hooks/useOnDecksSnapshot.js","hooks/useOnSavedDecksSnapshot.js","hooks/useOnAllDecksSnapshot.js","components/Carousel.js","components/Header.js","components/decks-and-cards/CardContent.js","components/decks-and-cards/FlippableCard.js","components/Spinner.js","components/decks-and-cards/Deck.js","firebase/dbMethods.js","components/TextInput.js","components/PageHeading.js","components/decks-and-cards/UploadAndDisplayImage.js","components/decks-and-cards/CardEditor.js","components/decks-and-cards/CardCreator.js","components/Accordion.js","components/decks-and-cards/DeckCreator.js","components/decks-and-cards/DeckEditor.js","components/decks-and-cards/SelectableDeck.js","components/decks-and-cards/DeckList.js","components/SavedDecks.js","components/CreatedDecks.js","components/decks-and-cards/Test.js","components/Dashboard.js","components/Home.js","hooks/useAuth.js","components/account-management/Login.js","components/account-management/Logout.js","components/account-management/ChangePassword.js","components/account-management/DeleteAccount.js","components/account-management/UpdateProfile.js","components/account-management/MyAccount.js","components/Navlinks.js","components/Nav.js","components/account-management/Signup.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","db","firestore","fb","storage","firebaseAuth","React","createContext","AuthProvider","props","useState","user","setUser","useEffect","unsub","onAuthStateChanged","Provider","value","children","useOnDecksSnapshot","decks","setDecks","unsubscribe","collection","where","uid","onSnapshot","snapshot","arr","forEach","deck","push","data","error","console","log","message","useOnSavedDecksSnapshot","saveDecks","doc","save_decks","localStorage","setItem","JSON","stringify","useOnAllDecksSnapshot","allDecks","Carousel","leftButtonText","rightButtonText","animTime","items","previousCallback","nextCallback","showButtons","index","setIndex","carouselItems","setCarouselItems","canSlide","setCanSlide","carousel","useRef","modifiedItems","map","ele","className","key","handleClick","event","target","name","length","idx","undefined","setTimeout","ref","style","marginLeft","width","transition","onClick","disabled","Header","title","CardContent","text","imageUrl","alt","height","src","FlippableCard","frontTitle","backTitle","frontText","backText","isFlipped","setIsFlipped","imageRef","header","icon","faTimes","backHeader","cloneElement","footer","prev","faReply","size","setImageUrl","getDownloadURL","then","downloadURL","Spinner","faSpinner","Deck","cards","setCards","setTitle","hashCards","setHashCards","isCardFlipped","setIsCardFlipped","canView","isLoaded","setIsLoaded","hash","useParams","shuffle","setShuffle","cardShuffle","setCardShuffle","history","useHistory","get","catch","item","_cards","front","back","id","slideCallback","display","flexDirection","justifyContent","alignItems","backgroundColor","position","top","background","textAlign","zIndex","color","lineHeight","verticalAlign","borderRadius","marginTop","marginBottom","array","randomIndex","currentIndex","Math","floor","random","shuffleCard","faAngleLeft","faAngleRight","window","alert","border","fontSize","paddingBottom","faPlus","marginRight","dbMethods","description","isPublic","document","newDeck","numCards","owner","set","err","deckId","delete","update","FieldValue","arrayUnion","saveCount","increment","arrayRemove","updatedDeck","TextInput","labelText","type","placeholder","onChange","autocomplete","isHidden","setIsHidden","faLock","htmlFor","outline","autoComplete","preventDefault","faEye","faEyeSlash","PageHeading","titleElement","styles","UploadAndDisplayImage","onSetImage","image","setImage","filePath","setFilePath","useContext","uploadTask","files","put","on","progress","bytesTransferred","totalBytes","state","child","CardEditor","card","onSubmit","onUpdate","onDelete","setFront","setBack","handleInput","faTrash","CardCreator","onCreateCard","isOpen","setIsOpen","faMinus","Accordion","listCards","onCards","setCard","cardEditorElements","setCardEditorElements","onDeleteCard","splice","updateElements","onUpdateCard","elements","classes","Fragment","faAngleUp","faAngleDown","newCard","DeckCreator","setDescription","updateSuccess","setUpdateSuccess","setListCards","setIsPublic","createDeck","faPaperclip","faBook","checked","DeckEditor","deckToEdit","setDeckToEdit","localDeck","parse","getItem","updateDeck","SelectableDeck","toggleDeck","setSelectedDecks","mine","saved","setSaved","savedDecksRaw","isSaved","savedDecks","filterArray","filter","fontWeight","stopPropagation","faEdit","faSave","Items","currentItems","PaginatedItems","itemsPerPage","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","slice","ceil","nextLabel","onPageChange","newOffset","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","DeckList","deckList","setDeckList","private","SavedDecks","path","margin","paddingRight","CreatedDecks","paddingTop","paddingLeft","Test","correctAnswer","setCorrectAnswer","selectedAnswer","setSelectedAnswer","result","setResult","_listCorrectAnswer","cardIndex","question","answers","includes","Array","fill","padding","element","newAnswer","totalResult","Dashboard","handleButtons","Home","deckToEdit1","to","useAuth","username","email","password","newPassword","avatarUrl","userData","setUserData","setError","status","setStatus","login","setLogin","signup","setSignup","logout","setLogout","changeEmail","setChangeEmail","changePassword","setChangePassword","deleteAccount","setDeleteAccount","signInWithEmailAndPassword","userCredential","_user","createUserWithEmailAndPassword","updateProfile","displayName","signOut","removeItem","code","credential","EmailAuthProvider","currentUser","reauthenticateWithCredential","updateEmail","photoURL","updatePassword","handleLogin","handleSignup","handleLogout","handleChangeEmail","handleChangePassword","handleDeleteAccount","resetStatus","Login","errorMessage","setErrorMessage","inputs","setInputs","handleChange","e","faEnvelope","borderColor","borderWidth","Logout","ChangePassword","DeleteAccount","UpdateProfile","onBack","faUser","MyAccount","photoUrl","loading","exact","Navlinks","closeMenu","userName","firstChar","setFirstChar","bgColor","setBgColor","getRandomColor","charAt","toUpperCase","toString","Nav","isMenuOpen","mobile","onSearch","navClasses","setNavClasses","btnClasses","location","useLocation","searchText","setSearchText","pathname","Signup","App","selectedDecks","setIsMenuOpen","decksData","setDecksData","saveDecksData","setSaveDecksData","allDecksData","setAllDecksData","isSearching","setIsSearching","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4b893bdd.chunk.js","sourcesContent":["/**\n * Initialize firebase authentication and firestore.\n */\n\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyB25ZqbIrDuXWUokLFcsbltpjUf5pjhb-w\",\n  authDomain: \"flashcardapp-d3306.firebaseapp.com\",\n  databaseURL: \"https://flashcardapp-d3306.firebaseio.com\",\n  projectId: \"flashcardapp-d3306\",\n  storageBucket: \"flashcardapp-d3306.appspot.com\",\n  messagingSenderId: \"635798969664\",\n  appId: \"1:635798969664:web:562fb322eeb9d31667eea5\",\n  measurementId: \"G-XSQ0TX77TY\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth=firebase.auth();\nexport const db=firebase.firestore();\nexport const fb=firebase;\nexport const storage=firebase.storage();\n\nexport default { firebaseConfig }","/**\n * Context Provider for the current user.\n */\n\nimport React, {useState, useEffect} from 'react';\nimport { auth } from '../firebase/firebaseIndex';\n\nexport const firebaseAuth = React.createContext();\n\nconst AuthProvider = (props) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsub = auth.onAuthStateChanged((user) => {\n      user ? setUser(user) : setUser(null);\n    });\n\n    return () => unsub();\n  });\n\n  return (\n    <firebaseAuth.Provider\n      value={{\n        user\n      }}\n    >\n      {props.children}\n    </firebaseAuth.Provider>\n  )\n}\n\nexport default AuthProvider;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnDecksSnapshot = (user) => {\n  const db = firebase.firestore();\n  const [decks, setDecks] = useState([]);\n\n  // Get decks from collection where owner is the current user.\n  useEffect(() => {\n    if (!user) {\n      setDecks([]);\n      return;\n    }\n\n    let ref = db.collection('decks');\n    let unsubscribe = ref.where(\"owner\", \"==\", user.uid).onSnapshot((snapshot) => {\n      let arr = [];\n      snapshot.forEach(deck => arr.push(deck.data()));\n      setDecks(arr);\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, [user]);\n\n  return { decks };\n}\n\nexport default useOnDecksSnapshot;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnSavedDecksSnapshot = (user) => {\n    const db = firebase.firestore();\n    const [saveDecks, setDecks] = useState([]);\n    useEffect(() => {\n      if (!user) {\n        setDecks([]);\n        return;\n      }\n\n      let unsubscribe = db.collection('users').doc(user.uid).onSnapshot((snapshot) => {\n        let arr = [];\n        snapshot.data().save_decks.forEach(deck => arr.push(deck));\n        setDecks(arr)\n        localStorage.setItem('save_decks', JSON.stringify(arr))\n      }, error => console.log(\"Error: \", error.message))\n      return () => unsubscribe();\n    }, [user]);\n    return { saveDecks };\n  }\n\n  export default useOnSavedDecksSnapshot;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnAllDecksSnapshot = () => {\n  const db = firebase.firestore();\n  const [allDecks, setDecks] = useState([]);\n\n  useEffect(() => {\n    let ref = db.collection('decks');\n    let unsubscribe = ref.where(\"isPublic\", \"==\", true).onSnapshot((snapshot) => {\n      let arr = [];\n      snapshot.forEach(deck => arr.push(deck.data()));\n      setDecks(arr);\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, []);\n\n  return { allDecks };\n}\n\nexport default useOnAllDecksSnapshot;","/**\n * A modular carousel component with wrap-around and transitions.\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\n\n/* If WRAP_BUFFER is too short, wrap-around transitions\n   will be set too soon. */\nconst WRAP_BUFFER = 50;\n\nconst Carousel = ({\n  leftButtonText=\"<\",\n  rightButtonText=\">\",\n  animTime=.5,\n  items,\n  previousCallback,\n  nextCallback,\n  showButtons=true\n}) => {\n  const [index, setIndex] = useState(0);\n  const [carouselItems, setCarouselItems] = useState([]);\n  const [canSlide, setCanSlide] = useState(true);\n  const carousel = useRef(null);\n\n  // Generates the carousel items, with a cloned copy of the first and last\n  // item at the beginning and end, respectively. This facilitates\n  // smooth wrap-around transitions.\n  useEffect(() => {\n    let modifiedItems = items.map((ele) => {\n      return (\n        <div \n          className=\"carousel__item\"\n          key={ele.key}\n        >\n          {ele}\n        </div>\n      );\n    });\n\n    setCarouselItems(modifiedItems);\n  }, [items]);\n\n  const handleClick = (event) => {\n    if (!canSlide) return;\n    if (event.target.name === \"right\") {\n      if (index == carouselItems.length - 1) { return }\n      setIndex(idx => idx + 1);\n      if (nextCallback !== undefined) {\n        nextCallback(index-1);\n      }\n    } else if (event.target.name === \"left\") {\n      if (index == 0) { return }\n      setIndex(idx => idx - 1);\n      if (previousCallback !== undefined) {\n        previousCallback(index-1);\n      }\n    }\n    setCanSlide(false);\n    setTimeout(() => setCanSlide(true), animTime * 1000 + WRAP_BUFFER);\n  }\n\n  return (\n    <div className=\"carousel\">\n      <div \n        ref={carousel}\n        className=\"carousel__inner\"\n        style={{ \n          marginLeft: \"calc(-100% * \" + index + \")\",\n          width: (carouselItems.length * 100) + \"%\",\n          transition: \"margin \" + animTime + \"s\",\n       }}\n      >\n        {carouselItems}\n      </div>\n      <div className=\"spacer\"></div>\n      {showButtons &&\n        <>\n          {index > 0 && <button \n            className=\"btn-carousel left\"\n            onClick={(event) => handleClick(event)}\n            name=\"left\"\n            disabled={!canSlide}\n          >{leftButtonText}</button>}\n          {index < carouselItems.length - 1 && <button \n            className=\"btn-carousel right\"\n            onClick={(event) => handleClick(event)}\n            name=\"right\"\n            disabled={!canSlide}\n          >{rightButtonText}</button>}\n        </>\n      }\n    </div>\n  );\n}\n\nexport default Carousel;","/**\n * Displays a header with a title and optional child elements.\n */\n\nimport React from 'react';\n\nconst Header = ({\n  title,\n  children\n}) => {\n  return (\n    <header className=\"card-header\">\n      <p>\n        {title}\n      </p>\n      <div>\n        {children}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","/**\n * Displays a simple p tag.\n */\n\nimport React from 'react';\n\nconst CardContent = ({\n  text,\n  imageUrl,\n}) => {\n  return (\n    <>\n      {imageUrl && <div>\n        <img alt=\"not fount\" height={\"250px\"} src={imageUrl} />\n        <br />\n      </div>}\n      <p className=\"content\">\n        {text}\n      </p>\n    </>\n  );\n}\n\nexport default CardContent;","/**\n * Displays a flash card and its content.\n */\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReply, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport Header from '../Header';\nimport CardContent from './CardContent';\nimport { storage } from '../../firebase/firebaseIndex';\n\nconst FlippableCard = ({\n  onClick,\n  frontTitle,\n  backTitle,\n  frontText,\n  backText,\n  isFlipped,\n  setIsFlipped,\n  imageRef,\n}) => {\n  const header = (\n    <Header title={frontTitle}>\n      <button \n        className=\"btn btn-icon-small\"\n        name=\"exit\"\n        onClick={onClick}\n      >\n        <FontAwesomeIcon icon={faTimes} />&nbsp;Close\n      </button>\n    </Header>\n  );\n\n  const backHeader = React.cloneElement(header, { title: backTitle });\n\n  const footer = (\n    <footer>\n      <button \n        className=\"curl\"\n        name=\"toggle\"\n        onClick={ () => setIsFlipped(prev => !prev) }\n      >    \n        <FontAwesomeIcon icon={faReply} size=\"2x\" className=\"icon\" />\n      </button>\n    </footer>\n  );\n\n  const [imageUrl, setImageUrl] = useState(null);\n\n  useState(() => {\n    if (imageRef) {\n      console.log(imageRef);\n      storage.ref(imageRef).getDownloadURL().then((downloadURL) => {\n          setImageUrl(downloadURL)\n      });\n  }\n  },[imageRef])\n \n  return (\n    <div className={isFlipped ? \"flippable flipped\" : \"flippable\"}>\n      <div className=\"flippable__inner\">\n        <div className=\"flippable__content front\">\n          {header}\n            <CardContent text={frontText} imageUrl={imageUrl} />\n          {footer}\n        </div>\n        <div className=\"flippable__content back\">\n          {backHeader}\n            <CardContent text={backText} />\n          {footer}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FlippableCard;","/**\n * A simple loading icon.\n */\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nconst Spinner = ({\n  size=\"1x\"\n}) => {\n  return <FontAwesomeIcon icon={faSpinner} size={size} className=\"spinner\"/>\n}\n\nexport default Spinner;","/**\n * Handles logic for getting the selected deck and cards.\n * Generates FlippableCards for each card to be shown, and \n * renders them in a Carousel.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport firebase from 'firebase';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Carousel from '../Carousel';\nimport FlippableCard from './FlippableCard';\nimport Spinner from '../Spinner';\nimport { faRandom, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst Deck = ({\n  onClick,\n}) => {\n  const [cards, setCards] = useState([]);\n  const [title, setTitle] = useState('');\n  const [hashCards, setHashCards] = useState(null);\n  const [isCardFlipped, setIsCardFlipped] = useState(false);\n  const [canView, setCanView] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const { hash } = useParams();\n  const [shuffle, setShuffle] = useState(0);\n  const [cardShuffle, setCardShuffle] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    setIsLoaded(false);\n    setHashCards(null);\n    setCards(null);\n\n    console.log(hash)\n    if (hash === undefined) return;\n\n    const db = firebase.firestore();\n\n    db.collection('decks').doc(hash).get()\n      .then(snapshot => {\n        setIsLoaded(true);\n      })\n      .catch(error => {\n        setIsLoaded(true);\n        console.log(\"Error: \", error.message)\n      })\n\n    let ref = db.collection('decks').doc(hash);\n    ref.get()\n      .then(snapshot => {\n        let arr = [];\n        snapshot.data().cards?.forEach(item => arr.push(item));\n        setHashCards(arr);\n        setTitle(snapshot.data().title)\n      })\n      .catch(error => console.log(\"Error: \", error.message))\n  }, [hash]);\n\n  useEffect(() => {\n    setIsLoaded(false);\n    let _cards = [];\n\n    if (hashCards != null) {\n      _cards = hashCards;\n    } else {\n      _cards = [];\n    }\n\n    if (_cards.length > 0) {\n      setCards(_cards.map((ele) => {\n        return (\n          <FlippableCard\n            key={ele.id}\n            frontTitle=\"Front\"\n            backTitle=\"Back\"\n            frontText={ele.front}\n            backText={ele.back}\n            onClick={onClick}\n            isFlipped={isCardFlipped}\n            setIsFlipped={setIsCardFlipped}\n            imageRef={ele.imageRef}\n          />\n        )\n      }));\n      setCardShuffle(_cards.map((ele) => {\n        return (\n          <FlippableCard\n            key={ele.id}\n            frontTitle=\"Front\"\n            backTitle=\"Back\"\n            frontText={ele.front}\n            backText={ele.back}\n            onClick={onClick}\n            isFlipped={isCardFlipped}\n            setIsFlipped={setIsCardFlipped}\n            imageRef={ele.imageRef}\n          />\n        )\n      }));\n      setIsLoaded(true);\n    }\n\n  }, [isCardFlipped, onClick, hashCards]\n  );\n\n  if (!isLoaded) return (\n    <main>\n      <div className=\"container center\">\n        <Spinner />\n      </div>\n    </main>\n  );\n\n  if (!cards) return (\n    <div className=\"container center\">\n      <p>We couldn't find this deck. :(</p>\n    </div>\n  )\n\n  if (!canView || cards.length === 0) return (\n    <div className=\"container center\">\n      <p>This deck is either private or has no cards! If you are the owner, you can view it and edit it from your dashboard.</p>\n    </div>\n  );\n\n  const slideCallback = () => {\n    setIsCardFlipped(false);\n  }\n\n  const shuffleCard = (array) => {\n    let currentIndex = array.length, randomIndex;\n\n    while (currentIndex != 0) {\n\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ width: 200, display: 'flex', flexDirection: 'column', justifyContent: 'flex-end', alignItems: 'center', backgroundColor: '#DADCE2' }}>\n        <div style={{\n          position: 'absolute',\n          top: 100\n        }}>\n          {title}\n        </div>\n        <div style={{\n          background: shuffle == 0 ? 'wheat' : 'green',\n          height: 30,\n          width: 100,\n          textAlign: 'center',\n          zIndex: 1,\n          color: shuffle == 0 ? 'black' : 'white',\n          lineHeight: 2,\n          verticalAlign: 'center',\n          borderRadius: 15,\n        }} onClick={(event) => {\n          setShuffle(0)\n        }}>ソート済み</div>\n        <div style={{\n          background: shuffle != 0 ? 'wheat' : 'green',\n          height: 30,\n          width: 100,\n          textAlign: 'center',\n          zIndex: 1,\n          color: shuffle != 0 ? 'black' : 'white',\n          marginTop: 50,\n          marginBottom: 100,\n          lineHeight: 2,\n          verticalAlign: 'center',\n          borderRadius: 15,\n        }} onClick={(event) => {\n          setCardShuffle(shuffleCard(cardShuffle))\n          setShuffle(prev => prev + 1)\n        }}>ミックス</div>\n      </div>\n      <Carousel\n        items={shuffle != 0 ? cardShuffle : cards}\n        leftButtonText={<FontAwesomeIcon icon={faAngleLeft} />}\n        rightButtonText={<FontAwesomeIcon icon={faAngleRight} />}\n        animTime={.3}\n        previousCallback={slideCallback}\n        nextCallback={slideCallback}\n        showButtons={true}\n      />\n      <div style={{ width: 200, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', backgroundColor: '#DADCE2' }}>\n        <button\n          onClick={() => {\n            if (cards.length >= 4) {\n              history.push('/app/test/'+hash)\n            } else {\n              window.alert('テストを作成するには、セットに少なくとも4枚のカードが必要です')\n            }\n          }}\n          style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30 }}\n        >\n          <><FontAwesomeIcon icon={faPlus} style={{ marginRight: 5 }} /> 復習</>\n        </button>\n        <button\n          onClick={() => {\n            window.alert('機能は開発中です')\n          }}\n          style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30 }}\n        >\n          <><FontAwesomeIcon icon={faPlus} style={{ marginRight: 5 }} /> 履歴</>\n        </button>\n      </div>\n    </div>\n\n  );\n}\n\nexport default Deck;","/**\n * Methods for accessing the firestore database:\n *\n * createDeck\n * deleteDeck\n * updateDeck\n * createCard\n * updateCard\n * deleteCard\n */\n\nimport { db } from \"./firebaseIndex\";\nimport firebase from \"firebase\";\n\nexport const dbMethods = {\n  createDeck: (user, title, description, cards, isPublic = true) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const document = db.collection(\"decks\").doc();\n\n    const newDeck = {\n      id: document.id,\n      numCards: cards.length,\n      title,\n      description,\n      owner: user.uid,\n      cards: cards,\n      isPublic: isPublic,\n    };\n\n    document\n      .set(newDeck)\n      .then(console.log(\"Created new deck.\"))\n      .catch((err) => {\n        console.error(\"Error creating deck: \", err.message);\n      });\n  },\n\n  deleteDeck: (user, deckId) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    db.collection(\"decks\")\n      .doc(deckId)\n      .delete()\n      .then(console.log(\"Deck successfully deleted.\"))\n      .catch((err) => {\n        console.error(\"Error deleting deck: \", err.message);\n      });\n  },\n\n  saveDeck: (user, deck) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n    return db\n      .collection(\"users\")\n      .doc(user.uid)\n      .update({\n        save_decks: firebase.firestore.FieldValue.arrayUnion(deck),\n      })\n      .then(() => {\n        db.collection(\"decks\")\n          .doc(deck.id)\n          .update({\n            saveCount: firebase.firestore.FieldValue.increment(1)\n          })\n          .then(() => {\n            console.log(\"Updated save count number of deck with id: \", deck.id);\n          })\n          .catch((err) => {\n            console.error(\"Error updating document: \", err.message);\n          });\n        console.log(\"Updated deck with id: \", deck.id);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n\n  unsaveDeck: (user, deck) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n    return db\n      .collection(\"users\")\n      .doc(user.uid)\n      .update({\n        save_decks: firebase.firestore.FieldValue.arrayRemove({\n          id: deck.id,\n          numCards: deck.numCards,\n          owner: deck.owner,\n          title: deck.title,\n          description: deck.description,\n          cards: deck.cards,\n          isPublic: deck.isPublic,\n        }),\n      })\n      .then(() => {\n        let ref = db\n          .collection(\"decks\")\n          .doc(deck.id)\n          .get()\n          .then((doc) => {\n            if (doc.data().saveCount > 0) {\n              db.collection(\"decks\")\n                .doc(deck.id)\n                .update({\n                  saveCount: firebase.firestore.FieldValue.increment(-1),\n                })\n                .then(() => {\n                  console.log(\n                    \"Updated save count number of deck with id: \",\n                    deck.id\n                  );\n                })\n                .catch((err) => {\n                  console.error(\"Error updating document: \", err.message);\n                });\n            } else {\n              db.collection(\"decks\")\n                .doc(deck.id)\n                .update({\n                  saveCount: 0,\n                })\n                .then(() => {\n                  console.log(\n                    \"Updated save count number of deck with id: \",\n                    deck.id\n                  );\n                })\n                .catch((err) => {\n                  console.error(\"Error updating document: \", err.message);\n                });\n            }\n          })\n          .catch((err) => {\n            console.error(\"Error getting document data: \", err.message);\n          });\n        console.log(\"Updated deck with id: \", deck.id);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n\n  updateDeck: (user, deckId, title, description, cards, isPublic = true) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const updatedDeck = {\n      title,\n      description,\n      cards,\n      numCards: cards.length,\n      isPublic: isPublic,\n    };\n\n    return db\n      .collection(\"decks\")\n      .doc(deckId)\n      .update(updatedDeck)\n      .then(() => {\n        console.log(\"Updated deck with id: \", deckId);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n};\n","/**\n * Displays a text or password input, dependinding on \n * the type prop. The password input can toggle between\n * password and text types.\n */\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash, faLock } from '@fortawesome/free-solid-svg-icons';\n\nconst TextInput = ({\n  labelText,\n  icon=null,\n  type=\"text\",\n  id=\"\",\n  name=\"\",\n  placeholder=\"\",\n  value,\n  onChange,\n  autocomplete=\"on\"\n}) => {\n  const [isHidden, setIsHidden] = useState(true);\n\n  const toggleHidden = (event) => {\n    event.preventDefault();\n    setIsHidden(prev => !prev);\n  }\n\n  if (icon === null && type===\"password\")\n    icon = <FontAwesomeIcon icon={faLock} />\n\n  return (\n    <div className=\"input-block\">\n      <label htmlFor={id}>{labelText}</label>\n      <div className=\"input-row\">\n        {icon}\n        <input \n          type={type === \"password\" ? isHidden ? \"password\" : \"text\" : type}\n          name={name}\n          id={id}\n          value={value}\n          onChange={onChange}\n          style={{outline: \"none\"}}\n          autoComplete={autocomplete}\n        >\n        </input>\n        {type === \"password\" &&\n          <button\n            type=\"button\"\n            className=\"btn btn-icon\"\n            onClick={toggleHidden}\n          >\n            {isHidden ?\n              <FontAwesomeIcon icon={faEye} />\n            :\n              <FontAwesomeIcon icon={faEyeSlash} />\n            }\n          </button>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default TextInput;","/**\n * Displays a heading with a subtitle.\n */\n\nimport React from 'react';\n\nconst PageHeading = ({\n  title,\n  styles = {textAlign: 'center'}\n}) => {\n  let titleElement = null;\n  titleElement=<h1 style={styles}>{title}</h1>\n\n  return (\n    <header className=\"page-heading\">\n      {titleElement}\n    </header>\n  )\n}\n\nexport default PageHeading;","import React, { useContext, useEffect, useState } from \"react\";\nimport { storage } from \"../../firebase/firebaseIndex\";\nimport { firebaseAuth } from \"../../provider/AuthProvider\";\n\nconst UploadAndDisplayImage = ({\n    onSetImage,\n    imageRef\n}) => {\n    const [image, setImage] = useState(null);\n    const [filePath, setFilePath] = useState(imageRef);\n    const { user } = useContext(firebaseAuth);\n\n    useEffect(() => {\n        if (imageRef) {\n            console.log(imageRef);\n            storage.ref(imageRef).getDownloadURL().then((downloadURL) => {\n                setImage(downloadURL)\n            });\n            setFilePath(imageRef)\n        }\n    }, [imageRef]);\n\n    return (\n        <div style={{paddingBottom: 20}}>\n            {filePath && (\n                <div>\n                    <img alt=\"not fount\" width={\"250px\"} src={image} />\n                    <br />\n                    <button onClick={() => {\n                        const deleteTask = storage.ref(filePath).delete();\n                        deleteTask.then(() => {\n                            console.log('File deleted successfully');\n                            onSetImage(null)\n                        }).catch((error) => {\n                        });\n                    }}>Remove</button>\n                </div>\n            )}\n            <br />\n\n            <br />\n            <input\n                type=\"file\"\n                name=\"myImage\"\n                onChange={(event) => {\n                    if (filePath) {\n                        const deleteTask = storage.ref(filePath).delete();\n                        deleteTask.then(() => {\n                            console.log('File deleted successfully');\n                            onSetImage(null)\n                        }).catch((error) => {\n                            \n                        });\n                    }\n\n                    const uploadTask = storage.ref(`${user.uid}/${event.target.files[0].name}`).put(event.target.files[0]);\n                    uploadTask.on('state_changed',\n                        (snapshot) => {\n                            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                            console.log('Upload is ' + progress + '% done');\n                            switch (snapshot.state) {\n                                case 'paused':\n                                    console.log('Upload is paused');\n                                    break;\n                                case 'running':\n                                    console.log('Upload is running');\n                                    break;\n                            }\n                        },\n                        (error) => {\n                        },\n                        () => {\n                            storage.ref(`${user.uid}`).child(event.target.files[0].name).getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                                console.log('File available at', downloadURL);\n                                onSetImage(`${user.uid}/${event.target.files[0].name}`);\n                                setImage(downloadURL)\n                                setFilePath(`${user.uid}/${event.target.files[0].name}`)\n                            });\n                        }\n                    );\n                }}\n            />\n        </div>\n    );\n};\n\nexport default UploadAndDisplayImage;","/**\n * Handles displaying each card editor.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport UploadAndDisplayImage from './UploadAndDisplayImage';\n\nconst CardEditor = ({\n  index,\n  card,\n  onSubmit,\n  onUpdate,\n  onDelete\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    setFront(card.front);\n    setBack(card.back);\n    setImage(card.imageRef);\n  }, [card])\n\n  const handleInput = (event) => {\n    if (event.target.name === \"front\") {\n      setFront(event.target.value);\n    } else if (event.target.name === \"back\") {\n      setBack(event.target.value);\n    }\n  }\n\n  const updateCard = (event) => {\n    event.preventDefault();\n    console.log(\"Card to update: \", card.id);\n    onUpdate(index, front, back, image)\n    onSubmit();\n  }\n\n  const deleteCard = (event) => {\n    event.preventDefault();\n    onDelete(index)\n  }\n\n  return (\n    <form className=\"card-editor\" onSubmit={updateCard}>\n      <div className=\"input-block\">\n        <textarea\n          name=\"front\"\n          id={card.id + \"-front\"}\n          value={front}\n          onChange={handleInput}\n        />\n        <label htmlFor={card.id + \"-front\"}>Front</label>\n      </div>\n      <div className=\"input-block\">\n        <textarea\n          name=\"back\"\n          id={card.id + \"-back\"}\n          value={back}\n          onChange={handleInput}\n        />\n        <label htmlFor={card.id + \"-back\"}>Back</label>\n      </div>\n      <UploadAndDisplayImage onSetImage={(image)=>{\n        setImage(image);\n      }} imageRef={image}/>\n      <button className=\"btn\">Update</button>\n      <button className=\"btn btn-warning\"\n        onClick={deleteCard}\n      >\n        <FontAwesomeIcon icon={faTrash} /> Delete card\n      </button>\n    </form>\n  );\n}\n\nexport default CardEditor;","/**\n * Renders the toggleable card creator box.\n */\n\nimport React, { useState } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport UploadAndDisplayImage from './UploadAndDisplayImage';\n\nconst CardCreator = ({\n  onCreateCard\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  const handleInput = (event) => {\n    if (event.target.name === \"front\") {\n      setFront(event.target.value);\n    } else if (event.target.name === \"back\") {\n      setBack(event.target.value);\n    }\n  }\n\n  const createCard = (event) => {\n    event.preventDefault();\n    console.log(\"Creating new card.\");\n    onCreateCard(front, back, image);\n    setFront(\"\");\n    setBack(\"\");\n    setImage(null);\n    setIsOpen(false);\n  }\n\n  if (!isOpen) return (\n    <button className=\"btn btn-tertiary\"\n      onClick={() => setIsOpen(true)}\n    >\n      Add card <FontAwesomeIcon icon={faPlus} className=\"icon\" />\n    </button>\n  );\n\n  return (\n    <>\n      <button id=\"add\" className=\"btn btn-tertiary highlighted\"\n        onClick={() => setIsOpen(false)}\n      >\n        Add card <FontAwesomeIcon icon={faMinus} className=\"icon\"/>\n      </button>\n      <form className=\"card-editor\" onSubmit={createCard}>\n        <div className=\"input-block\">\n          <textarea\n            name=\"front\"\n            id=\"new-front\"\n            value={front}\n            onChange={handleInput}\n          />\n          <label htmlFor=\"new-front\">Front</label>\n        </div>\n        <div className=\"input-block\">\n          <textarea\n            name=\"back\"\n            id=\"new-back\"\n            value={back}\n            onChange={handleInput}\n            style={{outline: \"none\"}}\n          />        \n          <label htmlFor=\"new-back\">Back</label>\n        </div>\n        <UploadAndDisplayImage onSetImage={(image)=>{\n            setImage(image);\n        }} imageRef={image}/>\n        <button className=\"btn\">Create</button>\n      </form>\n    </>\n  );\n}\n\nexport default CardCreator;","/**\n * Generates and displays all the toggleable card editor boxes\n * in an accordion.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\n\nimport CardEditor from './decks-and-cards/CardEditor';\nimport CardCreator from './decks-and-cards/CardCreator';\n\nconst Accordion = ({\n  listCards,\n  onCards,\n}) => {\n  const [cards, setCards] = useState(listCards || []);\n  const [card, setCard] = useState(-1);\n  const [cardEditorElements, setCardEditorElements] = useState([]);\n\n  const handleClick = (event) => {\n    console.log(event.target.value)\n    setCard(prev => prev === event.target.value ? -1 : event.target.value);\n  }\n\n  const onCreateCard = (front, back, imageRef) => {\n    let newCard = {front: front, back: back, imageRef: imageRef}\n    console.log(28888, newCard);\n    cards.push(newCard)\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  const onDeleteCard = (index) => {\n    cards.splice(index, 1);\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  const onUpdateCard = (index, front, back, imageRef) => {\n    cards[index] = {front: front, back: back, imageRef: imageRef};\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  useEffect(() => {\n    setCards(listCards)\n  },[listCards])\n\n  useEffect(() => {\n    updateElements()\n  }, [card, cards]);\n\n  const updateElements = () => {\n    const elements = cards.map( (ele, index) => {\n      let classes = index === card ? \"btn btn-tertiary highlighted\" : \"btn btn-tertiary\";\n      console.log(index)\n      console.log(ele);\n      return (\n        <React.Fragment key={index} >\n          <button \n            className={classes}\n            value={index}\n            onClick={handleClick}\n          >\n            <span className=\"truncate\">\"{ele.front}\"</span> \n            {card === `${index}` ?\n              <FontAwesomeIcon icon={faAngleUp} />\n            :\n              <FontAwesomeIcon icon={faAngleDown} />\n            }\n          </button>\n          {card === `${index}` && \n            <CardEditor\n              index={index}\n              card={ele}\n              onSubmit={() => setCard(\"\")}\n              onDelete={onDeleteCard}\n              onUpdate={onUpdateCard}\n            />\n          }\n        </React.Fragment>\n      )\n    })\n\n    setCardEditorElements(elements);\n  }\n\n  return (\n    <>\n      {cardEditorElements}\n      <CardCreator\n        onCreateCard={onCreateCard}\n      />\n    </>\n  );\n}\n\nexport default Accordion;","/**\n * Handles the creation of new decks.\n */\n\nimport React, { useState, useContext } from 'react';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { useHistory } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook, faPaperclip } from '@fortawesome/free-solid-svg-icons';\n\nimport TextInput from '../TextInput';\nimport PageHeading from '../PageHeading';\nimport Accordion from '../Accordion';\n\nconst DeckCreator = () => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n  const [listCards, setListCards] = useState([]);\n  const [isPublic, setIsPublic] = useState(true);\n\n  const createDeck = () => {\n    dbMethods.createDeck(user, title, description, listCards, isPublic);\n    setUpdateSuccess(true);\n    history.push(\"/app\");\n  }\n\n  const onUpdateCards = (cards) => {\n    setListCards(cards)\n  }\n\n  const onUpdateDecks = (event) => {\n    createDeck();\n  }\n\n  return (\n    <div style={{textAlign: 'left'}}>\n      <form \n      id=\"new-deck\" \n      onSubmit={createDeck}\n    >\n      <TextInput \n        labelText=\"題名\"\n        icon={<FontAwesomeIcon icon={faPaperclip} />}\n        id=\"title\"\n        name=\"title\"\n        value={title}\n        onChange={(event) => setTitle(event.target.value)}\n        autocomplete=\"off\"\n      />\n      <TextInput \n        labelText=\"説明\"\n        icon={<FontAwesomeIcon icon={faBook} />}\n        id=\"description\"\n        name=\"description\"\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n        autocomplete=\"off\"\n      />\n      <input\n        id=\"public\"\n        name=\"public\"\n        type=\"checkbox\"\n        checked={isPublic ? false : true}\n        onChange={() => setIsPublic(!isPublic)}\n      />\n      <label htmlFor=\"public\">\n        <span></span>\n        私だけが編集する権利を持っています?\n      </label>\n    </form>\n      <div>\n        <PageHeading \n          title=\"カード\"\n          styles={{textAlign: 'left'}}\n        />\n        <Accordion\n          listCards={listCards}\n          onCards={onUpdateCards}\n        />\n      </div>\n      <button className=\"btn btn-primary\" onClick={onUpdateDecks}>\n          {updateSuccess ? \"Success!\" : \"作成\" }\n      </button>\n    </div>\n  );\n}\n\nexport default DeckCreator;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { useHistory } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook, faHeading, faPaperclip } from '@fortawesome/free-solid-svg-icons';\n\nimport Accordion from '../Accordion';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\nimport firebase from 'firebase';\n\nconst DeckEditor = ({\n  deckToEdit,\n  setDeckToEdit,\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n  const localDeck = JSON.parse(localStorage.getItem('deck'))\n  const deck = deckToEdit || localDeck;\n  const [title, setTitle] = useState(deck.title);\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n  const [description, setDescription] = useState(deck.description);\n  const [listCards, setListCards] = useState([])\n  console.log(deck);\n  const [isPublic, setIsPublic] = useState(deck.isPublic ?? true);\n\n  const updateDeck = () => {\n    dbMethods.updateDeck(user, deck.id, title, description, listCards, isPublic)\n    setDeckToEdit({...deckToEdit, title});\n    setUpdateSuccess(true);\n    setTimeout(() => setUpdateSuccess(false), 3000);\n  }\n\n  const deleteDeck = (event) => {\n    event.preventDefault();\n    dbMethods.deleteDeck(user, deck.id);\n    history.push('/app');\n    setDeckToEdit(null);\n  }\n\n  const db = firebase.firestore();\n\n  useEffect(() => {\n    if (!deck) {\n      return\n    }\n    console.log(deck)\n    let ref = db.collection('decks').doc(deck.id);\n    ref.get()\n      .then(snapshot => {\n        let arr = [];\n        snapshot.data().cards?.forEach(item => arr.push(item));\n        setListCards(arr);\n      })\n      .catch(error => console.log(\"Error: \", error.message))\n  }, [])\n\n  const onUpdateCards = (cards) => {\n    setListCards(cards)\n  }\n\n  const onUpdateDecks = (event) => {\n    updateDeck();\n  }\n\n  return (\n    <div style={{textAlign: 'left'}}>\n      <PageHeading\n        title=\"セットを編集する\"\n        styles={{textAlign: 'left'}}\n      />\n      <form onSubmit={updateDeck}>\n        <TextInput \n          labelText=\"題名\"\n          icon={<FontAwesomeIcon icon={faPaperclip} />}\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          placeholder=\"New Deck\"\n          autocomplete=\"off\"\n        />\n        <TextInput \n        labelText=\"説明\"\n        icon={<FontAwesomeIcon icon={faBook} />}\n        id=\"description\"\n        name=\"description\"\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n        autocomplete=\"off\"\n        />\n        <input\n        id=\"public\"\n        name=\"public\"\n        type=\"checkbox\"\n        checked={isPublic ? false : true}\n        onChange={() => setIsPublic(!isPublic)}\n      />\n      <label htmlFor=\"public\">\n        <span></span>\n        私だけが編集する権利を持っています?\n      </label>\n      </form>\n      <div>\n        <PageHeading \n          title=\"カード\"\n          styles={{textAlign: 'left'}}\n        />\n        <Accordion\n          listCards={listCards}\n          onCards={onUpdateCards}\n        />\n      </div>\n      <button\n          className=\"btn btn-primary\"\n          onClick={onUpdateDecks}\n        >\n          {updateSuccess ? \"Success!\" : \"編集\" }\n        </button>\n      <div>\n        <PageHeading \n          title=\"デッキを削除する\"\n          styles={{textAlign: 'left'}}\n        />\n        <form onSubmit={deleteDeck}>\n          <button\n            className=\"btn btn-warning\"\n          >削除する</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default DeckEditor;","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faSave, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { db } from '../../firebase/firebaseIndex';\n\nconst SelectableDeck = ({\n  toggleDeck,\n  setSelectedDecks,\n  length,\n  deck,\n  setDeckToEdit,\n  mine\n}) => {\n  const history = useHistory();\n  const {user} = useContext(firebaseAuth)\n  const [saved, setSaved] = useState(false);\n  const savedDecksRaw = localStorage.getItem('save_decks')\n\n  useEffect(() => {\n    setSaved(isSaved())\n  },[])\n\n  const isSaved = () => {\n    if (!savedDecksRaw || savedDecksRaw.length == 0) {\n      return false\n    }\n    let savedDecks = JSON.parse(savedDecksRaw)\n    if (!savedDecks || savedDecks.length == 0) {\n      return false\n    }\n    let filterArray = savedDecks.filter(item => item.id == deck.id)\n    return (filterArray && filterArray.length > 0)\n  }\n\n  return (\n    <li style={{background: '#EAB2AE', marginBottom: 20, borderRadius: 10}}\n      // className={selectedDecks?.includes(id) ? \"selected\" : \"\"}\n      // onClick={(event) => {\n      //   event.stopPropagation();\n      //   toggleDeck(id);\n      // }}\n      // role=\"checkbox\"\n      // aria-checked={selectedDecks?.includes(id) ? \"true\" : \"false\"}\n    >\n      <div\n        onClick={() => {\n          history.push('/app/d/'+deck.id)\n        }}\n      >\n        {/* <input\n          name={id}\n          type=\"checkbox\"\n          checked={selectedDecks?.includes(id)}\n          onChange={() => null}\n        /> */}\n        <label htmlFor=\"checkbox\" className=\"truncate\">\n          <span></span>\n          <strong>{deck.title}</strong> ({length} {\"カード\"})\n          \n        </label>\n      </div>\n      <div>\n      <span>保存する人の数:&nbsp;</span><span style={{fontWeight: '700'}}>{deck.saveCount}</span>\n      </div>\n      <div className=\"button-row\">\n        {mine ? <button \n          className=\"btn btn-icon\"\n          style={{color: 'black'}}\n          onClick={(event) => {\n            event.stopPropagation();\n            setDeckToEdit();\n            localStorage.setItem('deck', JSON.stringify(deck));\n            history.push(\"/app/edit\");\n          }}\n        >\n          <FontAwesomeIcon icon={faEdit} /> 編集する\n        </button>\n        : <button \n        className=\"btn btn-icon\"\n        style={{color: 'black'}}\n        onClick={(event) => {\n          event.stopPropagation();\n          if (saved) {\n            console.log(deck)\n            dbMethods.unsaveDeck(user, deck)\n            setSaved(false)\n          } else {\n            dbMethods.saveDeck(user, deck)\n            setSaved(true)\n          }\n        }}\n      >\n        <FontAwesomeIcon icon={saved ? faTrash : faSave} /> {saved ? \"削除する\" : \"保存する\"}\n      </button>\n        }\n      </div>\n    </li>\n  );\n}\n\nexport default SelectableDeck;","import React, { useState, useEffect, useContext } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport SelectableDeck from './SelectableDeck';\n\nfunction Items({ currentItems, user, setDeckToEdit}) {\n  return (\n    <React.Fragment>\n        {currentItems}\n    </React.Fragment>\n  );\n}\n\nfunction PaginatedItems({ itemsPerPage, decks, user, setDeckToEdit}) {\n  // We start with an empty list of items.\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    setCurrentItems(decks.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(decks.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage, decks]);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    const newOffset = event.selected * itemsPerPage % decks.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  return (\n    <>\n      <Items currentItems={currentItems} user={user} />\n      <ReactPaginate\n        nextLabel=\"next >\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={2}\n        pageCount={pageCount}\n        previousLabel=\"< previous\"\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel=\"...\"\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n}\n\nconst DeckList = ({\n  decks,\n  setDeckToEdit,\n}) => {\n  const [deckList, setDeckList] = useState([]);\n  const { user } = useContext(firebaseAuth);\n\n  useEffect(() => {\n    if (!decks) {return}\n    setDeckList(decks.map(deck => {\n      return (\n        <SelectableDeck \n          key={deck.id}\n          length={deck.numCards}\n          deck={deck}\n          mine={user && deck.owner == user.uid}\n          setDeckToEdit={() => {\n            setDeckToEdit({ id: deck.id, title: deck.title, private: deck.private, description: deck.description, isPublic: deck.isPublic });\n          }}\n        />\n      );}\n    ));\n  }, [decks]);\n\n  useEffect(() => {\n  }, [deckList])\n\n  return (\n    <div className=\"deck-list\">\n      <ul>\n        {deckList.length > 0 ? \n          <PaginatedItems itemsPerPage={4} decks={deckList} user={user} setDeckToEdit={setDeckToEdit}/>\n        :\n          <p>セットがありません。 作成して開始してください！</p>\n        }\n      </ul>\n      \n    </div>\n  );\n}\n\nexport default DeckList;"," import React, { useState, useContext, useEffect } from 'react';\n import { Link, Switch, Route, useHistory } from 'react-router-dom';\n import { firebaseAuth } from '../provider/AuthProvider';\n  \n import DeckList from './decks-and-cards/DeckList';\n import PageHeading from './PageHeading';\n \n const SavedDecks = ({\n   saveDecks,\n }) => {\n   const { user } = useContext(firebaseAuth);\n   const history = useHistory();\n \n   if (!user) {\n     history.push(\"/log-in\");\n   }\n \n   return (\n     <div className=\"dashboard\">\n         <Switch>\n           <Route path=\"/app/saved\">\n             <div style={{ display: 'flex' }}>\n               <div style={{ width: '100%', margin: '0 auto', paddingRight: 30 }}>\n                 <PageHeading\n                   title=\"保存したセット\"\n                 />\n                 <div>\n                   <DeckList\n                     decks={saveDecks}\n                   />\n                 </div>\n               </div>\n             </div>\n           </Route>\n         </Switch>\n     </div>\n   );\n }\n \n export default SavedDecks;","/**\n * Displays the dashboard page.\n */\n\n import React, { useState, useContext, useEffect } from 'react';\n import { Link, Switch, Route, useHistory } from 'react-router-dom';\n import { firebaseAuth } from '../provider/AuthProvider';\n \n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n import { faPlus } from '@fortawesome/free-solid-svg-icons';\n \n import DeckCreator from './decks-and-cards/DeckCreator';\n import DeckEditor from './decks-and-cards/DeckEditor';\n import DeckList from './decks-and-cards/DeckList';\n import PageHeading from './PageHeading';\n \n const CreatedDecks = ({\n   decks,\n   cards,\n }) => {\n   const [deckToEdit, setDeckToEdit] = useState(null);\n   const { user } = useContext(firebaseAuth);\n   const history = useHistory();\n \n   if (!user) {\n     history.push(\"/log-in\");\n   }\n \n   return (\n     <div className=\"dashboard\">\n         <Switch>\n           <Route path=\"/app/edit\">\n             <DeckEditor\n               deckToEdit={deckToEdit}\n               setDeckToEdit={setDeckToEdit}\n               cards={cards}\n             />\n           </Route>\n           <Route path=\"/app/create\">\n             <PageHeading \n               title=\"新セット\"\n             />\n             <DeckCreator />\n           </Route>\n           <Route path=\"/app/created\">\n             <div style={{ display: 'flex' }}>\n               <div style={{ width: '100%', margin: '0 auto', paddingRight: 30 }}>\n                 <PageHeading\n                   title=\"作ったセット\"\n                 />\n                 <div>\n                   <DeckList\n                     decks={decks}\n                     setDeckToEdit={setDeckToEdit}\n                   />\n                 </div>\n               </div>\n               <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', paddingTop: 100, paddingLeft: 60, width: 200}}>\n                 <button\n                   onClick={() => {\n                     history.push('/app/create')\n                   }}\n                   style={{color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30}}\n                 >\n                   <><FontAwesomeIcon icon={faPlus} style={{marginRight: 5}} /> 新作</>\n                 </button>\n               </div>\n             </div>\n           </Route>\n         </Switch>\n     </div>\n   );\n }\n \n export default CreatedDecks;","/**\n * Handles logic for getting the selected deck and cards.\n * Generates FlippableCards for each card to be shown, and \n * renders them in a Carousel.\n */\n\n import React, { useState, useEffect } from 'react';\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n import { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\n import firebase from 'firebase';\n \n import { useParams } from 'react-router-dom';\n \n import Carousel from '../Carousel';\n import FlippableCard from './FlippableCard';\n import Spinner from '../Spinner';\n \n const shuffleCard = (array) => {\n    let currentIndex = array.length, randomIndex;\n\n    while (currentIndex != 0) {\n\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n const Test = ({ \n   onClick,\n }) => {\n   const [cards, setCards] = useState([]);\n   const [hashCards, setHashCards] = useState(null);\n   const [isCardFlipped, setIsCardFlipped] = useState(false);\n   const [canView, setCanView] = useState(true);\n   const [isLoaded, setIsLoaded] = useState(false);\n   const { hash } = useParams();\n   const [correctAnswer, setCorrectAnswer] = useState([]);\n   const [selectedAnswer, setSelectedAnswer] = useState([]);\n   const [result, setResult] = useState();\n \n   useEffect(() => {\n     setIsLoaded(false);\n     setHashCards(null);\n     setCards(null);\n \n     console.log(hash)\n     if (hash === undefined) return;\n \n     const db = firebase.firestore();\n \n     db.collection('decks').doc(hash).get()\n     .then(snapshot => {\n       setIsLoaded(true);\n     })\n     .catch(error => {\n       setIsLoaded(true);\n       console.log(\"Error: \", error.message)\n     })\n \n     let ref = db.collection('decks').doc(hash);\n     ref.get()\n       .then(snapshot => {\n         let arr = [];\n         snapshot.data().cards?.forEach(item => arr.push(item));\n         setHashCards(arr);\n       })\n       .catch(error => console.log(\"Error: \", error.message))\n   }, [hash]);\n \n   useEffect(() => {\n     setIsLoaded(false);\n     let _cards = [];\n \n     if (hashCards != null) {\n       _cards = hashCards;\n     } else {\n       _cards = [];\n     }\n \n     let _listCorrectAnswer = [];\n     if (_cards.length > 0) {\n       setCards(_cards.map((ele, cardIndex) => {\n        const question = ele.front\n        let answers = [];\n        answers.push(ele.back);\n        while (answers.length < 4) {\n            const randomIndex = Math.floor(Math.random() * _cards.length);\n            if (!answers.includes(_cards[randomIndex].back)) {\n                answers.push(_cards[randomIndex].back)\n            }\n        }\n        shuffleCard(answers);\n        for (let index = 0; index < answers.length; index++) {\n            const element = answers[index];\n            if (element == ele.back) {\n                _listCorrectAnswer.push(index)\n            }\n        }\n        return {\n            question: question,\n            answers: answers,\n        }\n       }));\n       setCorrectAnswer(_listCorrectAnswer);\n       setSelectedAnswer(Array(_listCorrectAnswer.length).fill(-1))\n       setIsLoaded(true);\n     }\n\n     }, [isCardFlipped, onClick, hashCards]\n   );\n \n   if (!isLoaded) return (\n     <main>\n       <div className=\"container center\">\n         <Spinner />\n       </div>\n     </main>\n   );\n \n   if (!cards) return (\n     <div className=\"container center\">\n       <p>We couldn't find this deck. :(</p>\n     </div>\n   )\n \n   if (!canView || cards.length === 0) return (\n       <div className=\"container center\">\n         <p>This deck is either private or has no cards! If you are the owner, you can view it and edit it from your dashboard.</p>\n       </div>\n   );\n\n   const _generateListQuestion = () => {\n       return cards.map((ele, cardIndex) => {\n         return (\n            <div style={{\n                border: '1px solid rgba(0, 0, 0, 0.5)', \n                borderRadius: 20,\n                width: '100%',\n                marginBottom: 30,\n                padding: 30}}>\n                    <div style={{\n                        width: '100%',\n                        textAlign: 'center'\n                    }}>\n                        {ele?.question}\n                    </div>\n                {ele?.answers?.map((element, index)=> {\n                    return <div style={{\n                        height: 30,\n                        width: '80%',\n                        marginLeft: '10%',\n                        marginBottom: 10,\n                        marginTop: 10,\n                        border: '1px solid rgba(0, 0, 0, 0.2)', \n                        borderRadius: 20,\n                        textAlign: 'center',\n                        lineHeight: 2,\n                        verticalAlign: 'center',\n                        backgroundColor: index == selectedAnswer[cardIndex] ? 'green' : 'white',\n                    }} onClick={(event) => {\n                     const newAnswer = [\n                         ...selectedAnswer.slice(0, cardIndex),\n                         index, \n                         ...selectedAnswer.slice(cardIndex + 1)\n                       ]\n                     setSelectedAnswer(newAnswer)\n                    }}>\n                        <div style={{color: index == selectedAnswer[cardIndex] ? 'white' : 'black',}}>\n                            {element}\n                        </div>\n                    </div>\n                })}\n            </div>\n         )\n       })\n   }\n\n   return (\n\n    <div>\n        {result != null && <div style={{\n            fontSize: 50,\n            marginBottom: 30,\n\n        }}>{`結果: ${result}/${cards.length}`}</div>}\n        {_generateListQuestion()}\n        <div style={{\n            height: 50,\n            width: '80%',\n            marginLeft: '10%',\n            backgroundColor: '#526CC6',\n            color: 'white',\n            fontSize: 26,\n            textAlign: 'center',\n            lineHeight: 2,\n            verticalAlign: 'center',\n            borderRadius: 25,\n        }} onClick={(event) => {\n            let totalResult = 0\n            for (let index = 0; index < selectedAnswer.length; index++) {\n                const selected = selectedAnswer[index];\n                const correct = correctAnswer[index];\n                if (selected == correct) {\n                    totalResult += 1;\n                }\n            }\n            setResult(totalResult);\n        }}>Submit</div>\n    </div>\n   );\n }\n \n export default Test;","/**\n * Displays the dashboard page.\n */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRandom, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from './Breadcrumb';\nimport DeckCreator from './decks-and-cards/DeckCreator';\nimport DeckEditor from './decks-and-cards/DeckEditor';\nimport DeckList from './decks-and-cards/DeckList';\nimport PageHeading from './PageHeading';\nimport SavedDecks from './SavedDecks';\nimport CreatedDecks from './CreatedDecks';\nimport Deck from './decks-and-cards/Deck';\nimport Test from './decks-and-cards/Test';\n\nconst Dashboard = ({\n  onClick,\n  decks,\n  saveDecks,\n  cards,\n}) => {\n  const [deckToEdit, setDeckToEdit] = useState(null);\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n\n  const handleButtons = (event) => {\n    switch (event.target.name) {\n      case \"exit\":\n        if (user) {\n          history.push(\"/app\");\n          return;\n        }\n        history.push(\"/\");\n        return;\n      default:\n        return;\n    }\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <Switch>\n        <Route path=\"/app/edit\">\n          <DeckEditor\n            deckToEdit={deckToEdit}\n            setDeckToEdit={setDeckToEdit}\n            cards={cards}\n          />\n        </Route>\n        <Route path=\"/app/create\">\n          <PageHeading\n            title=\"新セット\"\n            styles={{textAlign: 'left'}}\n          />\n          <DeckCreator />\n        </Route>\n        <Route path=\"/app/saved\">\n          <SavedDecks\n            saveDecks={saveDecks}\n          />\n        </Route>\n        <Route path=\"/app/created\">\n          <CreatedDecks\n            decks={decks}\n            cards={cards}\n          />\n        </Route>\n        <Route path=\"/app/d/:hash\">\n          <Deck \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app/test/:hash\">\n          <Test \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app\">\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '50%', margin: '0 auto', paddingRight: 30 }}>\n              <PageHeading\n                title=\"作ったセット\"\n              />\n              <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                <div>\n                  <DeckList\n                    //decks={decks.slice(0, 3)}\n                    decks={decks}\n                    setDeckToEdit={setDeckToEdit}\n                  />\n                </div>\n                {decks.length > 3 &&\n                  <div style={{ display: 'flex', justifyContent: 'end' }}>\n                    <button\n                      id=\"shuffle\"\n                      name=\"shuffle\"\n                      onClick={() => {\n                        history.push('/app/created')\n                      }}\n                      style={{ color: 'black', background: 'transparent', border: 'unset', fontSize: 20 }}\n                    > もっと見る\n                    </button>\n                  </div>}\n              </div>\n            </div>\n            <div style={{ width: '50%', margin: '0 auto', paddingLeft: 30 }}>\n              <PageHeading\n                title=\"保存したセット\"\n              />\n              <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                <div>\n                  <DeckList\n                    //decks={saveDecks.slice(0, 3)}\n                    decks={saveDecks}\n                  />\n                </div>\n                {saveDecks.length > 3 &&\n                  <div style={{ display: 'flex', justifyContent: 'end' }}>\n                    <button\n                      id=\"shuffle\"\n                      name=\"shuffle\"\n                      onClick={() => {\n                        history.push('/app/saved')\n                      }}\n                      style={{ color: 'black', background: 'transparent', border: 'unset', fontSize: 20 }}\n                    > もっと見る\n                    </button>\n                  </div>\n                }\n              </div>\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', paddingTop: 100, paddingLeft: 60, width: 200 }}>\n              <button\n                onClick={() => {\n                  history.push('/app/create')\n                }}\n                style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30 }}\n              >\n                <><FontAwesomeIcon icon={faPlus} style={{ marginRight: 5 }} /> 新作</>\n              </button>\n            </div>\n          </div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Dashboard;","import React, { useContext, useState } from 'react';\nimport { Link, useHistory, Switch, Route } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nimport PageHeading from './PageHeading';\nimport DeckList from './decks-and-cards/DeckList';\nimport DeckEditor from './decks-and-cards/DeckEditor';\n\nconst Home = ({\n  allDecks,\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const [deckToEdit1, setDeckToEdit] = useState(null);\n  const history = useHistory();\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n  console.log(18888, allDecks);\n  return (\n    <Switch>\n      <Route path=\"/app-edit\" >\n        <DeckEditor\n          deckToEdit={deckToEdit1}\n          setDeckToEdit={setDeckToEdit}\n        />\n      </Route>\n      <Route path=\"/\">\n        <>\n          <header className=\"hero\">\n            <section>\n              <div className=\"hero-content\">\n                <div className=\"buttons\">\n                  <>\n                    <Link\n                      className=\"btn btn-cta\"\n                      to=\"/app\"\n                    >\n                      ダッシュボード\n                    </Link>\n                  </>\n                </div>\n              </div>\n            </section>\n            <div className=\"card-design\">\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          </header>\n\n          <section className=\"public-decks\">\n            <div>\n              <PageHeading\n                title=\"全てセット\"\n              />\n              <div style={{textAlign: 'left'}}>\n                <DeckList\n                  decks={allDecks}\n                  setDeckToEdit={setDeckToEdit}\n                />\n              </div>\n            </div>\n          </section>\n        </>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Home;","/**\n * Hook for user authentication and account management:\n * \n * Logging user in\n * Signing user up\n * Logging user out\n * Updating user email\n * Changing user password\n * Deleting account\n */\n\nimport { useState, useEffect, useContext } from 'react';\nimport { auth, db, fb } from '../firebase/firebaseIndex';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nconst useAuth = (username = null, email = null, password = null, newPassword = null, avatarUrl = null) => {\n  const { user } = useContext(firebaseAuth);\n\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(\"pending\");\n\n  const [login, setLogin] = useState(0);\n  const [signup, setSignup] = useState(0);\n  const [logout, setLogout] = useState(0);\n  const [changeEmail, setChangeEmail] = useState(0);\n  const [changePassword, setChangePassword] = useState(0);\n  const [deleteAccount, setDeleteAccount] = useState(0);\n\n  // Logging user in\n  useEffect(() => {\n    if (login === 0 || user != null) return;\n    setError(null);\n    setStatus(\"loading\");\n    auth.signInWithEmailAndPassword(email, password)\n    .then((userCredential) => {\n      let _user = userCredential.user;\n      setUserData(_user);\n      setStatus(\"success\");\n    })\n    .catch((error) => {\n      console.error(\"Error logging user in: \", error.message);\n      setError(error);\n      setStatus(\"error\");\n    })\n  }, [login]);\n\n  // Signing user up\n  useEffect(() => {\n    if (signup === 0 || user != null) return;\n    setError(null);\n    setStatus(\"loading\");\n    auth.createUserWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        let _user = userCredential.user;\n        db.collection('users').doc(_user.uid).set({\n          save_decks: []\n        });\n        userCredential.user.updateProfile({displayName: username})\n        setUserData(_user);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        console.error(\"Error signing user in: \", error.message);\n        setError(error);\n        setStatus(\"error\");\n      })\n\n  }, [signup]);\n\n  // Logging user out\n  useEffect(() => {\n    if (logout === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    auth.signOut()\n    .then(() => {\n      console.log(\"Logged out\");\n      setUserData(null);\n      localStorage.removeItem('deck')\n      localStorage.removeItem('save_decks')\n      setStatus(\"success\");\n    })\n    .catch(error => {\n      console.error(\"Error logging user out: \", error.message);\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [logout]);\n\n  useEffect(() => {\n    if (changeEmail === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\")\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      console.log(\"User successfully reauthenticated.\");\n      auth.currentUser.updateEmail(email)\n      .then(() => {\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n      setStatus(\"loading\")\n      auth.currentUser.updateProfile({displayName: username, photoURL: avatarUrl})\n      .then(() => {\n        setUserData(auth.currentUser);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [changeEmail]);\n\n  // Changing password\n  useEffect(() => {\n    if (changePassword === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n    \n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      console.log(\"User successfully reauthenticated.\");\n      auth.currentUser.updatePassword(newPassword).then(function() {\n        setStatus(\"success\");\n      }).catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [changePassword])\n\n  // Delete account\n  useEffect(() => {\n    if (deleteAccount === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n\n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      auth.currentUser.delete().then(() => {\n        setStatus(\"success\");\n      }).catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      })\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    });\n\n  }, [deleteAccount])\n\n  const handleLogin = () => setLogin(prev => prev + 1);\n  const handleSignup = () => setSignup(prev => prev + 1);\n  const handleLogout = () => setLogout(prev => prev + 1);\n  const handleChangeEmail = () => setChangeEmail(prev => prev + 1);\n  const handleChangePassword = () => setChangePassword(prev => prev + 1);\n  const handleDeleteAccount = () => setDeleteAccount(prev => prev + 1);\n  const resetStatus = () => setStatus('pending');\n\n  return { \n    userData, \n    error, \n    status,\n    handleLogin, \n    handleSignup, \n    handleLogout,\n    handleChangeEmail,\n    handleChangePassword,\n    handleDeleteAccount,\n    resetStatus\n  };\n}\n\nexport default useAuth;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst Login = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n  const [inputs, setInputs] = useState({ email: \"\", password: \"\" });\n\n  const { status, error, handleLogin} = useAuth(null, inputs.email, inputs.password);\n  const { user } = useContext(firebaseAuth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleLogin();\n  }\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/app\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/user-not-found\":\n        setErrorMessage(\"メールアドレスとパスワードが一致しません。\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"メールアドレスとパスワードが一致しません。\");\n        return;\n      case \"auth/invalid-email\":\n        setErrorMessage(\"有効なメールアドレスを入力してください。\");\n        return;\n      default:\n        setErrorMessage(\"何かがうまくいかなかった。もう一度やり直してください。\");\n        return;\n    }\n\n  }, [error]);\n\n  return (\n    <div className=\"login\" style={{textAlign: 'center'}}>\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', marginRight: 200}}>\n        <div style={{display: 'flex', paddingRight: 50, fontSize: 25, alignItems: 'center'}}>\n          <Link to=\"/sign-up\">サインアップ</Link>\n        </div>\n        <PageHeading \n          title=\"ログイン\"\n        />\n      </div>\n      <form style={{display: 'inline-block'}} onSubmit={handleSubmit}>\n        <TextInput \n          labelText=\"メールアドレス\"\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n          id=\"email\"\n          name=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          placeholder=\"メールアドレス\"\n        />\n        <TextInput \n          labelText=\"パスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button \n          className=\"btn btn-primary\"\n          style={{backgroundColor: '#526CC6', borderColor: 'unset', borderRadius: 20, borderWidth: 0}}\n          disabled={inputs.password === \"\" || inputs.email === \"\"}        \n        >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"ログイン\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;","/**\n * Displays a spinner for 1 second when logging out.\n */\n\nimport React, { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport useAuth from '../../hooks/useAuth';\n\nimport Spinner from '../Spinner';\n\nconst Logout = () => {\n  const { user } = useContext(firebaseAuth);\n  const { handleLogout } = useAuth()\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!user) return;\n    handleLogout();\n    setTimeout(() => history.push(\"/\"), 1000);\n  }, [user]);\n\n  return (\n    <div className=\"container center\">\n      <p><Spinner /> Logging out . . .</p>\n    </div>\n  );\n}\n\nexport default Logout;","/**\n * Displays the update password page.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from '../Breadcrumb';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst ChangePassword = ({\n  handleChange,\n  inputs,\n  error,\n  onSubmit,\n  status\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n  \n  return (\n    <>\n      <PageHeading\n        title=\"パスワードを変更してください\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"新しいパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"new-password\"\n          name=\"newPassword\"\n          value={inputs.newPassword}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-primary\"　style={{color: 'white', background: '#526CC6', border: 'unset'}}>\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"パスワードを変更する\"}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default ChangePassword;","/**\n * Displays the delete account page.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from '../Breadcrumb';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst DeleteAccount = ({\n  handleChange,\n  inputs,\n  error,\n  onSubmit\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    switch (error) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n  \n  return (\n    <>\n      <PageHeading\n        title=\"アカウントを削除する\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-warning\">アカウントを完全に削除する</button>\n      </form>\n    </>\n  );\n}\n\nexport default DeleteAccount;","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faEnvelope, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst UpdateProfile = ({\n  handleChange,\n  inputs,\n  onSubmit,\n  error,\n  status,\n  onBack\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n\n  useEffect(() => {\n    return () => onBack();\n  }, [])\n\n  return (\n    <>\n      <PageHeading\n        title=\"メールを更新する\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"ユーザー名\"\n          icon={<FontAwesomeIcon icon={faUser} />}\n          id=\"username\"\n          name=\"username\"\n          value={inputs.username}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"メルアドレス\"\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n          id=\"email\"\n          name=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          placeholder=\"メルアドレス\"\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-primary\" \n        style={{color: 'white', background: '#526CC6', border: 'unset'}}\n        disabled={inputs.password === \"\" || inputs.email === \"\" || inputs.username === \"\"}   >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"メールを更新する\"}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default UpdateProfile;","/**\n * Shows the My Account page and sets up the useAuth\n * hook to be used on ChangePassword, UpdateEmail and\n * DeleteAccount components.\n */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport ChangePassword from './ChangePassword';\nimport DeleteAccount from './DeleteAccount';\nimport PageHeading from '../PageHeading';\nimport UpdateProfile from './UpdateProfile';\n\nconst MyAccount = () => {\n  const { user } = useContext(firebaseAuth);\n  const [inputs, setInputs] = useState({ \n    email: user.email || \"\",\n    password: \"\", \n    newPassword: \"\", \n    username: user.displayName || \"\", \n    avatarUrl: user.photoUrl || \"\"});\n\n  const { \n    loading, \n    error, \n    status, \n    handleChangeEmail, \n    handleChangePassword, \n    handleDeleteAccount,\n    resetStatus\n  } = useAuth(inputs.username, inputs.email, inputs.password, inputs.newPassword);\n\n  const history = useHistory();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"my-account\">\n      <div className=\"my-account-inner\" style={{width: '50%', margin: '0 auto'}}>\n        <Switch>\n          <Route exact path=\"/my-account\">\n            <div>\n              <PageHeading\n                title=\"アカウント\"\n              />\n              <div className=\"account-data\">\n                  <Link to=\"/my-account/change-email\" className=\"btn btn-tertiary\">\n                    <span>メールを更新する</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                  </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/my-account/change-password\" className=\"btn btn-tertiary\">\n                  <span>パスワードを変更してください</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/my-account/delete-account\" className=\"btn btn-warning\">\n                  <FontAwesomeIcon icon={faTrash} />&nbsp;&nbsp;&nbsp;アカウントを削除する\n                </Link>\n              </div>\n            </div>\n          </Route>\n\n          <Route exact path=\"/my-account/change-email\">\n            <UpdateProfile \n              handleChange={handleChange}\n              inputs={inputs}\n              loading={loading}\n              onSubmit={handleChangeEmail}\n              error={error}\n              status={status}\n              onBack={resetStatus}\n            />\n          </Route>\n\n          <Route exact path=\"/my-account/change-password\">\n            <ChangePassword \n              handleChange={handleChange}\n              loading={loading}\n              inputs={inputs}\n              onSubmit={handleChangePassword}\n              error={error}\n              status={status}\n            />\n          </Route>\n          \n          <Route exact path=\"/my-account/delete-account\">\n            <DeleteAccount \n              handleChange={handleChange}\n              inputs={inputs}\n              onSubmit={handleDeleteAccount}\n              error={error}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default MyAccount;","import React, {useEffect, useState} from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navlinks = ({ closeMenu, userName }) => {\n  const [firstChar, setFirstChar] = useState('');\n  const [bgColor, setBgColor] = useState('');\n\n  const getFirstChar = () => {\n    if (userName) {\n      setFirstChar(userName.charAt(0).toUpperCase());\n    }\n  }\n\n  useEffect(() => {\n    setBgColor('#' + getRandomColor());\n    console.log(bgColor);\n    getFirstChar();\n  },[userName]);\n\n  const getRandomColor = () => {\n    return Math.floor(Math.random()*16777215).toString(16)\n  }\n\n\n  \n  return (\n    <div style={{position: 'relative', display: 'flex'}}>\n      <div className=\"avatar-btn\" style={{backgroundColor: `${bgColor}`}}>\n        <div className=\"name\">{firstChar}</div>\n      </div>\n      <div className=\"avt-links\">\n        <ul>\n        <li>\n          <NavLink\n            to=\"/my-account\"\n            className=\"link\"\n            onClick={() => closeMenu()}\n          >\n            プロフィール\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/log-out\" className=\"link\" onClick={() => closeMenu()}>\n            ログアウト\n          </NavLink>\n        </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Navlinks;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReply, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\n\nimport Navlinks from './Navlinks';\nimport TextInput from './TextInput';\n\nconst Nav = ({\n  onClick,\n  isMenuOpen,\n  mobile=false,\n  onSearch,\n}) => {\n  const [navClasses, setNavClasses] = useState(\"navbar\");\n  const btnClasses= \"btn btn-hamburger small-screen-only \" + (isMenuOpen && \"open\"); \n  let location = useLocation();\n  const { user } = useContext(firebaseAuth);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n\n    if (mobile) {\n      setNavClasses(\"navbar\");\n      return;\n    }\n\n    if (location.pathname !== \"/\") {\n      setNavClasses(\"navbar light\");\n      return;\n    }\n\n    setNavClasses(\"navbar\");\n  }, [location, mobile])\n\n  if (!user) {\n    return null\n  }\n\n  return (\n    <header className={navClasses} style={{background: '#526CC6'}}>\n      <div className=\"navbar-inner\">\n        <div className=\"logo\">\n        <Link to=\"/\" className=\"logo\" >\n        ホーム\n        </Link>\n        <div style={{height: 30, width: 2, backgroundColor: 'black', marginLeft: 20, marginRight: 20}}></div>\n        <Link to=\"/app\" className=\"logo\">\n          私のフラッシュカード\n        </Link>\n          </div>\n          <input\n          style={{outline: 'unset', height: 30, borderRadius: 15, paddingLeft: 10, borderColor: 'white'}}\n          id=\"search\"\n          name=\"search\"\n          placeholder='Search'\n          value={searchText}\n          onChange={(e) => {\n            setSearchText(e.target.value)\n            onSearch(e.target.value)\n          }}\n        />\n          \n        <div className=\"right-nav\">\n          <nav className=\"large-screen-only\">\n            <Navlinks closeMenu={() => null } userName={user.displayName}/>\n          </nav>\n          <button \n            className={btnClasses}\n            name=\"toggle-menu\"\n            onClick={onClick}\n          >\n            <span></span>\n            <span></span>\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Nav;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst Signup = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [inputs, setInputs] = useState({username: \"\", email: \"\", password: \"\" });\n  const history = useHistory();\n\n  const { status, error, handleSignup} = useAuth(inputs.username, inputs.email, inputs.password);\n  const { user } = useContext(firebaseAuth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleSignup();\n  }\n\n  useEffect(() => {\n    if (error === null) return;\n    console.log(error.message);\n  }, [error])\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/app\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/weak-password\":\n        setErrorMessage(\"パスワードは6文字以上である必要があります。\");\n        return;\n      case \"auth/email-already-in-use\":\n        setErrorMessage(\"このメールはすでに登録されています。\");\n        return;\n      case \"auth/invalid-email\":\n        setErrorMessage(\"有効なメールアドレスを入力してください。\");\n        return;\n      default:\n        setErrorMessage(\"何かがうまくいかなかった。 もう一度やり直してください。\");\n        return;\n    }\n  }, [error]);\n\n  return (\n    <div className=\"signup\" style={{textAlign: 'center'}}>\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', marginRight: 200}}>\n        <div style={{display: 'flex', paddingRight: 50, fontSize: 25, alignItems: 'center'}}>\n          <Link to=\"/log-in\">ログイン</Link>\n        </div>\n        <PageHeading \n        title=\"サインアップ\"\n      />\n      </div>\n      <form style={{display: 'inline-block'}} onSubmit={handleSubmit}>\n      <TextInput \n          labelText=\"ユーザー名\"\n          id=\"username\"\n          name=\"username\"\n          placeholder=\"ユーザー名\"\n          value={inputs.username}\n          onChange={handleChange}\n          icon={<FontAwesomeIcon icon={faUser} />}\n        />\n        <TextInput \n          labelText=\"メールアドレス\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"メールアドレス\"\n          value={inputs.email}\n          onChange={handleChange}\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n        />\n        <TextInput \n          labelText=\"パスワード\"\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button \n          className=\"btn btn-primary\"\n          style={{backgroundColor: '#526CC6', borderColor: 'unset', borderRadius: 20, borderWidth: 0}}\n          disabled={inputs.username === \"\" || inputs.password === \"\" || inputs.email === \"\"}\n        >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"サインアップ\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;","/**\n * Main wrapper for the app, containing the shuffle functionality\n * used by Deck and Dashboard components.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport { firebaseAuth } from './provider/AuthProvider';\nimport useOnDecksSnapshot from './hooks/useOnDecksSnapshot';\nimport useOnSavedDecksSnapshot from './hooks/useOnSavedDecksSnapshot';\nimport useOnAllDecksSnapshot from './hooks/useOnAllDecksSnapshot';\n\nimport Deck from './components/decks-and-cards/Deck';\nimport Dashboard from './components/Dashboard';\nimport Home from './components/Home';\nimport Login from './components/account-management/Login';\nimport Logout from './components/account-management/Logout';\nimport MyAccount from './components/account-management/MyAccount';\nimport Nav from './components/Nav';\nimport Signup from './components/account-management/Signup';\nimport MobileMenu from './components/MobileMenu';\n\nconst App = () => {\n  const [selectedDecks, setSelectedDecks] = useState([]);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const history = useHistory();\n  const { user } = useContext(firebaseAuth);\n  const { decks } = useOnDecksSnapshot(user);\n  const { saveDecks } = useOnSavedDecksSnapshot(user);\n  const { allDecks } = useOnAllDecksSnapshot();\n\n  const [decksData, setDecksData] = useState([]);\n  const [saveDecksData, setSaveDecksData] = useState([]);\n  const [allDecksData, setAllDecksData] = useState([]);\n\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    if (!isSearching) {\n      setDecksData(decks)\n    }\n  }, [decks])\n\n  useEffect(() => {\n    if (!isSearching) {\n      setSaveDecksData(saveDecks)\n    }\n  }, [saveDecks])\n\n  useEffect(() => {\n    if (!isSearching) {\n      setAllDecksData(allDecks)\n    }\n  }, [allDecks])\n\n  useEffect(() => {\n    if (!searchText || searchText.length == 0) {\n      setIsSearching(false)\n      setDecksData(decks)\n      setSaveDecksData(saveDecks)\n      setAllDecksData(allDecks)\n    } else {\n      setIsSearching(true)\n      setDecksData(decks.filter((element) => {return element.title.includes(searchText)}));\n      setSaveDecksData(saveDecks.filter((element) => {return element.title.includes(searchText)}));\n      setAllDecksData(allDecks.filter((element) => {return element.title.includes(searchText)}));\n    }\n  }, [searchText])\n\n  useEffect(() => {\n    if (user) return;\n    setSelectedDecks([]);\n  }, [user]);\n\n  const onSearch = (text) => {\n    setSearchText(text);\n  }\n\n  const handleButtons = (event) => {\n    switch (event.target.name) {\n      case \"exit\":\n        if (user) {\n          history.push(\"/app\");\n          return;\n        }\n        history.push(\"/\");\n        return;\n  \n      case \"toggle-menu\":\n        setIsMenuOpen(prev => !prev);\n        return;\n      default:\n        return;\n    }\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"app\">\n      <Nav \n        onClick={handleButtons}\n        isMenuOpen={isMenuOpen}\n        onSearch={onSearch}\n      />\n      <Switch>\n        <Route path=\"/log-in\">\n          <Login />\n        </Route>\n        <Route path=\"/log-out\">\n          <main>\n            <Logout />\n          </main>\n        </Route>\n        <Route path=\"/sign-up\">\n          <Signup />\n        </Route>\n        <Route path=\"/my-account\">\n          <main>\n            <MyAccount />\n          </main>\n        </Route>\n        <Route path=\"/app/shuffle\">\n          <Deck \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app/d/:hash\">\n          <Deck \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app\">\n          <main>\n            <Dashboard \n              onClick={handleButtons}\n              decks={decksData}\n              saveDecks={saveDecksData}\n              selectedDecks={selectedDecks}\n              setSelectedDecks={setSelectedDecks}\n            />\n          </main>\n        </Route>\n        <Route path=\"/\">\n          <main>\n            <Home \n              allDecks={allDecksData} \n              setSelectedDecks={setSelectedDecks} \n              selectedDecks={selectedDecks}\n              />\n          </main>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport AuthProvider from './provider/AuthProvider';\n\nimport './styles/normalize.css';\nimport './styles/styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <AuthProvider>\n        \n        <App />\n      </AuthProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}