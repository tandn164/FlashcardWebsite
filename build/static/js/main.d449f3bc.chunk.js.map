{"version":3,"sources":["firebase/firebaseIndex.js","provider/AuthProvider.js","hooks/useOnDecksSnapshot.js","hooks/useOnAllDecksSnapshot.js","hooks/useOnUserStatusSnapshot.js","components/Carousel.js","components/Header.js","components/decks-and-cards/CardContent.js","components/decks-and-cards/FlippableCard.js","components/Spinner.js","components/decks-and-cards/Deck.js","firebase/dbMethods.js","components/TextInput.js","components/PageHeading.js","components/decks-and-cards/UploadAndDisplayImage.js","components/decks-and-cards/CardEditor.js","components/decks-and-cards/CardCreator.js","components/Accordion.js","components/decks-and-cards/DeckCreator.js","components/decks-and-cards/DeckEditor.js","components/decks-and-cards/SelectableDeck.js","components/decks-and-cards/DeckList.js","components/SavedDecks.js","components/CreatedDecks.js","components/decks-and-cards/Test.js","components/decks-and-cards/TestCompare.js","components/Dashboard.js","components/Home.js","hooks/useAuth.js","components/account-management/Login.js","components/account-management/Logout.js","components/account-management/ChangePassword.js","components/account-management/DeleteAccount.js","components/account-management/UpdateProfile.js","components/account-management/MyAccount.js","components/Navlinks.js","components/Nav.js","components/account-management/Signup.js","components/account-management/Upgrade.js","components/account-management/BuyCoin.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","db","firestore","fb","storage","firebaseAuth","React","createContext","AuthProvider","props","useState","user","setUser","useEffect","unsub","onAuthStateChanged","Provider","value","children","useOnDecksSnapshot","decks","setDecks","unsubscribe","collection","where","uid","onSnapshot","snapshot","arr","forEach","deck","push","id","data","error","console","log","message","useOnAllDecksSnapshot","allDecks","saveDecks","setSaveDecks","saveArr","saved_users","includes","localStorage","setItem","JSON","stringify","useOnUserStatusSnapshot","userStatus","setUserStatus","doc","status","isActive","isPrenium","coin","Carousel","leftButtonText","rightButtonText","animTime","items","previousCallback","nextCallback","showButtons","index","setIndex","carouselItems","setCarouselItems","canSlide","setCanSlide","carousel","useRef","modifiedItems","map","ele","className","key","handleClick","event","target","name","length","idx","undefined","setTimeout","ref","style","marginLeft","width","transition","onClick","disabled","Header","title","CardContent","text","imageUrl","alt","height","src","FlippableCard","frontTitle","backTitle","frontText","backText","isFlipped","setIsFlipped","imageRef","header","icon","faTimes","backHeader","cloneElement","footer","prev","faReply","size","setImageUrl","getDownloadURL","then","downloadURL","Spinner","faSpinner","Deck","cards","setCards","setTitle","description","setDescription","hashCards","setHashCards","isCardFlipped","setIsCardFlipped","canView","isLoaded","setIsLoaded","hash","useParams","shuffle","setShuffle","cardShuffle","setCardShuffle","history","useHistory","alert","useAlert","get","catch","item","_cards","front","back","slideCallback","display","flexDirection","justifyContent","alignItems","backgroundColor","position","top","maxWidth","fontWeight","wordBreak","background","textAlign","zIndex","color","lineHeight","verticalAlign","borderRadius","marginTop","marginBottom","array","randomIndex","currentIndex","Math","floor","random","shuffleCard","faAngleLeft","faAngleRight","show","border","fontSize","paddingBottom","dbMethods","createDeck","isPublic","document","newDeck","numCards","owner","set","err","deleteDeck","deckId","delete","saveDeck","update","FieldValue","arrayUnion","unsaveDeck","a","arrayRemove","updateDeck","updatedDeck","updateUser","updatedUser","TextInput","labelText","type","placeholder","onChange","autocomplete","isHidden","setIsHidden","faLock","htmlFor","outline","autoComplete","preventDefault","faEye","faEyeSlash","PageHeading","titleElement","subTitle","styles","subTitleStyles","UploadAndDisplayImage","onSetImage","image","setImage","filePath","setFilePath","useContext","uploadTask","files","put","on","progress","bytesTransferred","totalBytes","state","child","CardEditor","card","onSubmit","onUpdate","onDelete","setFront","setBack","handleInput","faTrash","CardCreator","onCreateCard","isOpen","setIsOpen","faMinus","faPlus","Accordion","listCards","onCards","setCard","cardEditorElements","setCardEditorElements","onDeleteCard","splice","updateElements","onUpdateCard","elements","classes","Fragment","faAngleUp","faAngleDown","newCard","DeckCreator","updateSuccess","setUpdateSuccess","setListCards","setIsPublic","saveCount","checkReadyToCreate","faPaperclip","faBook","checked","marginRight","DeckEditor","deckToEdit","setDeckToEdit","localDeck","parse","getItem","checkReadyToUpdate","SelectableDeck","mine","saved","setSaved","savedDecksRaw","isSaved","savedDecks","filterArray","filter","stopPropagation","faEdit","faSave","Items","currentItems","PaginatedItems","itemsPerPage","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","slice","ceil","nextLabel","onPageChange","newOffset","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","DeckList","deckList","setDeckList","private","SavedDecks","path","margin","paddingRight","CreatedDecks","paddingTop","paddingLeft","Test","correctAnswer","setCorrectAnswer","selectedAnswer","setSelectedAnswer","result","setResult","submitted","setSubmitted","_listCorrectAnswer","cardIndex","question","answers","Array","fill","padding","element","newAnswer","totalResult","TestCompare","originCards","setOriginCards","randomCards","setRandomCards","selectedIndex1","setSelectedIndex1","selectedIndex2","setSelectedIndex2","newArray","_onCheck","index1","index2","Dashboard","Home","deckToEdit1","sort","b","useAuth","username","email","password","newPassword","avatarUrl","userData","setUserData","setError","setStatus","login","setLogin","signup","setSignup","logout","setLogout","changeEmail","setChangeEmail","changePassword","setChangePassword","deleteAccount","setDeleteAccount","signInWithEmailAndPassword","userCredential","_user","signOut","createUserWithEmailAndPassword","updateProfile","displayName","removeItem","code","credential","EmailAuthProvider","currentUser","reauthenticateWithCredential","updateEmail","photoURL","updatePassword","handleLogin","handleSignup","handleLogout","handleChangeEmail","handleChangePassword","handleDeleteAccount","resetStatus","Login","errorMessage","setErrorMessage","inputs","setInputs","handleChange","e","to","faEnvelope","borderColor","borderWidth","Logout","ChangePassword","DeleteAccount","UpdateProfile","onBack","faUser","MyAccount","photoUrl","loading","exact","Navlinks","closeMenu","userName","firstChar","setFirstChar","bgColor","setBgColor","getRandomColor","charAt","toUpperCase","toString","Nav","isMenuOpen","mobile","onSearch","navClasses","setNavClasses","btnClasses","location","useLocation","searchText","setSearchText","pathname","Signup","Upgrade","BuyCoin","App","selectedDecks","setSelectedDecks","setIsMenuOpen","decksData","setDecksData","saveDecksData","setSaveDecksData","allDecksData","setAllDecksData","isSearching","setIsSearching","handleButtons","options","positions","MIDDLE","timeout","offset","transitions","SCALE","Root","StrictMode","template","AlertTemplate","render","getElementById"],"mappings":"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","file":"static/js/main.d449f3bc.chunk.js","sourcesContent":["/**\n * Initialize firebase authentication and firestore.\n */\n\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyB25ZqbIrDuXWUokLFcsbltpjUf5pjhb-w\",\n  authDomain: \"flashcardapp-d3306.firebaseapp.com\",\n  databaseURL: \"https://flashcardapp-d3306.firebaseio.com\",\n  projectId: \"flashcardapp-d3306\",\n  storageBucket: \"flashcardapp-d3306.appspot.com\",\n  messagingSenderId: \"635798969664\",\n  appId: \"1:635798969664:web:562fb322eeb9d31667eea5\",\n  measurementId: \"G-XSQ0TX77TY\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth=firebase.auth();\nexport const db=firebase.firestore();\nexport const fb=firebase;\nexport const storage=firebase.storage();\n\nexport default { firebaseConfig }","/**\n * Context Provider for the current user.\n */\n\nimport React, {useState, useEffect} from 'react';\nimport { auth } from '../firebase/firebaseIndex';\n\nexport const firebaseAuth = React.createContext();\n\nconst AuthProvider = (props) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsub = auth.onAuthStateChanged((user) => {\n      user ? setUser(user) : setUser(null);\n    });\n\n    return () => unsub();\n  });\n\n  return (\n    <firebaseAuth.Provider\n      value={{\n        user\n      }}\n    >\n      {props.children}\n    </firebaseAuth.Provider>\n  )\n}\n\nexport default AuthProvider;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnDecksSnapshot = (user) => {\n  const db = firebase.firestore();\n  const [decks, setDecks] = useState([]);\n\n  // Get decks from collection where owner is the current user.\n  useEffect(() => {\n    if (!user) {\n      setDecks([]);\n      return;\n    }\n\n    let ref = db.collection('decks');\n    let unsubscribe = ref.where(\"owner\", \"==\", user.uid).onSnapshot((snapshot) => {\n      let arr = [];\n      snapshot.forEach(deck => arr.push({\n        id: deck.id,\n        ...deck.data()\n      }));\n      setDecks(arr);\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, [user]);\n\n  return { decks };\n}\n\nexport default useOnDecksSnapshot;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnAllDecksSnapshot = (user) => {\n  const db = firebase.firestore();\n  const [allDecks, setDecks] = useState([]);\n  const [saveDecks, setSaveDecks] = useState([]);\n\n  useEffect(() => {\n    if (!user) {\n      setDecks([]);\n      setSaveDecks([]);\n      return;\n    }\n    let ref = db.collection('decks');\n    let unsubscribe = ref.where(\"isPublic\", \"==\", true).onSnapshot((snapshot) => {\n      let arr = [];\n      let saveArr = [];\n      snapshot.forEach(deck => {\n        let data = {\n          id: deck.id,\n          ...deck.data()\n        };\n        arr.push(data)\n        if (data.saved_users?.includes(user.uid)) {\n          saveArr.push(data);\n        }\n      });\n      setDecks(arr);\n      setSaveDecks(saveArr);\n      localStorage.setItem('save_decks', JSON.stringify(saveArr))\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, []);\n\n  return { allDecks, saveDecks };\n}\n\nexport default useOnAllDecksSnapshot;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnUserStatusSnapshot = (user) => {\n    const db = firebase.firestore();\n    const [userStatus, setUserStatus] = useState();\n  \n    useEffect(() => {\n      if (!user) {\n        setUserStatus([]);\n        return;\n      }\n  \n      let ref = db.collection('users');\n      let unsubscribe = ref.doc(user.uid).onSnapshot((snapshot) => {\n        let status = {\n          isActive: snapshot.data().isActive,\n          isPrenium: snapshot.data().isPrenium,\n          coin: snapshot.data().coin\n        }\n        setUserStatus(status)\n        localStorage.setItem('isActive', JSON.stringify(snapshot.data().isActive))\n        localStorage.setItem('isPrenium', JSON.stringify(snapshot.data().isPrenium))\n        localStorage.setItem('coin', JSON.stringify(snapshot.data().coin))\n      }, error => console.log(\"Error: \", error.message))\n  \n      return () => unsubscribe();\n    }, []);\n  \n    return { userStatus };\n  }\n\n  export default useOnUserStatusSnapshot;","/**\n * A modular carousel component with wrap-around and transitions.\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\n\n/* If WRAP_BUFFER is too short, wrap-around transitions\n   will be set too soon. */\nconst WRAP_BUFFER = 50;\n\nconst Carousel = ({\n  leftButtonText=\"<\",\n  rightButtonText=\">\",\n  animTime=.5,\n  items,\n  previousCallback,\n  nextCallback,\n  showButtons=true\n}) => {\n  const [index, setIndex] = useState(0);\n  const [carouselItems, setCarouselItems] = useState([]);\n  const [canSlide, setCanSlide] = useState(true);\n  const carousel = useRef(null);\n\n  // Generates the carousel items, with a cloned copy of the first and last\n  // item at the beginning and end, respectively. This facilitates\n  // smooth wrap-around transitions.\n  useEffect(() => {\n    let modifiedItems = items.map((ele) => {\n      return (\n        <div \n          className=\"carousel__item\"\n          key={ele.key}\n        >\n          {ele}\n        </div>\n      );\n    });\n\n    setCarouselItems(modifiedItems);\n  }, [items]);\n\n  const handleClick = (event) => {\n    if (!canSlide) return;\n    if (event.target.name === \"right\") {\n      if (index == carouselItems.length - 1) { return }\n      setIndex(idx => idx + 1);\n      if (nextCallback !== undefined) {\n        nextCallback(index-1);\n      }\n    } else if (event.target.name === \"left\") {\n      if (index == 0) { return }\n      setIndex(idx => idx - 1);\n      if (previousCallback !== undefined) {\n        previousCallback(index-1);\n      }\n    }\n    setCanSlide(false);\n    setTimeout(() => setCanSlide(true), animTime * 1000 + WRAP_BUFFER);\n  }\n\n  return (\n    <div className=\"carousel\">\n      <div \n        ref={carousel}\n        className=\"carousel__inner\"\n        style={{ \n          marginLeft: \"calc(-100% * \" + index + \")\",\n          width: (carouselItems.length * 100) + \"%\",\n          transition: \"margin \" + animTime + \"s\",\n       }}\n      >\n        {carouselItems}\n      </div>\n      <div className=\"spacer\"></div>\n      {showButtons &&\n        <>\n          {index > 0 && <button \n            className=\"btn-carousel left\"\n            onClick={(event) => handleClick(event)}\n            name=\"left\"\n            disabled={!canSlide}\n          >{leftButtonText}</button>}\n          {index < carouselItems.length - 1 && <button \n            className=\"btn-carousel right\"\n            onClick={(event) => handleClick(event)}\n            name=\"right\"\n            disabled={!canSlide}\n          >{rightButtonText}</button>}\n        </>\n      }\n    </div>\n  );\n}\n\nexport default Carousel;","/**\n * Displays a header with a title and optional child elements.\n */\n\nimport React from 'react';\n\nconst Header = ({\n  title,\n  children\n}) => {\n  return (\n    <header className=\"card-header\">\n      <p>\n        {title}\n      </p>\n      <div>\n        {children}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","/**\n * Displays a simple p tag.\n */\n\nimport React from 'react';\n\nconst CardContent = ({\n  text,\n  imageUrl,\n}) => {\n  return (\n    <>\n      {imageUrl && <div>\n        <img alt=\"not fount\" height={\"250px\"} src={imageUrl} />\n        <br />\n      </div>}\n      <p className=\"content\">\n        {text}\n      </p>\n    </>\n  );\n}\n\nexport default CardContent;","/**\n * Displays a flash card and its content.\n */\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReply, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport Header from '../Header';\nimport CardContent from './CardContent';\nimport { storage } from '../../firebase/firebaseIndex';\n\nconst FlippableCard = ({\n  onClick,\n  frontTitle,\n  backTitle,\n  frontText,\n  backText,\n  isFlipped,\n  setIsFlipped,\n  imageRef,\n}) => {\n  const header = (\n    <Header title={frontTitle}>\n      <button \n        className=\"btn btn-icon-small\"\n        name=\"exit\"\n        onClick={onClick}\n      >\n        <FontAwesomeIcon icon={faTimes} />&nbsp;Close\n      </button>\n    </Header>\n  );\n\n  const backHeader = React.cloneElement(header, { title: backTitle });\n\n  const footer = (\n    <footer>\n      <button \n        className=\"curl\"\n        name=\"toggle\"\n        onClick={ () => setIsFlipped(prev => !prev) }\n      >    \n        <FontAwesomeIcon icon={faReply} size=\"2x\" className=\"icon\" />\n      </button>\n    </footer>\n  );\n\n  const [imageUrl, setImageUrl] = useState(null);\n\n  useState(() => {\n    if (imageRef) {\n      console.log(imageRef);\n      storage.ref(imageRef).getDownloadURL().then((downloadURL) => {\n          setImageUrl(downloadURL)\n      });\n  }\n  },[imageRef])\n \n  return (\n    <div className={isFlipped ? \"flippable flipped\" : \"flippable\"}>\n      <div className=\"flippable__inner\">\n        <div className=\"flippable__content front\">\n          {header}\n            <CardContent text={frontText} imageUrl={imageUrl} />\n          {footer}\n        </div>\n        <div className=\"flippable__content back\">\n          {backHeader}\n            <CardContent text={backText} />\n          {footer}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FlippableCard;","/**\n * A simple loading icon.\n */\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nconst Spinner = ({\n  size=\"1x\"\n}) => {\n  return <FontAwesomeIcon icon={faSpinner} size={size} className=\"spinner\"/>\n}\n\nexport default Spinner;","/**\n * Handles logic for getting the selected deck and cards.\n * Generates FlippableCards for each card to be shown, and \n * renders them in a Carousel.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport firebase from 'firebase';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Carousel from '../Carousel';\nimport FlippableCard from './FlippableCard';\nimport Spinner from '../Spinner';\nimport { faRandom, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { useAlert } from 'react-alert';\n\nconst Deck = ({\n  onClick,\n}) => {\n  const [cards, setCards] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [hashCards, setHashCards] = useState(null);\n  const [isCardFlipped, setIsCardFlipped] = useState(false);\n  const [canView, setCanView] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const { hash } = useParams();\n  const [shuffle, setShuffle] = useState(0);\n  const [cardShuffle, setCardShuffle] = useState([]);\n  const history = useHistory();\n  const alert = useAlert()\n\n  useEffect(() => {\n    setIsLoaded(false);\n    setHashCards(null);\n    setCards(null);\n\n    console.log(hash)\n    if (hash === undefined) return;\n\n    const db = firebase.firestore();\n\n    db.collection('decks').doc(hash).get()\n      .then(snapshot => {\n        setIsLoaded(true);\n      })\n      .catch(error => {\n        setIsLoaded(true);\n        console.log(\"Error: \", error.message)\n      })\n\n    let ref = db.collection('decks').doc(hash);\n    ref.get()\n      .then(snapshot => {\n        let arr = [];\n        snapshot.data().cards?.forEach(item => arr.push(item));\n        setHashCards(arr);\n        setTitle(snapshot.data().title)\n        setDescription(snapshot.data().description)\n      })\n      .catch(error => console.log(\"Error: \", error.message))\n  }, [hash]);\n\n  useEffect(() => {\n    setIsLoaded(false);\n    let _cards = [];\n\n    if (hashCards != null) {\n      _cards = hashCards;\n    } else {\n      _cards = [];\n    }\n\n    if (_cards.length > 0) {\n      setCards(_cards.map((ele) => {\n        return (\n          <FlippableCard\n            key={ele.id}\n            frontTitle=\"Front\"\n            backTitle=\"Back\"\n            frontText={ele.front}\n            backText={ele.back}\n            onClick={onClick}\n            isFlipped={isCardFlipped}\n            setIsFlipped={setIsCardFlipped}\n            imageRef={ele.imageRef}\n          />\n        )\n      }));\n      setCardShuffle(_cards.map((ele) => {\n        return (\n          <FlippableCard\n            key={ele.id}\n            frontTitle=\"Front\"\n            backTitle=\"Back\"\n            frontText={ele.front}\n            backText={ele.back}\n            onClick={onClick}\n            isFlipped={isCardFlipped}\n            setIsFlipped={setIsCardFlipped}\n            imageRef={ele.imageRef}\n          />\n        )\n      }));\n      setIsLoaded(true);\n    }\n\n  }, [isCardFlipped, onClick, hashCards]\n  );\n\n  if (!isLoaded) return (\n    <main>\n      <div className=\"container center\">\n        <Spinner />\n      </div>\n    </main>\n  );\n\n  if (!cards) return (\n    <div className=\"container center\">\n      <p>We couldn't find this deck. :(</p>\n    </div>\n  )\n\n  if (!canView || cards.length === 0) return (\n    <div className=\"container center\">\n      <p>This deck is either private or has no cards! If you are the owner, you can view it and edit it from your dashboard.</p>\n    </div>\n  );\n\n  const slideCallback = () => {\n    setIsCardFlipped(false);\n  }\n\n  const shuffleCard = (array) => {\n    let currentIndex = array.length, randomIndex;\n\n    while (currentIndex != 0) {\n\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ width: 250, display: 'flex', flexDirection: 'column', justifyContent: 'flex-end', alignItems: 'center', backgroundColor: '#DADCE2' }}>\n        <div style={{\n          position: 'absolute',\n          top: 100\n        }}>\n          {title}\n          <br/>\n          <br/>\n          <br/>\n          \n          <div style={{maxWidth: 200}}>\n            {\"説明: \"}\n            <text style={{fontWeight: '500', display: '-webkit-box', wordBreak: 'break-word'}}>{description}</text>\n          </div>\n        </div>\n        <div style={{\n          background: shuffle == 0 ? 'wheat' : 'green',\n          height: 30,\n          width: 100,\n          textAlign: 'center',\n          zIndex: 1,\n          color: shuffle == 0 ? 'black' : 'white',\n          lineHeight: 2,\n          verticalAlign: 'center',\n          borderRadius: 15,\n        }} onClick={(event) => {\n          setShuffle(0)\n        }}>ソート済み</div>\n        <div style={{\n          background: shuffle != 0 ? 'wheat' : 'green',\n          height: 30,\n          width: 100,\n          textAlign: 'center',\n          zIndex: 1,\n          color: shuffle != 0 ? 'black' : 'white',\n          marginTop: 50,\n          marginBottom: 100,\n          lineHeight: 2,\n          verticalAlign: 'center',\n          borderRadius: 15,\n        }} onClick={(event) => {\n          setCardShuffle(shuffleCard(cardShuffle))\n          setShuffle(prev => prev + 1)\n        }}>ランダム</div>\n      </div>\n      <Carousel\n        items={shuffle != 0 ? cardShuffle : cards}\n        leftButtonText={<FontAwesomeIcon icon={faAngleLeft} />}\n        rightButtonText={<FontAwesomeIcon icon={faAngleRight} />}\n        animTime={.3}\n        previousCallback={slideCallback}\n        nextCallback={slideCallback}\n        showButtons={true}\n      />\n      <div style={{ width: 250, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', backgroundColor: '#DADCE2' }}>\n        <button\n          onClick={() => {\n            if (cards.length >= 4) {\n              history.push('/app/test/'+hash)\n            } else {\n              alert.show('テストを作成するには、セットに少なくとも4枚のカードが必要です')\n            }\n          }}\n          style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30 }}\n        >\n          <> 復習</>\n        </button>\n        <button\n          onClick={() => {\n            history.push('/app/test-match/'+hash)\n          }}\n          style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30 }}\n        >\n          <>マッチング</>\n        </button>\n        <button\n          onClick={() => {\n            alert.show('機能は開発中です')\n          }}\n          style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30 }}\n        >\n          <>履歴</>\n        </button>\n      </div>\n    </div>\n\n  );\n}\n\nexport default Deck;","/**\n * Methods for accessing the firestore database:\n *\n * createDeck\n * deleteDeck\n * updateDeck\n * createCard\n * updateCard\n * deleteCard\n */\n\nimport { db } from \"./firebaseIndex\";\nimport firebase from \"firebase\";\n\nexport const dbMethods = {\n  createDeck: (user, title, description, cards, isPublic = true, saveCount) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const document = db.collection(\"decks\").doc();\n\n    const newDeck = {\n      id: document.id,\n      numCards: cards.length,\n      title,\n      description,\n      owner: user.uid,\n      cards: cards,\n      isPublic: isPublic,\n      saved_users: []\n    };\n\n    document\n      .set(newDeck)\n      .then(console.log(\"Created new deck.\"))\n      .catch((err) => {\n        console.error(\"Error creating deck: \", err.message);\n      });\n  },\n\n  deleteDeck: (user, deckId) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    db.collection(\"decks\")\n      .doc(deckId)\n      .delete()\n      .then(console.log(\"Deck successfully deleted.\"))\n      .catch((err) => {\n        console.error(\"Error deleting deck: \", err.message);\n      });\n  },\n\n  saveDeck: (user, deck) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n    return db\n      .collection(\"decks\")\n      .doc(deck.id)\n      .update({\n        saved_users: firebase.firestore.FieldValue.arrayUnion(user.uid),\n      })\n      .then(() => {\n        console.log(\"Updated deck with id: \", deck.id);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n\n  unsaveDeck: async (user, deck) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n    return db\n      .collection(\"decks\")\n      .doc(deck.id)\n      .update({\n        saved_users: firebase.firestore.FieldValue.arrayRemove(user.uid),\n      })\n      .then(() => {\n        console.log(\"Updated deck with id: \", deck.id);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n\n  updateDeck: (user, deckId, title, description, cards, isPublic = true) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const updatedDeck = {\n      title,\n      description,\n      cards,\n      numCards: cards.length,\n      isPublic: isPublic,\n    };\n\n    return db\n      .collection(\"decks\")\n      .doc(deckId)\n      .update(updatedDeck)\n      .then(() => {\n        console.log(\"Updated deck with id: \", deckId);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n\n  updateUser: async (user, coin, isPrenium) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const updatedUser = {\n      coin,\n      isPrenium,\n    };\n\n    return db\n      .collection(\"users\")\n      .doc(user.uid)\n      .update(updatedUser)\n      .then(() => {\n        console.log(\"Updated user with uid: \", user.uid);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n};\n","/**\n * Displays a text or password input, dependinding on \n * the type prop. The password input can toggle between\n * password and text types.\n */\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash, faLock } from '@fortawesome/free-solid-svg-icons';\n\nconst TextInput = ({\n  labelText,\n  icon=null,\n  type=\"text\",\n  id=\"\",\n  name=\"\",\n  placeholder=\"\",\n  value,\n  onChange,\n  autocomplete=\"on\"\n}) => {\n  const [isHidden, setIsHidden] = useState(true);\n\n  const toggleHidden = (event) => {\n    event.preventDefault();\n    setIsHidden(prev => !prev);\n  }\n\n  if (icon === null && type===\"password\")\n    icon = <FontAwesomeIcon icon={faLock} />\n\n  return (\n    <div className=\"input-block\">\n      <label htmlFor={id}>{labelText}</label>\n      <div className=\"input-row\">\n        {icon}\n        <input \n          type={type === \"password\" ? isHidden ? \"password\" : \"text\" : type}\n          name={name}\n          id={id}\n          value={value}\n          onChange={onChange}\n          style={{outline: \"none\"}}\n          autoComplete={autocomplete}\n        >\n        </input>\n        {type === \"password\" &&\n          <button\n            type=\"button\"\n            className=\"btn btn-icon\"\n            onClick={toggleHidden}\n          >\n            {isHidden ?\n              <FontAwesomeIcon icon={faEye} />\n            :\n              <FontAwesomeIcon icon={faEyeSlash} />\n            }\n          </button>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default TextInput;","/**\n * Displays a heading with a subtitle.\n */\n\nimport React from 'react';\n\nconst PageHeading = ({\n  title,\n  subTitle,\n  styles = {textAlign: 'center'},\n  subTitleStyles = {textAlign: 'center'},\n}) => {\n  let titleElement = null;\n  titleElement=<h1 style={styles}>{title}</h1>\n\n  return (\n    <header className=\"page-heading\">\n      {titleElement}\n      {subTitle != null && <h5 style={subTitleStyles}>{subTitle}</h5>}\n    </header>\n  )\n}\n\nexport default PageHeading;","import React, { useContext, useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { storage } from \"../../firebase/firebaseIndex\";\nimport { firebaseAuth } from \"../../provider/AuthProvider\";\n\nconst UploadAndDisplayImage = ({\n    onSetImage,\n    imageRef\n}) => {\n    const [image, setImage] = useState(null);\n    const [filePath, setFilePath] = useState(imageRef);\n    const { user } = useContext(firebaseAuth);\n    const alert = useAlert()\n\n    useEffect(() => {\n        if (imageRef) {\n            storage.ref(imageRef).getDownloadURL().then((downloadURL) => {\n                setImage(downloadURL)\n            });\n            setFilePath(imageRef)\n        }\n    }, [imageRef]);\n\n    return (\n        <div style={{paddingBottom: 20}}>\n            {filePath && (\n                <div>\n                    <img alt=\"not fount\" width={\"250px\"} src={image} />\n                    <br />\n                    <button onClick={() => {\n                        const deleteTask = storage.ref(filePath).delete();\n                        deleteTask.then(() => {\n                            alert.show('ファイルが正常に削除されました');\n                            setFilePath(null)\n                            onSetImage(null)\n                        }).catch((error) => {\n                        });\n                    }}>削除する</button>\n                </div>\n            )}\n            <br />\n\n            <br />\n            {filePath == null && \n            <input\n            type=\"file\"\n            name=\"myImage\"\n            onChange={(event) => {\n                \n                const uploadTask = storage.ref(`${user.uid}/${event.target.files[0].name}`).put(event.target.files[0]);\n                uploadTask.on('state_changed',\n                    (snapshot) => {\n                        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                        console.log('Upload is ' + progress + '% done');\n                        switch (snapshot.state) {\n                            case 'paused':\n                                console.log('Upload is paused');\n                                break;\n                            case 'running':\n                                console.log('Upload is running');\n                                break;\n                        }\n                    },\n                    (error) => {\n                    },\n                    () => {\n                        storage.ref(`${user.uid}`).child(event.target.files[0].name).getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                            alert.show(\"ファイルが正常にアップロードされました\")\n                            onSetImage(`${user.uid}/${event.target.files[0].name}`);\n                            setImage(downloadURL)\n                            setFilePath(`${user.uid}/${event.target.files[0].name}`)\n                        });\n                    }\n                );\n            }}\n        />\n            }\n        </div>\n    );\n};\n\nexport default UploadAndDisplayImage;","/**\n * Handles displaying each card editor.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport UploadAndDisplayImage from './UploadAndDisplayImage';\n\nconst CardEditor = ({\n  index,\n  card,\n  onSubmit,\n  onUpdate,\n  onDelete\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    setFront(card.front);\n    setBack(card.back);\n    setImage(card.imageRef);\n  }, [card])\n\n  const handleInput = (event) => {\n    if (event.target.name === \"front\") {\n      setFront(event.target.value);\n    } else if (event.target.name === \"back\") {\n      setBack(event.target.value);\n    }\n  }\n\n  const updateCard = (event) => {\n    event.preventDefault();\n    if (front.length <= 0 || image == null) {\n      return;\n    }\n    if (back.length <=0 ) {\n      return;\n    }\n    console.log(\"Card to update: \", card.id);\n    onUpdate(index, front, back, image)\n    onSubmit();\n  }\n\n  const deleteCard = (event) => {\n    event.preventDefault();\n    onDelete(index)\n  }\n\n  return (\n    <form className=\"card-editor\" onSubmit={updateCard}>\n      <div className=\"input-block\">\n        <textarea\n          name=\"front\"\n          id={card.id + \"-front\"}\n          value={front}\n          onChange={handleInput}\n        />\n        <label htmlFor={card.id + \"-front\"}>Front</label>\n      </div>\n      <div className=\"input-block\">\n        <textarea\n          name=\"back\"\n          id={card.id + \"-back\"}\n          value={back}\n          onChange={handleInput}\n        />\n        <label htmlFor={card.id + \"-back\"}>Back</label>\n      </div>\n      <UploadAndDisplayImage onSetImage={(image)=>{\n        setImage(image);\n      }} imageRef={image}/>\n      <button className=\"btn\">Update</button>\n      <button className=\"btn btn-warning\"\n        onClick={deleteCard}\n      >\n        <FontAwesomeIcon icon={faTrash} /> Delete card\n      </button>\n    </form>\n  );\n}\n\nexport default CardEditor;","/**\n * Renders the toggleable card creator box.\n */\n\nimport React, { useState } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport UploadAndDisplayImage from './UploadAndDisplayImage';\n\nconst CardCreator = ({\n  onCreateCard\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  const handleInput = (event) => {\n    if (event.target.name === \"front\") {\n      setFront(event.target.value);\n    } else if (event.target.name === \"back\") {\n      setBack(event.target.value);\n    }\n  }\n\n  const createCard = (event) => {\n    event.preventDefault();\n    if (front.length <= 0 && image == null) {\n      return;\n    }\n    if (back.length <=0 ) {\n      return;\n    }\n    console.log(\"Creating new card.\");\n    onCreateCard(front, back, image);\n    setFront(\"\");\n    setBack(\"\");\n    setImage(null);\n    setIsOpen(false);\n  }\n\n  if (!isOpen) return (\n    <button className=\"btn btn-tertiary\"\n      onClick={() => setIsOpen(true)}\n    >\n      Add card <FontAwesomeIcon icon={faPlus} className=\"icon\" />\n    </button>\n  );\n\n  return (\n    <>\n      <button id=\"add\" className=\"btn btn-tertiary highlighted\"\n        onClick={() => setIsOpen(false)}\n      >\n        Add card <FontAwesomeIcon icon={faMinus} className=\"icon\"/>\n      </button>\n      <form className=\"card-editor\" onSubmit={createCard}>\n        <div className=\"input-block\">\n          <textarea\n            name=\"front\"\n            id=\"new-front\"\n            value={front}\n            onChange={handleInput}\n          />\n          <label htmlFor=\"new-front\">Front</label>\n        </div>\n        <div className=\"input-block\">\n          <textarea\n            name=\"back\"\n            id=\"new-back\"\n            value={back}\n            onChange={handleInput}\n            style={{outline: \"none\"}}\n          />        \n          <label htmlFor=\"new-back\">Back</label>\n        </div>\n        <UploadAndDisplayImage onSetImage={(image)=>{\n            setImage(image);\n        }} imageRef={image}/>\n        <button className=\"btn\">Create</button>\n      </form>\n    </>\n  );\n}\n\nexport default CardCreator;","/**\n * Generates and displays all the toggleable card editor boxes\n * in an accordion.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\n\nimport CardEditor from './decks-and-cards/CardEditor';\nimport CardCreator from './decks-and-cards/CardCreator';\n\nconst Accordion = ({\n  listCards,\n  onCards,\n}) => {\n  const [cards, setCards] = useState(listCards || []);\n  const [card, setCard] = useState(-1);\n  const [cardEditorElements, setCardEditorElements] = useState([]);\n\n  const handleClick = (event) => {\n    console.log(event.target.value)\n    setCard(prev => prev === event.target.value ? -1 : event.target.value);\n  }\n\n  const onCreateCard = (front, back, imageRef) => {\n    let newCard = {front: front, back: back, imageRef: imageRef}\n    console.log(28888, newCard);\n    cards.push(newCard)\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  const onDeleteCard = (index) => {\n    cards.splice(index, 1);\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  const onUpdateCard = (index, front, back, imageRef) => {\n    cards[index] = {front: front, back: back, imageRef: imageRef};\n    setCards(cards)\n    onCards(cards)\n    updateElements()\n  }\n\n  useEffect(() => {\n    setCards(listCards)\n  },[listCards])\n\n  useEffect(() => {\n    updateElements()\n  }, [card, cards]);\n\n  const updateElements = () => {\n    const elements = cards.map( (ele, index) => {\n      let classes = index === card ? \"btn btn-tertiary highlighted\" : \"btn btn-tertiary\";\n      console.log(index)\n      console.log(ele);\n      return (\n        <React.Fragment key={index} >\n          <button \n            className={classes}\n            value={index}\n            onClick={handleClick}\n          >\n            <span className=\"truncate\">\"{ele.front}\"</span> \n            {card === `${index}` ?\n              <FontAwesomeIcon icon={faAngleUp} />\n            :\n              <FontAwesomeIcon icon={faAngleDown} />\n            }\n          </button>\n          {card === `${index}` && \n            <CardEditor\n              index={index}\n              card={ele}\n              onSubmit={() => setCard(\"\")}\n              onDelete={onDeleteCard}\n              onUpdate={onUpdateCard}\n            />\n          }\n        </React.Fragment>\n      )\n    })\n\n    setCardEditorElements(elements);\n  }\n\n  return (\n    <>\n      {cardEditorElements}\n      <CardCreator\n        onCreateCard={onCreateCard}\n      />\n    </>\n  );\n}\n\nexport default Accordion;","/**\n * Handles the creation of new decks.\n */\n\nimport React, { useState, useContext } from 'react';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { useHistory } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook, faPaperclip } from '@fortawesome/free-solid-svg-icons';\n\nimport TextInput from '../TextInput';\nimport PageHeading from '../PageHeading';\nimport Accordion from '../Accordion';\nimport { useAlert } from 'react-alert';\n\nconst DeckCreator = () => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n  const [listCards, setListCards] = useState([]);\n  const [isPublic, setIsPublic] = useState(true);\n  const [saveCount, setSaveCount] = useState(0);\n  const alert = useAlert()\n\n  const checkReadyToCreate = (event) => {\n    event.preventDefault();\n    if(listCards.length == 0) alert.show(\"フラッシュカードセットを初期化するには、少なくとも1枚のカードが必要です！\");\n    else if (title.length <= 0) alert.show(\"フラッシュカードセットを初期化するには、セットのタイトルを入力する必要があります！\");\n    else if (description.length <= 0) alert.show(\"フラッシュカードセットを初期化するには、セットの説明を入力する必要があります！\");\n    else createDeck();\n  }\n\n  const createDeck = () => {\n    dbMethods.createDeck(user, title, description, listCards, isPublic, saveCount);\n    setUpdateSuccess(true);\n    history.push(\"/app\");\n  }\n\n  const onUpdateCards = (cards) => {\n    setListCards(cards)\n  }\n\n  const onUpdateDecks = (event) => {\n    createDeck();\n  }\n\n  return (\n    <div style={{textAlign: 'left'}}>\n      <form \n      id=\"new-deck\" \n      onSubmit={checkReadyToCreate}\n    >\n      <TextInput \n        labelText=\"題名\"\n        icon={<FontAwesomeIcon icon={faPaperclip} />}\n        id=\"title\"\n        name=\"title\"\n        value={title}\n        onChange={(event) => setTitle(event.target.value)}\n        autocomplete=\"off\"\n      />\n      <TextInput \n        labelText=\"説明\"\n        icon={<FontAwesomeIcon icon={faBook} />}\n        id=\"description\"\n        name=\"description\"\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n        autocomplete=\"off\"\n      />\n      <p>\n        <span></span>\n        パブリックシェアリング？ デフォルト：パブリック。\n      </p>\n      \n      <input\n        id=\"public-true\"\n        name=\"public\"\n        type=\"radio\"\n        value=\"はい\"\n        checked={isPublic ? true : false}\n        onChange={() => setIsPublic(true)}\n        style={{marginRight: '10px'}}\n      />\n      <span onClick={() => setIsPublic(true)}>パブリック</span>\n      <br></br>\n      <input\n        id=\"public-false\"\n        name=\"public\"\n        type=\"radio\"\n        value=\"いいえ\"\n        checked={isPublic ? false : true}\n        onChange={() => setIsPublic(false)}\n        style={{marginRight: '10px'}}\n      />\n      <span onClick={() => setIsPublic(false)}>プライベート</span>\n    </form>\n      <div>\n        <PageHeading \n          title=\"カード\"\n          styles={{textAlign: 'left'}}\n        />\n        <Accordion\n          listCards={listCards}\n          onCards={onUpdateCards}\n        />\n      </div>\n      <button className=\"btn btn-primary\" onClick={checkReadyToCreate}>\n          {updateSuccess ? \"Success!\" : \"作成\" }\n      </button>\n    </div>\n  );\n}\n\nexport default DeckCreator;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { useHistory } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook, faHeading, faPaperclip } from '@fortawesome/free-solid-svg-icons';\n\nimport Accordion from '../Accordion';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\nimport firebase from 'firebase';\nimport { useAlert } from 'react-alert';\n\nconst DeckEditor = ({\n  deckToEdit,\n  setDeckToEdit,\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n  const localDeck = JSON.parse(localStorage.getItem('deck'))\n  const deck = deckToEdit || localDeck;\n  const [title, setTitle] = useState(deck.title);\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n  const [description, setDescription] = useState(deck.description);\n  const [listCards, setListCards] = useState([])\n  console.log(deck);\n  const [isPublic, setIsPublic] = useState(deck.isPublic ?? true);\n  const alert = useAlert()\n\n  const checkReadyToUpdate = () => {\n    if(listCards.length == 0) alert.show(\"フラッシュカードセットを初期化するには、少なくとも1枚のカードが必要です！\");\n    else if (title.length <= 0) alert.show(\"フラッシュカードセットを初期化するには、セットのタイトルを入力する必要があります！\");\n    else if (description.length <= 0) alert.show(\"フラッシュカードセットを初期化するには、セットの説明を入力する必要があります！\");\n    else updateDeck();\n  }\n\n  const updateDeck = () => {\n    dbMethods.updateDeck(user, deck.id, title, description, listCards, isPublic)\n    setDeckToEdit({...deckToEdit, title});\n    setUpdateSuccess(true);\n    setTimeout(() => setUpdateSuccess(false), 3000);\n  }\n\n  const deleteDeck = (event) => {\n    event.preventDefault();\n    dbMethods.deleteDeck(user, deck.id);\n    history.push('/app');\n    setDeckToEdit(null);\n  }\n\n  const db = firebase.firestore();\n\n  useEffect(() => {\n    if (!deck) {\n      return\n    }\n    console.log(deck)\n    let ref = db.collection('decks').doc(deck.id);\n    ref.get()\n      .then(snapshot => {\n        let arr = [];\n        snapshot.data().cards?.forEach(item => arr.push(item));\n        setListCards(arr);\n      })\n      .catch(error => console.log(\"Error: \", error.message))\n  }, [])\n\n  const onUpdateCards = (cards) => {\n    setListCards(cards)\n  }\n\n  const onUpdateDecks = (event) => {\n    updateDeck();\n  }\n\n  return (\n    <div style={{textAlign: 'left'}}>\n      <PageHeading\n        title=\"セットを編集する\"\n        styles={{textAlign: 'left'}}\n      />\n      <form onSubmit={checkReadyToUpdate}>\n        <TextInput \n          labelText=\"題名\"\n          icon={<FontAwesomeIcon icon={faPaperclip} />}\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          placeholder=\"New Deck\"\n          autocomplete=\"off\"\n        />\n        <TextInput \n        labelText=\"説明\"\n        icon={<FontAwesomeIcon icon={faBook} />}\n        id=\"description\"\n        name=\"description\"\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n        autocomplete=\"off\"\n        />\n        <p>\n        <span></span>\n        パブリックシェアリング？ デフォルト：パブリック。\n      </p>\n      \n      <input\n        id=\"public-true\"\n        name=\"public\"\n        type=\"radio\"\n        value=\"はい\"\n        checked={isPublic ? true : false}\n        onChange={() => setIsPublic(true)}\n        style={{marginRight: '10px'}}\n      />\n      <span onClick={() => setIsPublic(true)}>パブリック</span>\n      <br></br>\n      <input\n        id=\"public-false\"\n        name=\"public\"\n        type=\"radio\"\n        value=\"いいえ\"\n        checked={isPublic ? false : true}\n        onChange={() => setIsPublic(false)}\n        style={{marginRight: '10px'}}\n      />\n      <span onClick={() => setIsPublic(false)}>プライベート</span>\n      </form>\n      <div>\n        <PageHeading \n          title=\"カード\"\n          styles={{textAlign: 'left'}}\n        />\n        <Accordion\n          listCards={listCards}\n          onCards={onUpdateCards}\n        />\n      </div>\n      <button\n          className=\"btn btn-primary\"\n          onClick={checkReadyToUpdate}\n        >\n          {updateSuccess ? \"Success!\" : \"編集\" }\n        </button>\n      <div>\n        <PageHeading \n          title=\"デッキを削除する\"\n          styles={{textAlign: 'left'}}\n        />\n        <form onSubmit={deleteDeck}>\n          <button\n            className=\"btn btn-warning\"\n          >削除する</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default DeckEditor;","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faSave, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport { dbMethods } from '../../firebase/dbMethods';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { db } from '../../firebase/firebaseIndex';\nimport { useAlert } from 'react-alert';\n\nconst SelectableDeck = ({\n  length,\n  deck,\n  setDeckToEdit,\n  mine,\n  userStatus,\n}) => {\n  const history = useHistory();\n  const {user} = useContext(firebaseAuth)\n  const [saved, setSaved] = useState(false);\n  const savedDecksRaw = localStorage.getItem('save_decks')\n  const alert = useAlert()\n\n  useEffect(() => {\n    setSaved(isSaved())\n  },[])\n\n  const isPrenium = () => {\n    console.log(userStatus?.isPrenium)\n    return userStatus?.isPrenium ?? false\n  }\n\n  const isSaved = () => {\n    if (!savedDecksRaw || savedDecksRaw.length == 0) {\n      return false\n    }\n    let savedDecks = JSON.parse(savedDecksRaw)\n    if (!savedDecks || savedDecks.length == 0) {\n      return false\n    }\n    let filterArray = savedDecks.filter(item => item.id == deck.id)\n    return (filterArray && filterArray.length > 0)\n  }\n\n  const saveCount = () => {\n    if (!savedDecksRaw || savedDecksRaw.length == 0) {\n      return 0\n    }\n    let savedDecks = JSON.parse(savedDecksRaw)\n    if (!savedDecks) {\n      return 0\n    }\n    return savedDecks.length\n  }\n\n  return (\n    <li style={{background: '#EAB2AE', marginBottom: 20, borderRadius: 10}}\n      // className={selectedDecks?.includes(id) ? \"selected\" : \"\"}\n      // onClick={(event) => {\n      //   event.stopPropagation();\n      //   toggleDeck(id);\n      // }}\n      // role=\"checkbox\"\n      // aria-checked={selectedDecks?.includes(id) ? \"true\" : \"false\"}\n    >\n      <div\n        onClick={() => {\n          history.push('/app/d/'+deck.id)\n        }}\n      >\n        {/* <input\n          name={id}\n          type=\"checkbox\"\n          checked={selectedDecks?.includes(id)}\n          onChange={() => null}\n        /> */}\n        <label htmlFor=\"checkbox\" className=\"truncate\">\n          <span></span>\n          <strong>{deck.title}</strong> ({length} {\"カード\"})\n          \n        </label>\n      </div>\n      <div>\n      <span>説明:&nbsp;</span>\n      <div style={{maxWidth: 300}}>\n      <text style={{fontWeight: '500', display: '-webkit-box', wordBreak: 'break-word'}}>{deck.description}</text>\n        </div>\n      </div>\n      <div className=\"button-row\">\n        {mine ? <button \n          className=\"btn btn-icon\"\n          style={{color: 'black'}}\n          onClick={(event) => {\n            event.stopPropagation();\n            setDeckToEdit();\n            localStorage.setItem('deck', JSON.stringify(deck));\n            history.push(\"/app/edit\");\n          }}\n        >\n          <FontAwesomeIcon icon={faEdit} /> 編集する\n        </button>\n        : <button \n        className=\"btn btn-icon\"\n        style={{color: 'black'}}\n        onClick={(event) => {\n          event.stopPropagation();\n          if (saved) {\n            dbMethods.unsaveDeck(user, deck)\n            setSaved(false)\n          } else {\n            if (isPrenium() || (saveCount() < 3)) {\n              dbMethods.saveDeck(user, deck)\n              setSaved(true)\n            } else {\n              alert.show(\"プレミアムにアップグレードしていない場合は、完全な機能のためにアップグレードしてください\")\n            }\n          }\n        }}\n      >\n        <FontAwesomeIcon icon={saved ? faTrash : faSave} /> {saved ? \"削除する\" : \"保存する\"}\n      </button>\n        }\n      </div>\n    </li>\n  );\n}\n\nexport default SelectableDeck;","import React, { useState, useEffect, useContext } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport SelectableDeck from './SelectableDeck';\n\nfunction Items({ currentItems, user, setDeckToEdit}) {\n  return (\n    <React.Fragment>\n        {currentItems}\n    </React.Fragment>\n  );\n}\n\nfunction PaginatedItems({ itemsPerPage, decks, user, setDeckToEdit}) {\n  // We start with an empty list of items.\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    setCurrentItems(decks.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(decks.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage, decks]);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    const newOffset = event.selected * itemsPerPage % decks.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  return (\n    <>\n      <Items currentItems={currentItems} user={user} />\n      <ReactPaginate\n        nextLabel=\"次 ->\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={2}\n        pageCount={pageCount}\n        previousLabel=\"<- 前\"\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel=\"...\"\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n}\n\nconst DeckList = ({\n  decks,\n  setDeckToEdit,\n  userStatus\n}) => {\n  const [deckList, setDeckList] = useState([]);\n  const { user } = useContext(firebaseAuth);\n\n  useEffect(() => {\n    if (!decks) {return}\n    setDeckList(decks.map(deck => {\n      return (\n        <SelectableDeck \n          key={deck.id}\n          length={deck.numCards}\n          deck={deck}\n          mine={user && deck.owner == user.uid}\n          userStatus={userStatus}\n          setDeckToEdit={() => {\n            setDeckToEdit({ id: deck.id, title: deck.title, private: deck.private, description: deck.description, isPublic: deck.isPublic });\n          }}\n        />\n      );}\n    ));\n  }, [decks]);\n\n  useEffect(() => {\n  }, [deckList])\n\n  return (\n    <div className=\"deck-list\">\n      <ul>\n        {deckList.length > 0 ? \n          <PaginatedItems itemsPerPage={4} decks={deckList} user={user} setDeckToEdit={setDeckToEdit}/>\n        :\n          <p>セットがありません。 作成して開始してください！</p>\n        }\n      </ul>\n      \n    </div>\n  );\n}\n\nexport default DeckList;"," import React, { useState, useContext, useEffect } from 'react';\n import { Link, Switch, Route, useHistory } from 'react-router-dom';\n import { firebaseAuth } from '../provider/AuthProvider';\n  \n import DeckList from './decks-and-cards/DeckList';\n import PageHeading from './PageHeading';\n \n const SavedDecks = ({\n   saveDecks,\n }) => {\n   const { user } = useContext(firebaseAuth);\n   const history = useHistory();\n \n   if (!user) {\n     history.push(\"/log-in\");\n   }\n \n   return (\n     <div className=\"dashboard\">\n         <Switch>\n           <Route path=\"/app/saved\">\n             <div style={{ display: 'flex' }}>\n               <div style={{ width: '100%', margin: '0 auto', paddingRight: 30 }}>\n                 <PageHeading\n                   title=\"保存したセット\"\n                 />\n                 <div>\n                   <DeckList\n                     decks={saveDecks}\n                   />\n                 </div>\n               </div>\n             </div>\n           </Route>\n         </Switch>\n     </div>\n   );\n }\n \n export default SavedDecks;","/**\n * Displays the dashboard page.\n */\n\n import React, { useState, useContext, useEffect } from 'react';\n import { Link, Switch, Route, useHistory } from 'react-router-dom';\n import { firebaseAuth } from '../provider/AuthProvider';\n \n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n import { faPlus } from '@fortawesome/free-solid-svg-icons';\n \n import DeckCreator from './decks-and-cards/DeckCreator';\n import DeckEditor from './decks-and-cards/DeckEditor';\n import DeckList from './decks-and-cards/DeckList';\n import PageHeading from './PageHeading';\n \n const CreatedDecks = ({\n   decks,\n   cards,\n }) => {\n   const [deckToEdit, setDeckToEdit] = useState(null);\n   const { user } = useContext(firebaseAuth);\n   const history = useHistory();\n \n   if (!user) {\n     history.push(\"/log-in\");\n   }\n \n   return (\n     <div className=\"dashboard\">\n         <Switch>\n           <Route path=\"/app/edit\">\n             <DeckEditor\n               deckToEdit={deckToEdit}\n               setDeckToEdit={setDeckToEdit}\n               cards={cards}\n             />\n           </Route>\n           <Route path=\"/app/create\">\n             <PageHeading \n               title=\"新セット\"\n             />\n             <DeckCreator />\n           </Route>\n           <Route path=\"/app/created\">\n             <div style={{ display: 'flex' }}>\n               <div style={{ width: '100%', margin: '0 auto', paddingRight: 30 }}>\n                 <PageHeading\n                   title=\"作ったセット\"\n                 />\n                 <div>\n                   <DeckList\n                     decks={decks}\n                     setDeckToEdit={setDeckToEdit}\n                   />\n                 </div>\n               </div>\n               <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', paddingTop: 100, paddingLeft: 60, width: 200}}>\n                 <button\n                   onClick={() => {\n                     history.push('/app/create')\n                   }}\n                   style={{color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30}}\n                 >\n                   <><FontAwesomeIcon icon={faPlus} style={{marginRight: 5}} /> 新作</>\n                 </button>\n               </div>\n             </div>\n           </Route>\n         </Switch>\n     </div>\n   );\n }\n \n export default CreatedDecks;","/**\n * Handles logic for getting the selected deck and cards.\n * Generates FlippableCards for each card to be shown, and \n * renders them in a Carousel.\n */\n\n import React, { useState, useEffect } from 'react';\n import firebase from 'firebase';\n \n import { useParams } from 'react-router-dom';\n \n import Spinner from '../Spinner';\n \n const shuffleCard = (array) => {\n    let currentIndex = array.length, randomIndex;\n\n    while (currentIndex != 0) {\n\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n const Test = () => {\n   const [cards, setCards] = useState([]);\n   const [hashCards, setHashCards] = useState(null);\n   const [isCardFlipped, setIsCardFlipped] = useState(false);\n   const [canView, setCanView] = useState(true);\n   const [isLoaded, setIsLoaded] = useState(false);\n   const { hash } = useParams();\n   const [correctAnswer, setCorrectAnswer] = useState([]);\n   const [selectedAnswer, setSelectedAnswer] = useState([]);\n   const [result, setResult] = useState();\n   const [submitted, setSubmitted] = useState(false);\n \n   useEffect(() => {\n     setIsLoaded(false);\n     setHashCards(null);\n     setCards(null);\n \n     console.log(hash)\n     if (hash === undefined) return;\n \n     const db = firebase.firestore();\n \n     db.collection('decks').doc(hash).get()\n     .then(snapshot => {\n       setIsLoaded(true);\n     })\n     .catch(error => {\n       setIsLoaded(true);\n       console.log(\"Error: \", error.message)\n     })\n \n     let ref = db.collection('decks').doc(hash);\n     ref.get()\n       .then(snapshot => {\n         let arr = [];\n         snapshot.data().cards?.forEach(item => arr.push(item));\n         setHashCards(arr);\n       })\n       .catch(error => console.log(\"Error: \", error.message))\n   }, [hash]);\n \n   useEffect(() => {\n     setIsLoaded(false);\n     let _cards = [];\n \n     if (hashCards != null) {\n       _cards = hashCards;\n     } else {\n       _cards = [];\n     }\n \n     let _listCorrectAnswer = [];\n     if (_cards.length > 0) {\n       setCards(_cards.map((ele, cardIndex) => {\n        const question = ele.front\n        let answers = [];\n        answers.push(ele.back);\n        while (answers.length < 4) {\n            const randomIndex = Math.floor(Math.random() * _cards.length);\n            if (!answers.includes(_cards[randomIndex].back)) {\n                answers.push(_cards[randomIndex].back)\n            }\n        }\n        shuffleCard(answers);\n        for (let index = 0; index < answers.length; index++) {\n            const element = answers[index];\n            if (element == ele.back) {\n                _listCorrectAnswer.push(index)\n            }\n        }\n        return {\n            question: question,\n            answers: answers,\n        }\n       }));\n       setCorrectAnswer(_listCorrectAnswer);\n       setSelectedAnswer(Array(_listCorrectAnswer.length).fill(-1))\n       setIsLoaded(true);\n     }\n\n     }, [isCardFlipped, hashCards]\n   );\n \n   if (!isLoaded) return (\n     <main>\n       <div className=\"container center\">\n         <Spinner />\n       </div>\n     </main>\n   );\n \n   if (!cards) return (\n     <div className=\"container center\">\n       <p>We couldn't find this deck. :(</p>\n     </div>\n   )\n \n   if (!canView || cards.length === 0) return (\n       <div className=\"container center\">\n         <p>This deck is either private or has no cards! If you are the owner, you can view it and edit it from your dashboard.</p>\n       </div>\n   );\n\n   const _generateListQuestion = () => {\n       return cards.map((ele, cardIndex) => {\n         return (\n            <div style={{\n                border: '1px solid rgba(0, 0, 0, 0.5)', \n                borderRadius: 20,\n                width: '100%',\n                marginBottom: 30,\n                padding: 30}}>\n                    <div style={{\n                        width: '100%',\n                        textAlign: 'center'\n                    }}>\n                        {ele?.question}\n                    </div>\n                {ele?.answers?.map((element, index)=> {\n                  let backgroundColor = index == selectedAnswer[cardIndex] ? 'green' : 'white'\n                  if (submitted) {\n                    if (selectedAnswer[cardIndex] != correctAnswer[cardIndex] && index == correctAnswer[cardIndex]) {\n                      backgroundColor = 'red'\n                    }\n                  }\n                    return <div style={{\n                        height: 30,\n                        width: '80%',\n                        marginLeft: '10%',\n                        marginBottom: 10,\n                        marginTop: 10,\n                        border: '1px solid rgba(0, 0, 0, 0.2)', \n                        borderRadius: 20,\n                        textAlign: 'center',\n                        lineHeight: 2,\n                        verticalAlign: 'center',\n                        backgroundColor: backgroundColor,\n                    }} onClick={(event) => {\n                     const newAnswer = [\n                         ...selectedAnswer.slice(0, cardIndex),\n                         index, \n                         ...selectedAnswer.slice(cardIndex + 1)\n                       ]\n                     setSelectedAnswer(newAnswer)\n                    }}>\n                        <div style={{color: index == selectedAnswer[cardIndex] ? 'white' : 'black',}}>\n                            {element}\n                        </div>\n                    </div>\n                })}\n            </div>\n         )\n       })\n   }\n\n   return (\n\n    <div>\n        {result != null && <div style={{\n            fontSize: 50,\n            marginBottom: 30,\n\n        }}>{`結果: ${result}/${cards.length}`}</div>}\n        {_generateListQuestion()}\n        <div style={{\n            height: 50,\n            width: '80%',\n            marginLeft: '10%',\n            backgroundColor: '#526CC6',\n            color: 'white',\n            fontSize: 26,\n            textAlign: 'center',\n            lineHeight: 2,\n            verticalAlign: 'center',\n            borderRadius: 25,\n        }} onClick={(event) => {\n            let totalResult = 0\n            for (let index = 0; index < selectedAnswer.length; index++) {\n                const selected = selectedAnswer[index];\n                const correct = correctAnswer[index];\n                if (selected == correct) {\n                    totalResult += 1;\n                }\n            }\n            setSubmitted(true);\n            setResult(totalResult);\n        }}>Submit</div>\n    </div>\n   );\n }\n \n export default Test;","/**\n * Handles logic for getting the selected deck and cards.\n * Generates FlippableCards for each card to be shown, and \n * renders them in a Carousel.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nimport { useParams } from 'react-router-dom';\n\nimport Spinner from '../Spinner';\nimport PageHeading from '../PageHeading';\nimport { useAlert } from 'react-alert';\n\nconst shuffleCard = (array) => {\n    if (!array) {\n        return []\n    }\n    let currentIndex = array.length, randomIndex;\n\n    while (currentIndex != 0) {\n\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n\n        [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n}\n\nconst TestCompare = () => {\n    const [hashCards, setHashCards] = useState([]);\n    const [originCards, setOriginCards] = useState([]);\n    const [randomCards, setRandomCards] = useState([]);\n    const [canView, setCanView] = useState(true);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [selectedIndex1, setSelectedIndex1] = useState(null);\n    const [selectedIndex2, setSelectedIndex2] = useState(null);\n    const { hash } = useParams();\n    const alert = useAlert()\n\n    useEffect(() => {\n        setIsLoaded(false);\n        setHashCards(null);\n\n        console.log(hash)\n        if (hash === undefined) return;\n\n        const db = firebase.firestore();\n\n        db.collection('decks').doc(hash).get()\n            .then(snapshot => {\n                setIsLoaded(true);\n            })\n            .catch(error => {\n                setIsLoaded(true);\n                console.log(\"Error: \", error.message)\n            })\n\n        let ref = db.collection('decks').doc(hash);\n        ref.get()\n            .then(snapshot => {\n                let arr = [];\n                snapshot.data().cards?.forEach(item => arr.push(item));\n                setHashCards(arr);\n            })\n            .catch(error => console.log(\"Error: \", error.message))\n    }, [hash]);\n\n    useEffect(() => {\n        setIsLoaded(false);\n        setOriginCards(hashCards)\n        let newArray = hashCards?.slice();\n        setRandomCards(shuffleCard(newArray))\n        setIsLoaded(true);\n    }, [hashCards]);\n\n    if (!isLoaded) return (\n        <main>\n            <div className=\"container center\">\n                <Spinner />\n            </div>\n        </main>\n    );\n\n    if (!hashCards) return (\n        <div className=\"container center\">\n            <p>We couldn't find this deck. :(</p>\n        </div>\n    )\n\n    if (!canView || hashCards.length === 0) return (\n        <div className=\"container center\">\n            <p>Done!</p>\n        </div>\n    );\n\n    const _onCheck = (index1, index2) => {\n        if (originCards[index1].back != randomCards[index2].back) {\n            setSelectedIndex1(null)\n            setSelectedIndex2(null)\n            alert.show('Wrong!')\n        } else {\n            originCards.splice(index1, 1);\n            randomCards.splice(index2, 1);\n            setSelectedIndex1(null)\n            setSelectedIndex2(null)\n            alert.show('Correct!')\n        }\n    }\n\n    const _generateListFront = () => {\n        return originCards?.map((ele, index) => {\n            return (\n                <div style={{\n                    height: 30,\n                    width: '80%',\n                    marginLeft: '10%',\n                    marginBottom: 10,\n                    marginTop: 10,\n                    border: '1px solid rgba(0, 0, 0, 0.2)',\n                    borderRadius: 20,\n                    textAlign: 'center',\n                    lineHeight: 2,\n                    verticalAlign: 'center',\n                    backgroundColor: selectedIndex1 == index ? 'green' : 'white',\n                }} onClick={(event) => {\n                    if (selectedIndex1 == index) {\n                        setSelectedIndex1(null)\n                    } else {\n                        setSelectedIndex1(index)\n                        if (selectedIndex2 != null) {\n                            _onCheck(index, selectedIndex2)\n                        }\n                    }\n                }}>\n                    <div style={{\n                        width: '100%',\n                        textAlign: 'center',\n                        color: selectedIndex1 == index ? 'white' : 'black'\n                    }}>\n                        {ele?.front}\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    const _generateListBack = () => {\n        return randomCards?.map((ele, index) => {\n            return (\n                <div style={{\n                    height: 30,\n                    width: '80%',\n                    marginLeft: '10%',\n                    marginBottom: 10,\n                    marginTop: 10,\n                    border: '1px solid rgba(0, 0, 0, 0.2)',\n                    borderRadius: 20,\n                    textAlign: 'center',\n                    lineHeight: 2,\n                    verticalAlign: 'center',\n                    backgroundColor: selectedIndex2 == index ? 'green' : 'white',\n                }} onClick={(event) => {\n                    if (selectedIndex2 == index) {\n                        setSelectedIndex2(null)\n                    } else {\n                        setSelectedIndex2(index)\n                        if (selectedIndex1 != null) {\n                            _onCheck(selectedIndex1, index)\n                        }\n                    }\n                }}>\n                    <div style={{\n                        width: '100%',\n                        textAlign: 'center',\n                        color: selectedIndex2 == index ? 'white' : 'black'\n                    }}>\n                        {ele?.back}\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    return (\n        <div style={{ display: 'flex' }}>\n            <div style={{ width: '50%', margin: '0 auto', paddingRight: 30 }}>\n                <PageHeading\n                    title=\"Front\"\n                />\n                <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                    <div>\n                        {_generateListFront()}\n                    </div>\n                </div>\n            </div>\n            <div style={{ width: '50%', margin: '0 auto', paddingLeft: 30 }}>\n                <PageHeading\n                    title=\"Back\"\n                />\n                <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                    <div>\n                        {_generateListBack()}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TestCompare;\n","/**\n * Displays the dashboard page.\n */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRandom, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from './Breadcrumb';\nimport DeckCreator from './decks-and-cards/DeckCreator';\nimport DeckEditor from './decks-and-cards/DeckEditor';\nimport DeckList from './decks-and-cards/DeckList';\nimport PageHeading from './PageHeading';\nimport SavedDecks from './SavedDecks';\nimport CreatedDecks from './CreatedDecks';\nimport Deck from './decks-and-cards/Deck';\nimport Test from './decks-and-cards/Test';\nimport TestCompare from './decks-and-cards/TestCompare';\nimport { useAlert } from 'react-alert';\n\nconst Dashboard = ({\n  userStatus,\n  decks,\n  saveDecks,\n  cards,\n}) => {\n  const [deckToEdit, setDeckToEdit] = useState(null);\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n  const isPrenium = () => {\n    return userStatus?.isPrenium ?? false\n  }\n  const alert = useAlert()\n\n  const handleButtons = (event) => {\n    switch (event.target.name) {\n      case \"exit\":\n        if (user) {\n          history.push(\"/app\");\n          return;\n        }\n        history.push(\"/\");\n        return;\n      default:\n        return;\n    }\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <Switch>\n        <Route path=\"/app/edit\">\n          <DeckEditor\n            deckToEdit={deckToEdit}\n            setDeckToEdit={setDeckToEdit}\n            cards={cards}\n          />\n        </Route>\n        <Route path=\"/app/create\">\n          <PageHeading\n            title=\"新セット\"\n            styles={{textAlign: 'left'}}\n          />\n          <DeckCreator />\n        </Route>\n        <Route path=\"/app/saved\">\n          <SavedDecks\n            saveDecks={saveDecks}\n          />\n        </Route>\n        <Route path=\"/app/created\">\n          <CreatedDecks\n            decks={decks}\n            cards={cards}\n          />\n        </Route>\n        <Route path=\"/app/d/:hash\">\n          <Deck \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app/test/:hash\">\n          <Test/>\n        </Route>\n        <Route path=\"/app/test-match/:hash\">\n          <TestCompare/>\n        </Route>\n        <Route path=\"/app\">\n          {!isPrenium() && <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n            <div style={{color: 'red'}}>プレミアムにアップグレードしていない場合は、完全な機能のためにアップグレードしてください</div>\n            <button style={{width: 100, height: 40, borderRadius: 10, background: 'rgb(234, 178, 174)', fontSize: 12}} onClick={\n              () => {history.push('/upgrade')}\n            }>アップグレード</button>\n          </div>}\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '50%', margin: '0 auto', paddingRight: 30 }}>\n              <PageHeading\n                title=\"作ったセット\"\n              />\n              <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                <div>\n                  <DeckList\n                    decks={isPrenium() ? decks : decks.slice(0,3)}\n                    setDeckToEdit={setDeckToEdit}\n                    userStatus={userStatus}\n                  />\n                </div>\n              </div>\n            </div>\n            <div style={{ width: '50%', margin: '0 auto', paddingLeft: 30 }}>\n              <PageHeading\n                title=\"保存したセット\"\n              />\n              <div style={{ padding: 20, background: '#B9BBEA', borderRadius: 10 }}>\n                <div>\n                  <DeckList\n                    decks={isPrenium() ? saveDecks : saveDecks.slice(0, 3)}\n                    userStatus={userStatus}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', paddingTop: 100, paddingLeft: 60, width: 200 }}>\n              <button\n                onClick={() => {\n                  if (isPrenium() || decks.length < 3) {\n                    history.push('/app/create')\n                  } else {\n                    alert.show(\"プレミアムにアップグレードしていない場合は、完全な機能のためにアップグレードしてください\")\n                  }\n                }} \n                style={{ color: '#B02A22', background: 'transparent', display: 'flex', border: 'unset', fontSize: 30, paddingBottom: 30 }}\n              >\n                <>新作</>\n              </button>\n            </div>\n          </div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Dashboard;","import React, { useContext, useState } from 'react';\nimport { Link, useHistory, Switch, Route } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nimport PageHeading from './PageHeading';\nimport DeckList from './decks-and-cards/DeckList';\nimport DeckEditor from './decks-and-cards/DeckEditor';\n\nconst Home = ({\n  allDecks,\n  userStatus\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const [deckToEdit1, setDeckToEdit] = useState(null);\n  const history = useHistory();\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n  return (\n    <Switch>\n      <Route path=\"/app-edit\" >\n        <DeckEditor\n          deckToEdit={deckToEdit1}\n          setDeckToEdit={setDeckToEdit}\n        />\n      </Route>\n      <Route path=\"/\">\n        <>\n          <header className=\"hero\">\n            <section>\n              <div className=\"hero-content\">\n                <div className=\"buttons\">\n                  <>\n                  </>\n                </div>\n              </div>\n            </section>\n            <div className=\"card-design\">\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n              <div>\n                <span></span>\n                <div>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          </header>\n\n          <section className=\"public-decks\">\n            <div>\n              <PageHeading\n                title=\"全てセット\"\n              />\n              <div style={{textAlign: 'left'}}>\n                <DeckList\n                  //de tam day vi sort hoac orderBy trong useHook ko duoc :v\n                  decks={allDecks.sort((a, b) => b.saveCount - a.saveCount)}\n                  setDeckToEdit={setDeckToEdit}\n                  userStatus={userStatus}\n                />\n              </div>\n            </div>\n          </section>\n        </>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Home;","/**\n * Hook for user authentication and account management:\n * \n * Logging user in\n * Signing user up\n * Logging user out\n * Updating user email\n * Changing user password\n * Deleting account\n */\n\nimport { useState, useEffect, useContext } from 'react';\nimport { auth, db, fb } from '../firebase/firebaseIndex';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nconst useAuth = (username = null, email = null, password = null, newPassword = null, avatarUrl = null) => {\n  const { user } = useContext(firebaseAuth);\n\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(\"pending\");\n\n  const [login, setLogin] = useState(0);\n  const [signup, setSignup] = useState(0);\n  const [logout, setLogout] = useState(0);\n  const [changeEmail, setChangeEmail] = useState(0);\n  const [changePassword, setChangePassword] = useState(0);\n  const [deleteAccount, setDeleteAccount] = useState(0);\n\n  // Logging user in\n  useEffect(() => {\n    if (login === 0 || user != null) return;\n    setError(null);\n    setStatus(\"loading\");\n    auth.signInWithEmailAndPassword(email, password)\n    .then((userCredential) => {\n      let _user = userCredential.user;\n      db.collection('users').doc(_user.uid).get().then((doc) => {\n        let data = {\n          uid: _user.uid,\n          ...doc.data()\n        }\n        if (data.isActive ?? false) {\n          setUserData(data);\n          setStatus(\"success\");\n        } else {\n          auth.signOut()\n          setError(\"deactive\");\n          setStatus(\"error\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error logging user in: \", error.message);\n        setError(error);\n        setStatus(\"error\");\n      });\n    })\n    .catch((error) => {\n      console.error(\"Error logging user in: \", error.message);\n      setError(error);\n      setStatus(\"error\");\n    })\n  }, [login]);\n\n  // Signing user up\n  useEffect(() => {\n    if (signup === 0 || user != null) return;\n    setError(null);\n    setStatus(\"loading\");\n    auth.createUserWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        let _user = userCredential.user;\n        db.collection('users').doc(_user.uid).set({\n          username: username,\n          email: email,\n          isActive: true,\n          isPrenium: false,\n          coin: 0,\n        });\n        userCredential.user.updateProfile({displayName: username})\n        setUserData(_user);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        console.error(\"Error signing user in: \", error.message);\n        setError(error);\n        setStatus(\"error\");\n      })\n\n  }, [signup]);\n\n  // Logging user out\n  useEffect(() => {\n    if (logout === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    auth.signOut()\n    .then(() => {\n      console.log(\"Logged out\");\n      setUserData(null);\n      localStorage.removeItem('deck')\n      localStorage.removeItem('save_decks')\n      setStatus(\"success\");\n    })\n    .catch(error => {\n      console.error(\"Error logging user out: \", error.message);\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [logout]);\n\n  useEffect(() => {\n    if (changeEmail === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\")\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      console.log(\"User successfully reauthenticated.\");\n      auth.currentUser.updateEmail(email)\n      .then(() => {\n        db.collection('users').doc(user.uid).update({\n          email: email,\n        });\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n      setStatus(\"loading\")\n      auth.currentUser.updateProfile({displayName: username, photoURL: avatarUrl})\n      .then(() => {\n        setUserData(auth.currentUser);\n        db.collection('users').doc(user.uid).update({\n          username: username,\n        });\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [changeEmail]);\n\n  // Changing password\n  useEffect(() => {\n    if (changePassword === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n    \n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      console.log(\"User successfully reauthenticated.\");\n      auth.currentUser.updatePassword(newPassword).then(function() {\n        setStatus(\"success\");\n      }).catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [changePassword])\n\n  // Delete account\n  useEffect(() => {\n    if (deleteAccount === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n\n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      auth.currentUser.delete().then(() => {\n        setStatus(\"success\");\n      }).catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      })\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    });\n\n  }, [deleteAccount])\n\n  const handleLogin = () => setLogin(prev => prev + 1);\n  const handleSignup = () => setSignup(prev => prev + 1);\n  const handleLogout = () => setLogout(prev => prev + 1);\n  const handleChangeEmail = () => setChangeEmail(prev => prev + 1);\n  const handleChangePassword = () => setChangePassword(prev => prev + 1);\n  const handleDeleteAccount = () => setDeleteAccount(prev => prev + 1);\n  const resetStatus = () => setStatus('pending');\n\n  return { \n    userData, \n    error, \n    status,\n    handleLogin, \n    handleSignup, \n    handleLogout,\n    handleChangeEmail,\n    handleChangePassword,\n    handleDeleteAccount,\n    resetStatus\n  };\n}\n\nexport default useAuth;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst Login = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n  const [inputs, setInputs] = useState({ email: \"\", password: \"\" });\n\n  const { status, error, handleLogin} = useAuth(null, inputs.email, inputs.password);\n  const { user } = useContext(firebaseAuth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleLogin();\n  }\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/app\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    if (error === \"deactive\") {\n      setErrorMessage(\"User deactived\");\n        return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/user-not-found\":\n        setErrorMessage(\"メールアドレスとパスワードが一致しません。\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"メールアドレスとパスワードが一致しません。\");\n        return;\n      case \"auth/invalid-email\":\n        setErrorMessage(\"有効なメールアドレスを入力してください。\");\n        return;\n      default:\n        setErrorMessage(\"何かがうまくいかなかった。もう一度やり直してください。\");\n        return;\n    }\n\n  }, [error]);\n\n  return (\n    <div className=\"login\" style={{textAlign: 'center'}}>\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', marginRight: 200}}>\n        <div style={{display: 'flex', paddingRight: 50, fontSize: 25, alignItems: 'center'}}>\n          <Link to=\"/sign-up\">サインアップ</Link>\n        </div>\n        <PageHeading \n          title=\"ログイン\"\n        />\n      </div>\n      <form style={{display: 'inline-block'}} onSubmit={handleSubmit}>\n        <TextInput \n          labelText=\"メールアドレス\"\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n          id=\"email\"\n          name=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          placeholder=\"メールアドレス\"\n        />\n        <TextInput \n          labelText=\"パスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button \n          className=\"btn btn-primary\"\n          style={{backgroundColor: '#526CC6', borderColor: 'unset', borderRadius: 20, borderWidth: 0}}\n          disabled={inputs.password === \"\" || inputs.email === \"\"}        \n        >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"ログイン\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;","/**\n * Displays a spinner for 1 second when logging out.\n */\n\nimport React, { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport useAuth from '../../hooks/useAuth';\n\nimport Spinner from '../Spinner';\n\nconst Logout = () => {\n  const { user } = useContext(firebaseAuth);\n  const { handleLogout } = useAuth()\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!user) return;\n    handleLogout();\n    setTimeout(() => history.push(\"/\"), 1000);\n  }, [user]);\n\n  return (\n    <div className=\"container center\">\n      <p><Spinner /> Logging out . . .</p>\n    </div>\n  );\n}\n\nexport default Logout;","/**\n * Displays the update password page.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from '../Breadcrumb';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst ChangePassword = ({\n  handleChange,\n  inputs,\n  error,\n  onSubmit,\n  status\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n  \n  return (\n    <>\n      <PageHeading\n        title=\"パスワードを変更してください\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"新しいパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"new-password\"\n          name=\"newPassword\"\n          value={inputs.newPassword}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-primary\"　style={{color: 'white', background: '#526CC6', border: 'unset'}}>\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"パスワードを変更する\"}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default ChangePassword;","/**\n * Displays the delete account page.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from '../Breadcrumb';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst DeleteAccount = ({\n  handleChange,\n  inputs,\n  error,\n  onSubmit\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    switch (error) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n  \n  return (\n    <>\n      <PageHeading\n        title=\"アカウントを削除する\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-warning\">アカウントを完全に削除する</button>\n      </form>\n    </>\n  );\n}\n\nexport default DeleteAccount;","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faEnvelope, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst UpdateProfile = ({\n  handleChange,\n  inputs,\n  onSubmit,\n  error,\n  status,\n  onBack\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n\n  useEffect(() => {\n    return () => onBack();\n  }, [])\n\n  return (\n    <>\n      <PageHeading\n        title=\"メールを更新する\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"ユーザー名\"\n          icon={<FontAwesomeIcon icon={faUser} />}\n          id=\"username\"\n          name=\"username\"\n          value={inputs.username}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"メルアドレス\"\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n          id=\"email\"\n          name=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          placeholder=\"メルアドレス\"\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-primary\" \n        style={{color: 'white', background: '#526CC6', border: 'unset'}}\n        disabled={inputs.password === \"\" || inputs.email === \"\" || inputs.username === \"\"}   >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"メールを更新する\"}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default UpdateProfile;","/**\n * Shows the My Account page and sets up the useAuth\n * hook to be used on ChangePassword, UpdateEmail and\n * DeleteAccount components.\n */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport ChangePassword from './ChangePassword';\nimport DeleteAccount from './DeleteAccount';\nimport PageHeading from '../PageHeading';\nimport UpdateProfile from './UpdateProfile';\n\nconst MyAccount = () => {\n  const { user } = useContext(firebaseAuth);\n  const [inputs, setInputs] = useState({ \n    email: user.email || \"\",\n    password: \"\", \n    newPassword: \"\", \n    username: user.displayName || \"\", \n    avatarUrl: user.photoUrl || \"\"});\n\n  const { \n    loading, \n    error, \n    status, \n    handleChangeEmail, \n    handleChangePassword, \n    handleDeleteAccount,\n    resetStatus\n  } = useAuth(inputs.username, inputs.email, inputs.password, inputs.newPassword);\n\n  const isPrenium = JSON.parse(localStorage.getItem('isPrenium') ?? 'false')\n\n  const history = useHistory();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"my-account\">\n      <div className=\"my-account-inner\" style={{width: '50%', margin: '0 auto'}}>\n        <Switch>\n          <Route exact path=\"/my-account\">\n            <div>\n              <PageHeading\n                title=\"アカウント\"\n                subTitle={isPrenium == 'true' ? \"プレミアム\" : \"トライアル\"}\n                subTitleStyles={{color: isPrenium ? 'green' : 'red', textAlign: 'center'}}\n              />\n              <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between'}}>\n                <div>利用可能なコイン: 100 コイン</div>\n                <button style={{width: 100, height: 30, borderRadius: 10, background: 'green', color: 'white', fontSize: 10}} onClick={() => {\n                  history.push('/buy-coin')\n                }}>コインを買う</button>\n                <button style={{width: 100, height: 30, borderRadius: 10, background: 'rgb(234, 178, 174)', fontSize: 10}} onClick={() => {\n                  history.push('/upgrade')\n                }}>アップグレード</button>\n\n              </div>\n              <div className=\"account-data\">\n                  <Link to=\"/my-account/change-email\" className=\"btn btn-tertiary\">\n                    <span>メールを更新する</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                  </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/my-account/change-password\" className=\"btn btn-tertiary\">\n                  <span>パスワードを変更してください</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/my-account/delete-account\" className=\"btn btn-warning\">\n                  <FontAwesomeIcon icon={faTrash} />&nbsp;&nbsp;&nbsp;アカウントを削除する\n                </Link>\n              </div>\n            </div>\n          </Route>\n\n          <Route exact path=\"/my-account/change-email\">\n            <UpdateProfile \n              handleChange={handleChange}\n              inputs={inputs}\n              loading={loading}\n              onSubmit={handleChangeEmail}\n              error={error}\n              status={status}\n              onBack={resetStatus}\n            />\n          </Route>\n\n          <Route exact path=\"/my-account/change-password\">\n            <ChangePassword \n              handleChange={handleChange}\n              loading={loading}\n              inputs={inputs}\n              onSubmit={handleChangePassword}\n              error={error}\n              status={status}\n            />\n          </Route>\n          \n          <Route exact path=\"/my-account/delete-account\">\n            <DeleteAccount \n              handleChange={handleChange}\n              inputs={inputs}\n              onSubmit={handleDeleteAccount}\n              error={error}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default MyAccount;","import React, {useEffect, useState} from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navlinks = ({ closeMenu, userName }) => {\n  const [firstChar, setFirstChar] = useState('');\n  const [bgColor, setBgColor] = useState('');\n\n  const getFirstChar = () => {\n    if (userName) {\n      setFirstChar(userName.charAt(0).toUpperCase());\n    }\n  }\n\n  useEffect(() => {\n    setBgColor('#' + getRandomColor());\n    console.log(bgColor);\n    getFirstChar();\n  },[userName]);\n\n  const getRandomColor = () => {\n    return Math.floor(Math.random()*16777215).toString(16)\n  }\n\n\n  \n  return (\n    <div style={{position: 'relative', display: 'flex'}}>\n      <div className=\"avatar-btn\" style={{backgroundColor: `${bgColor}`}}>\n        <div className=\"name\">{firstChar}</div>\n      </div>\n      <div className=\"avt-links\">\n        <ul>\n        <li style={{color: 'white', fontSize: 20, textAlign: 'center'}}>\n          {userName}\n        </li>\n        <li>\n          <NavLink\n            to=\"/my-account\"\n            className=\"link\"\n            onClick={() => closeMenu()}\n          >\n            プロフィール\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/log-out\" className=\"link\" onClick={() => closeMenu()}>\n            ログアウト\n          </NavLink>\n        </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Navlinks;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReply, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\n\nimport Navlinks from './Navlinks';\nimport TextInput from './TextInput';\n\nconst Nav = ({\n  onClick,\n  isMenuOpen,\n  mobile=false,\n  onSearch,\n}) => {\n  const [navClasses, setNavClasses] = useState(\"navbar\");\n  const btnClasses= \"btn btn-hamburger small-screen-only \" + (isMenuOpen && \"open\"); \n  let location = useLocation();\n  const { user } = useContext(firebaseAuth);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n\n    if (mobile) {\n      setNavClasses(\"navbar\");\n      return;\n    }\n\n    if (location.pathname !== \"/\") {\n      setNavClasses(\"navbar light\");\n      return;\n    }\n\n    setNavClasses(\"navbar\");\n  }, [location, mobile])\n\n  if (!user) {\n    return null\n  }\n\n  return (\n    <header className={navClasses} style={{background: '#526CC6'}}>\n      <div className=\"navbar-inner\">\n        <div className=\"logo\">\n        <Link to=\"/\" className=\"logo\" >\n        ディスカバリー\n        </Link>\n        <div style={{height: 30, width: 2, backgroundColor: 'black', marginLeft: 20, marginRight: 20}}></div>\n        <Link to=\"/app\" className=\"logo\">\n          私のフラッシュカード\n        </Link>\n          </div>\n          <input\n          style={{outline: 'unset', height: 30, borderRadius: 15, paddingLeft: 10, borderColor: 'white'}}\n          id=\"search\"\n          name=\"search\"\n          placeholder='検索する'\n          value={searchText}\n          onChange={(e) => {\n            setSearchText(e.target.value)\n            onSearch(e.target.value)\n          }}\n        />\n          \n        <div className=\"right-nav\">\n          <nav className=\"large-screen-only\">\n            <Navlinks closeMenu={() => null } userName={user.displayName}/>\n          </nav>\n          <button \n            className={btnClasses}\n            name=\"toggle-menu\"\n            onClick={onClick}\n          >\n            <span></span>\n            <span></span>\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Nav;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst Signup = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [inputs, setInputs] = useState({username: \"\", email: \"\", password: \"\" });\n  const history = useHistory();\n\n  const { status, error, handleSignup} = useAuth(inputs.username, inputs.email, inputs.password);\n  const { user } = useContext(firebaseAuth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleSignup();\n  }\n\n  useEffect(() => {\n    if (error === null) return;\n    console.log(error.message);\n  }, [error])\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/app\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/weak-password\":\n        setErrorMessage(\"パスワードは6文字以上である必要があります。\");\n        return;\n      case \"auth/email-already-in-use\":\n        setErrorMessage(\"このメールはすでに登録されています。\");\n        return;\n      case \"auth/invalid-email\":\n        setErrorMessage(\"有効なメールアドレスを入力してください。\");\n        return;\n      default:\n        setErrorMessage(\"何かがうまくいかなかった。 もう一度やり直してください。\");\n        return;\n    }\n  }, [error]);\n\n  return (\n    <div className=\"signup\" style={{textAlign: 'center'}}>\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', marginRight: 200}}>\n        <div style={{display: 'flex', paddingRight: 50, fontSize: 25, alignItems: 'center'}}>\n          <Link to=\"/log-in\">ログイン</Link>\n        </div>\n        <PageHeading \n        title=\"サインアップ\"\n      />\n      </div>\n      <form style={{display: 'inline-block'}} onSubmit={handleSubmit}>\n      <TextInput \n          labelText=\"ユーザー名\"\n          id=\"username\"\n          name=\"username\"\n          placeholder=\"ユーザー名\"\n          value={inputs.username}\n          onChange={handleChange}\n          icon={<FontAwesomeIcon icon={faUser} />}\n        />\n        <TextInput \n          labelText=\"メールアドレス\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"メールアドレス\"\n          value={inputs.email}\n          onChange={handleChange}\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n        />\n        <TextInput \n          labelText=\"パスワード\"\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button \n          className=\"btn btn-primary\"\n          style={{backgroundColor: '#526CC6', borderColor: 'unset', borderRadius: 20, borderWidth: 0}}\n          disabled={inputs.username === \"\" || inputs.password === \"\" || inputs.email === \"\"}\n        >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"サインアップ\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;","/**\n * Shows the My Account page and sets up the useAuth\n * hook to be used on ChangePassword, UpdateEmail and\n * DeleteAccount components.\n */\n\n import React, { useState, useContext, useEffect } from 'react';\n import { firebaseAuth } from '../../provider/AuthProvider';\n import { Link, Switch, Route, useHistory } from 'react-router-dom';\n import useAuth from '../../hooks/useAuth';\n \n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n import { faAngleRight, faTrash } from '@fortawesome/free-solid-svg-icons';\n \n import ChangePassword from './ChangePassword';\n import DeleteAccount from './DeleteAccount';\n import PageHeading from '../PageHeading';\n import UpdateProfile from './UpdateProfile';\nimport { useAlert } from 'react-alert';\nimport { dbMethods } from '../../firebase/dbMethods';\n \n const Upgrade = ({\n    userStatus,\n  }) => {\n   const { user } = useContext(firebaseAuth);\n   const [inputs, setInputs] = useState({ \n     email: user.email || \"\",\n     password: \"\", \n     newPassword: \"\", \n     username: user.displayName || \"\", \n     avatarUrl: user.photoUrl || \"\"});\n \n   const { \n     loading, \n     error, \n     status, \n     handleChangeEmail, \n     handleChangePassword, \n     handleDeleteAccount,\n     resetStatus\n   } = useAuth(inputs.username, inputs.email, inputs.password, inputs.newPassword);\n  \n   const history = useHistory();\n\n   const alert = useAlert();\n \n   const handleChange = e => {\n     const { name, value } = e.target;\n     setInputs(prev => ({ ...prev, [name]: value }));\n   }\n \n   if (!user) {\n     history.push(\"/log-in\");\n   }\n\n   const isPrenium = () => {\n       return userStatus?.isPrenium ?? false\n    }\n \n   return (\n     <div className=\"my-account\">\n       <div className=\"my-account-inner\" style={{width: '50%', margin: '0 auto'}}>\n         <Switch>\n           <Route exact path=\"/upgrade\">\n             <div>\n               <PageHeading\n                 title=\"アップグレード\"\n               />\n               <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between'}}>\n                 <div>{`利用可能なコイン: ${userStatus?.coin ?? 0} コイン`}</div>\n                 <button style={{width: 100, height: 30, borderRadius: 10, background: 'green', color: 'white', fontSize: 10}} onClick={() => {\n                   history.push('/buy-coin')\n                 }}>コインを買う</button>\n               </div>\n               <h3>\n                   {isPrenium() ? \"現在プレミアム機能を使用しています\" : \"現在トライアル機能を使用しています\"}\n               </h3>\n               {!isPrenium() && <div className=\"account-data\">\n                   <h4>これらの機能のロックを解除するには、100コイン/月でプレミアムにアップグレードしてください： </h4>\n                   <h5 style={{color: 'green'}}>・フラッシュカードの無制限の作成セット</h5>\n                   <h5 style={{color: 'orange'}}>・他の人のフラッシュカードのセットを無制限に保存</h5>\n                   <button className=\"btn btn-tertiary\" onClick={() => {\n                       if ((userStatus?.coin ?? 0) < 100) {\n                           alert.show(\"コインが足りない場合は、アップグレードするためにコインを追加購入してください\")\n                       } else {\n                           dbMethods.updateUser(user, userStatus?.coin - 100, true)\n                       }\n                   }}>\n                     <span>100コイン/月でプレミアムにアップグレード</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                   </button>\n               </div>}\n               <h4>これらの機能のロックを解除するには、500コイン/月でVIPにアップグレードしてください： </h4>\n                   <h5 style={{color: 'green'}}>・フラッシュカードのテストをカスタマイズします</h5>\n                   <h5 style={{color: 'orange'}}>・フラッシュカードからコンテストを作成する</h5>\n                   <h5 style={{color: 'blue'}}>・セットをダウンロードし、テストし、doc、pdf、..でコンテストします</h5>\n                   <button className=\"btn btn-tertiary\" onClick={() => {\n                       alert.show('機能は開発中です')\n                    }}>\n                     <span>500コイン/月でVIPにアップグレード</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                   </button>\n             </div>\n           </Route>\n \n           <Route exact path=\"/my-account/change-email\">\n             <UpdateProfile \n               handleChange={handleChange}\n               inputs={inputs}\n               loading={loading}\n               onSubmit={handleChangeEmail}\n               error={error}\n               status={status}\n               onBack={resetStatus}\n             />\n           </Route>\n \n           <Route exact path=\"/my-account/change-password\">\n             <ChangePassword \n               handleChange={handleChange}\n               loading={loading}\n               inputs={inputs}\n               onSubmit={handleChangePassword}\n               error={error}\n               status={status}\n             />\n           </Route>\n           \n           <Route exact path=\"/my-account/delete-account\">\n             <DeleteAccount \n               handleChange={handleChange}\n               inputs={inputs}\n               onSubmit={handleDeleteAccount}\n               error={error}\n             />\n           </Route>\n         </Switch>\n       </div>\n     </div>\n   );\n }\n \n export default Upgrade;","/**\n * Shows the My Account page and sets up the useAuth\n * hook to be used on ChangePassword, UpdateEmail and\n * DeleteAccount components.\n */\n\n import React, { useState, useContext, useEffect } from 'react';\n import { firebaseAuth } from '../../provider/AuthProvider';\n import { Link, Switch, Route, useHistory } from 'react-router-dom';\n import useAuth from '../../hooks/useAuth';\n \n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n import { faAngleRight, faTrash } from '@fortawesome/free-solid-svg-icons';\n \n import ChangePassword from './ChangePassword';\n import DeleteAccount from './DeleteAccount';\n import PageHeading from '../PageHeading';\n import UpdateProfile from './UpdateProfile';\nimport { useAlert } from 'react-alert';\nimport { dbMethods } from '../../firebase/dbMethods';\n \n const BuyCoin = ({\n    userStatus,\n  }) => {\n   const { user } = useContext(firebaseAuth);\n   const [inputs, setInputs] = useState({ \n     email: user.email || \"\",\n     password: \"\", \n     newPassword: \"\", \n     username: user.displayName || \"\", \n     avatarUrl: user.photoUrl || \"\"});\n \n   const { \n     loading, \n     error, \n     status, \n     handleChangeEmail, \n     handleChangePassword, \n     handleDeleteAccount,\n     resetStatus\n   } = useAuth(inputs.username, inputs.email, inputs.password, inputs.newPassword);\n  \n   const history = useHistory();\n\n   const alert = useAlert();\n \n   const handleChange = e => {\n     const { name, value } = e.target;\n     setInputs(prev => ({ ...prev, [name]: value }));\n   }\n \n   if (!user) {\n     history.push(\"/log-in\");\n   }\n\n   const isPrenium = () => {\n       return userStatus?.isPrenium ?? false\n   }\n \n   return (\n     <div className=\"my-account\">\n       <div className=\"my-account-inner\" style={{width: '50%', margin: '0 auto'}}>\n         <Switch>\n           <Route exact path=\"/buy-coin\">\n             <div>\n               <PageHeading\n                 title=\"コインを買う\"\n               />\n               <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between'}}>\n                 <div>{`利用可能なコイン: ${userStatus?.coin ?? 0} コイン`}</div>\n                 <button style={{width: 100, height: 30, borderRadius: 10, background: 'rgb(234, 178, 174)', fontSize: 10}} onClick={() => {\n                     history.push('/upgrade')\n                  }}>アップグレード</button>\n               </div>\n               <div className=\"account-data\">\n                   <h4>100コインを買う</h4>\n                   <button className=\"btn btn-tertiary\" onClick={() => {\n                       dbMethods.updateUser(user, (userStatus?.coin?? 0) + 100, userStatus?.isPrenium ?? false)\n                    }}>\n                     <span>50円から100コイン買う</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                   </button>\n               </div>\n               <h4>1000コインを買う</h4>\n                   <button className=\"btn btn-tertiary\" onClick={() => {\n                       dbMethods.updateUser(user, (userStatus?.coin?? 0) + 1000, userStatus?.isPrenium ?? false)\n                    }}>\n                     <span>500円から1000コイン買う</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                   </button>\n             </div>\n           </Route>\n \n           <Route exact path=\"/my-account/change-email\">\n             <UpdateProfile \n               handleChange={handleChange}\n               inputs={inputs}\n               loading={loading}\n               onSubmit={handleChangeEmail}\n               error={error}\n               status={status}\n               onBack={resetStatus}\n             />\n           </Route>\n \n           <Route exact path=\"/my-account/change-password\">\n             <ChangePassword \n               handleChange={handleChange}\n               loading={loading}\n               inputs={inputs}\n               onSubmit={handleChangePassword}\n               error={error}\n               status={status}\n             />\n           </Route>\n           \n           <Route exact path=\"/my-account/delete-account\">\n             <DeleteAccount \n               handleChange={handleChange}\n               inputs={inputs}\n               onSubmit={handleDeleteAccount}\n               error={error}\n             />\n           </Route>\n         </Switch>\n       </div>\n     </div>\n   );\n }\n \n export default BuyCoin;","/**\n * Main wrapper for the app, containing the shuffle functionality\n * used by Deck and Dashboard components.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport { firebaseAuth } from './provider/AuthProvider';\nimport useOnDecksSnapshot from './hooks/useOnDecksSnapshot';\nimport useOnAllDecksSnapshot from './hooks/useOnAllDecksSnapshot';\nimport useOnUserStatusSnapshot from './hooks/useOnUserStatusSnapshot';\n\nimport Deck from './components/decks-and-cards/Deck';\nimport Dashboard from './components/Dashboard';\nimport Home from './components/Home';\nimport Login from './components/account-management/Login';\nimport Logout from './components/account-management/Logout';\nimport MyAccount from './components/account-management/MyAccount';\nimport Nav from './components/Nav';\nimport Signup from './components/account-management/Signup';\nimport Upgrade from './components/account-management/Upgrade';\nimport BuyCoin from './components/account-management/BuyCoin';\n\nconst App = () => {\n  const [selectedDecks, setSelectedDecks] = useState([]);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const history = useHistory();\n  const { user } = useContext(firebaseAuth);\n  const { decks } = useOnDecksSnapshot(user);\n  const { allDecks, saveDecks } = useOnAllDecksSnapshot(user);\n  const { userStatus } = useOnUserStatusSnapshot(user); \n\n  const [decksData, setDecksData] = useState([]);\n  const [saveDecksData, setSaveDecksData] = useState([]);\n  const [allDecksData, setAllDecksData] = useState([]);\n\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    if (!isSearching) {\n      setDecksData(decks)\n    }\n  }, [decks])\n\n  useEffect(() => {\n    if (!isSearching) {\n      setSaveDecksData(saveDecks)\n    }\n  }, [saveDecks])\n\n  useEffect(() => {\n    if (!isSearching) {\n      setAllDecksData(allDecks)\n    }\n  }, [allDecks])\n\n  useEffect(() => {\n    if (userStatus == null) {\n      return;\n    }\n    if (!(userStatus?.isActive ?? false)) {\n      history.push('/log-out');\n    }\n  }, [userStatus])\n\n  useEffect(() => {\n    if (!searchText || searchText.length == 0) {\n      setIsSearching(false)\n      setDecksData(decks)\n      setSaveDecksData(saveDecks)\n      setAllDecksData(allDecks)\n    } else {\n      setIsSearching(true)\n      setDecksData(decks.filter((element) => {return element.title.includes(searchText)}));\n      setSaveDecksData(saveDecks.filter((element) => {return element.title.includes(searchText)}));\n      setAllDecksData(allDecks.filter((element) => {return element.title.includes(searchText)}));\n    }\n  }, [searchText])\n\n  useEffect(() => {\n    if (user) return;\n    setSelectedDecks([]);\n  }, [user]);\n\n  const onSearch = (text) => {\n    setSearchText(text);\n  }\n\n  const handleButtons = (event) => {\n    switch (event.target.name) {\n      case \"exit\":\n        if (user) {\n          history.push(\"/app\");\n          return;\n        }\n        history.push(\"/\");\n        return;\n  \n      case \"toggle-menu\":\n        setIsMenuOpen(prev => !prev);\n        return;\n      default:\n        return;\n    }\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"app\">\n      <Nav \n        onClick={handleButtons}\n        isMenuOpen={isMenuOpen}\n        onSearch={onSearch}\n      />\n      <Switch>\n        <Route path=\"/log-in\">\n          <Login />\n        </Route>\n        <Route path=\"/log-out\">\n          <main>\n            <Logout />\n          </main>\n        </Route>\n        <Route path=\"/sign-up\">\n          <Signup />\n        </Route>\n        <Route path=\"/my-account\">\n          <main>\n            <MyAccount />\n          </main>\n        </Route>\n        <Route path=\"/upgrade\">\n          <main>\n            <Upgrade \n              userStatus={userStatus}\n            />\n          </main>\n        </Route>\n        <Route path=\"/buy-coin\">\n          <main>\n            <BuyCoin\n              userStatus={userStatus}\n            />\n          </main>\n        </Route>\n        <Route path=\"/app/shuffle\">\n          <Deck \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app/d/:hash\">\n          <Deck \n            onClick={handleButtons}\n          />\n        </Route>\n        <Route path=\"/app\">\n          <main>\n            <Dashboard \n              onClick={handleButtons}\n              decks={decksData}\n              saveDecks={saveDecksData}\n              selectedDecks={selectedDecks}\n              setSelectedDecks={setSelectedDecks}\n              userStatus={userStatus}\n            />\n          </main>\n        </Route>\n        <Route path=\"/\">\n          <main>\n            <Home \n              allDecks={allDecksData} \n              setSelectedDecks={setSelectedDecks} \n              selectedDecks={selectedDecks}\n              userStatus={userStatus}\n              />\n          </main>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport { render } from 'react-dom'\nimport { HashRouter } from 'react-router-dom';\nimport AuthProvider from './provider/AuthProvider';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\n\nimport './styles/normalize.css';\nimport './styles/styles.css';\nimport App from './App';\n\nconst options = {\n  position: positions.MIDDLE,\n  timeout: 3000,\n  offset: '30px',\n  transition: transitions.SCALE\n}\n\nconst Root = () => (\n  <React.StrictMode>\n    <HashRouter>\n      <AuthProvider>\n        \n      <AlertProvider template={AlertTemplate} {...options}>\n        <App />\n      </AlertProvider>\n      </AuthProvider>\n    </HashRouter>\n  </React.StrictMode>\n)\n\nrender(<Root />, document.getElementById('root'))\n"],"sourceRoot":""}