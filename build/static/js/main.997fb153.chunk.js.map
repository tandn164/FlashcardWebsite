{"version":3,"sources":["firebase/firebaseIndex.js","provider/AuthProvider.js","hooks/useOnUserSnapshot.js","hooks/useAuth.js","components/PageHeading.js","components/TextInput.js","components/account-management/Login.js","components/Spinner.js","components/account-management/Logout.js","components/account-management/ChangePassword.js","components/account-management/DeleteAccount.js","components/account-management/UpdateProfile.js","components/account-management/MyAccount.js","components/Navlinks.js","components/Nav.js","firebase/dbMethods.js","components/admin/Admin.js","hooks/useOnDecksSnapshot.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","db","firestore","fb","storage","firebaseAuth","React","createContext","AuthProvider","props","useState","user","setUser","useEffect","unsub","onAuthStateChanged","Provider","value","children","useOnUserSnapshot","users","setUsers","unsubscribe","collection","onSnapshot","snapshot","arr","forEach","push","id","data","error","console","log","message","useAuth","username","email","password","newPassword","avatarUrl","useContext","userData","setUserData","setError","status","setStatus","login","setLogin","signup","setSignup","logout","setLogout","changeEmail","setChangeEmail","changePassword","setChangePassword","deleteAccount","setDeleteAccount","signInWithEmailAndPassword","then","userCredential","_user","uid","signOut","catch","createUserWithEmailAndPassword","doc","set","save_decks","updateProfile","displayName","localStorage","removeItem","code","credential","EmailAuthProvider","currentUser","reauthenticateWithCredential","updateEmail","photoURL","updatePassword","delete","handleLogin","prev","handleSignup","handleLogout","handleChangeEmail","handleChangePassword","handleDeleteAccount","resetStatus","PageHeading","titleElement","title","styles","textAlign","style","className","TextInput","labelText","icon","type","name","placeholder","onChange","autocomplete","isHidden","setIsHidden","faLock","htmlFor","outline","autoComplete","onClick","event","preventDefault","faEye","faEyeSlash","Login","errorMessage","setErrorMessage","history","useHistory","inputs","setInputs","handleChange","e","target","display","flexDirection","justifyContent","marginRight","onSubmit","faEnvelope","backgroundColor","borderColor","borderRadius","borderWidth","disabled","Spinner","size","faSpinner","Logout","setTimeout","ChangePassword","color","background","border","DeleteAccount","UpdateProfile","onBack","faUser","MyAccount","photoUrl","loading","width","margin","exact","path","to","faAngleRight","faTrash","Navlinks","closeMenu","userName","firstChar","setFirstChar","bgColor","setBgColor","getRandomColor","charAt","toUpperCase","Math","floor","random","toString","position","height","alignItems","marginLeft","fontSize","Nav","onSearch","navClasses","setNavClasses","location","useLocation","searchText","setSearchText","pathname","paddingLeft","dbMethods","deckId","err","userId","update","isActive","CustomPagination","apiRef","useGridApiContext","state","useGridSelector","gridPaginationSelector","Pagination","variant","shape","page","count","pageCount","renderItem","props2","PaginationItem","disableRipple","current","setPage","Admin","decks","pageSize","setPageSize","rowsUser","setRowUser","rowsDeck","setRowDeck","viewMode","setViewMode","deck","description","numCards","cards","length","isPublic","userID","userElement","find","element","columnsUser","field","headerName","sortable","renderCell","params","stopPropagation","api","thisRow","getAllColumns","c","getValue","faUnlock","columnsDeck","paddingRight","rows","columns","disableSelectionOnClick","onPageSizeChange","newPageSize","pagination","components","useOnDecksSnapshot","setDecks","App","usersData","decksData","setDeckData","isSearching","setIsSearching","filter","includes","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.997fb153.chunk.js","sourcesContent":["/**\n * Initialize firebase authentication and firestore.\n */\n\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyB25ZqbIrDuXWUokLFcsbltpjUf5pjhb-w\",\n  authDomain: \"flashcardapp-d3306.firebaseapp.com\",\n  databaseURL: \"https://flashcardapp-d3306.firebaseio.com\",\n  projectId: \"flashcardapp-d3306\",\n  storageBucket: \"flashcardapp-d3306.appspot.com\",\n  messagingSenderId: \"635798969664\",\n  appId: \"1:635798969664:web:562fb322eeb9d31667eea5\",\n  measurementId: \"G-XSQ0TX77TY\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth=firebase.auth();\nexport const db=firebase.firestore();\nexport const fb=firebase;\nexport const storage=firebase.storage();\n\nexport default { firebaseConfig }","/**\n * Context Provider for the current user.\n */\n\nimport React, {useState, useEffect} from 'react';\nimport { auth } from '../firebase/firebaseIndex';\n\nexport const firebaseAuth = React.createContext();\n\nconst AuthProvider = (props) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsub = auth.onAuthStateChanged((user) => {\n      user ? setUser(user) : setUser(null);\n    });\n\n    return () => unsub();\n  });\n\n  return (\n    <firebaseAuth.Provider\n      value={{\n        user\n      }}\n    >\n      {props.children}\n    </firebaseAuth.Provider>\n  )\n}\n\nexport default AuthProvider;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnUserSnapshot = (user) => {\n  const db = firebase.firestore();\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    if (!user) {\n      setUsers([])\n      return\n    }\n    let ref = db.collection('users');\n    let unsubscribe = ref.onSnapshot((snapshot) => {\n      let arr = [];\n      snapshot.forEach(user => {\n        arr.push({\n          id: user.id,\n          ...user.data()\n        })\n      });\n      setUsers(arr);\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, [user]);\n\n  return { users };\n}\n\nexport default useOnUserSnapshot;","/**\n * Hook for user authentication and account management:\n * \n * Logging user in\n * Signing user up\n * Logging user out\n * Updating user email\n * Changing user password\n * Deleting account\n */\n\nimport { useState, useEffect, useContext } from 'react';\nimport { auth, db, fb } from '../firebase/firebaseIndex';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\nconst useAuth = (username = null, email = null, password = null, newPassword = null, avatarUrl = null) => {\n  const { user } = useContext(firebaseAuth);\n\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(\"pending\");\n\n  const [login, setLogin] = useState(0);\n  const [signup, setSignup] = useState(0);\n  const [logout, setLogout] = useState(0);\n  const [changeEmail, setChangeEmail] = useState(0);\n  const [changePassword, setChangePassword] = useState(0);\n  const [deleteAccount, setDeleteAccount] = useState(0);\n\n  // Logging user in\n  useEffect(() => {\n    if (login === 0 || user != null) return;\n    setError(null);\n    setStatus(\"loading\");\n    auth.signInWithEmailAndPassword(email, password)\n    .then((userCredential) => {\n      let _user = userCredential.user;\n      if (_user.uid != \"u1UXlHy2wvUC0LfSb5lQxO5d2jh1\") {\n        auth.signOut();\n        setStatus(\"error\");\n      } else {\n        setUserData(_user);\n        setStatus(\"success\");\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error logging user in: \", error.message);\n      setError(error);\n      setStatus(\"error\");\n    })\n  }, [login]);\n\n  // Signing user up\n  useEffect(() => {\n    if (signup === 0 || user != null) return;\n    setError(null);\n    setStatus(\"loading\");\n    auth.createUserWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        let _user = userCredential.user;\n        db.collection('users').doc(_user.uid).set({\n          save_decks: []\n        });\n        userCredential.user.updateProfile({displayName: username})\n        setUserData(_user);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        console.error(\"Error signing user in: \", error.message);\n        setError(error);\n        setStatus(\"error\");\n      })\n\n  }, [signup]);\n\n  // Logging user out\n  useEffect(() => {\n    if (logout === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    auth.signOut()\n    .then(() => {\n      console.log(\"Logged out\");\n      setUserData(null);\n      localStorage.removeItem('deck')\n      localStorage.removeItem('save_decks')\n      setStatus(\"success\");\n    })\n    .catch(error => {\n      console.error(\"Error logging user out: \", error.message);\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [logout]);\n\n  useEffect(() => {\n    if (changeEmail === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\")\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      console.log(\"User successfully reauthenticated.\");\n      auth.currentUser.updateEmail(email)\n      .then(() => {\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n      setStatus(\"loading\")\n      auth.currentUser.updateProfile({displayName: username, photoURL: avatarUrl})\n      .then(() => {\n        setUserData(auth.currentUser);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [changeEmail]);\n\n  // Changing password\n  useEffect(() => {\n    if (changePassword === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n    \n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      console.log(\"User successfully reauthenticated.\");\n      auth.currentUser.updatePassword(newPassword).then(function() {\n        setStatus(\"success\");\n      }).catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      });\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    })\n\n  }, [changePassword])\n\n  // Delete account\n  useEffect(() => {\n    if (deleteAccount === 0 || user === null) return;\n    setError(null);\n    setStatus(\"loading\");\n\n    const credential = fb.auth.EmailAuthProvider.credential(\n      auth.currentUser.email, \n      password,\n    );\n\n    auth.currentUser.reauthenticateWithCredential(credential).then(function() {\n      auth.currentUser.delete().then(() => {\n        setStatus(\"success\");\n      }).catch((error) => {\n        setError(error.code);\n        setStatus(\"error\");\n      })\n    }).catch((error) => {\n      setError(error.code);\n      setStatus(\"error\");\n    });\n\n  }, [deleteAccount])\n\n  const handleLogin = () => setLogin(prev => prev + 1);\n  const handleSignup = () => setSignup(prev => prev + 1);\n  const handleLogout = () => setLogout(prev => prev + 1);\n  const handleChangeEmail = () => setChangeEmail(prev => prev + 1);\n  const handleChangePassword = () => setChangePassword(prev => prev + 1);\n  const handleDeleteAccount = () => setDeleteAccount(prev => prev + 1);\n  const resetStatus = () => setStatus('pending');\n\n  return { \n    userData, \n    error, \n    status,\n    handleLogin, \n    handleSignup, \n    handleLogout,\n    handleChangeEmail,\n    handleChangePassword,\n    handleDeleteAccount,\n    resetStatus\n  };\n}\n\nexport default useAuth;","/**\n * Displays a heading with a subtitle.\n */\n\nimport React from 'react';\n\nconst PageHeading = ({\n  title,\n  styles = {textAlign: 'center'}\n}) => {\n  let titleElement = null;\n  titleElement=<h1 style={styles}>{title}</h1>\n\n  return (\n    <header className=\"page-heading\">\n      {titleElement}\n    </header>\n  )\n}\n\nexport default PageHeading;","/**\n * Displays a text or password input, dependinding on \n * the type prop. The password input can toggle between\n * password and text types.\n */\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash, faLock } from '@fortawesome/free-solid-svg-icons';\n\nconst TextInput = ({\n  labelText,\n  icon=null,\n  type=\"text\",\n  id=\"\",\n  name=\"\",\n  placeholder=\"\",\n  value,\n  onChange,\n  autocomplete=\"on\"\n}) => {\n  const [isHidden, setIsHidden] = useState(true);\n\n  const toggleHidden = (event) => {\n    event.preventDefault();\n    setIsHidden(prev => !prev);\n  }\n\n  if (icon === null && type===\"password\")\n    icon = <FontAwesomeIcon icon={faLock} />\n\n  return (\n    <div className=\"input-block\">\n      <label htmlFor={id}>{labelText}</label>\n      <div className=\"input-row\">\n        {icon}\n        <input \n          type={type === \"password\" ? isHidden ? \"password\" : \"text\" : type}\n          name={name}\n          id={id}\n          value={value}\n          onChange={onChange}\n          style={{outline: \"none\"}}\n          autoComplete={autocomplete}\n        >\n        </input>\n        {type === \"password\" &&\n          <button\n            type=\"button\"\n            className=\"btn btn-icon\"\n            onClick={toggleHidden}\n          >\n            {isHidden ?\n              <FontAwesomeIcon icon={faEye} />\n            :\n              <FontAwesomeIcon icon={faEyeSlash} />\n            }\n          </button>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default TextInput;","import React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst Login = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n  const [inputs, setInputs] = useState({ email: \"\", password: \"\" });\n\n  const { status, error, handleLogin} = useAuth(null, inputs.email, inputs.password);\n  const { user } = useContext(firebaseAuth);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleLogin();\n  }\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/user\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/user-not-found\":\n        setErrorMessage(\"メールアドレスとパスワードが一致しません。\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"メールアドレスとパスワードが一致しません。\");\n        return;\n      case \"auth/invalid-email\":\n        setErrorMessage(\"有効なメールアドレスを入力してください。\");\n        return;\n      default:\n        setErrorMessage(\"何かがうまくいかなかった。もう一度やり直してください。\");\n        return;\n    }\n\n  }, [error]);\n\n  return (\n    <div className=\"login\" style={{textAlign: 'center'}}>\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', marginRight: 200}}>\n        <PageHeading \n          title=\"ログイン\"\n        />\n      </div>\n      <form style={{display: 'inline-block'}} onSubmit={handleSubmit}>\n        <TextInput\n          labelText=\"メールアドレス\"\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n          id=\"email\"\n          name=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          placeholder=\"メールアドレス\"\n        />\n        <TextInput \n          labelText=\"パスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button \n          className=\"btn btn-primary\"\n          style={{backgroundColor: '#526CC6', borderColor: 'unset', borderRadius: 20, borderWidth: 0}}\n          disabled={inputs.password === \"\" || inputs.email === \"\"}        \n        >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"ログイン\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;","/**\n * A simple loading icon.\n */\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nconst Spinner = ({\n  size=\"1x\"\n}) => {\n  return <FontAwesomeIcon icon={faSpinner} size={size} className=\"spinner\"/>\n}\n\nexport default Spinner;","/**\n * Displays a spinner for 1 second when logging out.\n */\n\nimport React, { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport useAuth from '../../hooks/useAuth';\n\nimport Spinner from '../Spinner';\n\nconst Logout = () => {\n  const { user } = useContext(firebaseAuth);\n  const { handleLogout } = useAuth()\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!user) return;\n    handleLogout();\n    setTimeout(() => history.push(\"/\"), 1000);\n  }, [user]);\n\n  return (\n    <div className=\"container center\">\n      <p><Spinner /> Logging out . . .</p>\n    </div>\n  );\n}\n\nexport default Logout;","/**\n * Displays the update password page.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from '../Breadcrumb';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst ChangePassword = ({\n  handleChange,\n  inputs,\n  error,\n  onSubmit,\n  status\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n  \n  return (\n    <>\n      <PageHeading\n        title=\"パスワードを変更してください\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"新しいパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"new-password\"\n          name=\"newPassword\"\n          value={inputs.newPassword}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-primary\"　style={{color: 'white', background: '#526CC6', border: 'unset'}}>\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"パスワードを変更する\"}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default ChangePassword;","/**\n * Displays the delete account page.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\nimport Breadcrumb from '../Breadcrumb';\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst DeleteAccount = ({\n  handleChange,\n  inputs,\n  error,\n  onSubmit\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    switch (error) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n  \n  return (\n    <>\n      <PageHeading\n        title=\"アカウントを削除する\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-warning\">アカウントを完全に削除する</button>\n      </form>\n    </>\n  );\n}\n\nexport default DeleteAccount;","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faEnvelope, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport PageHeading from '../PageHeading';\nimport TextInput from '../TextInput';\n\nconst UpdateProfile = ({\n  handleChange,\n  inputs,\n  onSubmit,\n  error,\n  status,\n  onBack\n}) => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (error === null) {\n      setErrorMessage(\"\");\n      return;\n    }\n\n    switch (error.code) {\n      case null:\n        setErrorMessage(\"\");\n        return;\n      case \"auth/wrong-password\":\n        setErrorMessage(\"Incorrect password.\");\n        return;\n      default:\n        setErrorMessage(\"Something went wrong. Please try again.\");\n        return;\n    }\n  }, [error]);\n\n  useEffect(() => {\n    return () => onBack();\n  }, [])\n\n  return (\n    <>\n      <PageHeading\n        title=\"メールを更新する\"\n      />\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}>\n        <TextInput \n          labelText=\"ユーザー名\"\n          icon={<FontAwesomeIcon icon={faUser} />}\n          id=\"username\"\n          name=\"username\"\n          value={inputs.username}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"現在のパスワード\"\n          icon={<FontAwesomeIcon icon={faLock} />}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={inputs.password}\n          onChange={handleChange}\n        />\n        <TextInput \n          labelText=\"メルアドレス\"\n          icon={<FontAwesomeIcon icon={faEnvelope} />}\n          id=\"email\"\n          name=\"email\"\n          value={inputs.email}\n          onChange={handleChange}\n          placeholder=\"メルアドレス\"\n        />\n        {errorMessage !== \"\" && <p className=\"error\">{errorMessage}</p>}\n        <button className=\"btn btn-primary\" \n        style={{color: 'white', background: '#526CC6', border: 'unset'}}\n        disabled={inputs.password === \"\" || inputs.email === \"\" || inputs.username === \"\"}   >\n          {status === \"loading\" ? \"読み込み中 . . . \" : status === \"success\" ? \"成功\" : \"メールを更新する\"}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default UpdateProfile;","/**\n * Shows the My Account page and sets up the useAuth\n * hook to be used on ChangePassword, UpdateEmail and\n * DeleteAccount components.\n */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport ChangePassword from './ChangePassword';\nimport DeleteAccount from './DeleteAccount';\nimport PageHeading from '../PageHeading';\nimport UpdateProfile from './UpdateProfile';\n\nconst MyAccount = () => {\n  const { user } = useContext(firebaseAuth);\n  const [inputs, setInputs] = useState({ \n    email: user.email || \"\",\n    password: \"\", \n    newPassword: \"\", \n    username: user.displayName || \"\", \n    avatarUrl: user.photoUrl || \"\"});\n\n  const { \n    loading, \n    error, \n    status, \n    handleChangeEmail, \n    handleChangePassword, \n    handleDeleteAccount,\n    resetStatus\n  } = useAuth(inputs.username, inputs.email, inputs.password, inputs.newPassword);\n\n  const history = useHistory();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs(prev => ({ ...prev, [name]: value }));\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"my-account\">\n      <div className=\"my-account-inner\" style={{width: '50%', margin: '0 auto'}}>\n        <Switch>\n          <Route exact path=\"/my-account\">\n            <div>\n              <PageHeading\n                title=\"アカウント\"\n              />\n              <div className=\"account-data\">\n                  <Link to=\"/my-account/change-email\" className=\"btn btn-tertiary\">\n                    <span>メールを更新する</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                  </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/my-account/change-password\" className=\"btn btn-tertiary\">\n                  <span>パスワードを変更してください</span><FontAwesomeIcon icon={faAngleRight} className=\"icon\" />\n                </Link>\n              </div>\n              <div className=\"account-data\">\n                <Link to=\"/my-account/delete-account\" className=\"btn btn-warning\">\n                  <FontAwesomeIcon icon={faTrash} />&nbsp;&nbsp;&nbsp;アカウントを削除する\n                </Link>\n              </div>\n            </div>\n          </Route>\n\n          <Route exact path=\"/my-account/change-email\">\n            <UpdateProfile \n              handleChange={handleChange}\n              inputs={inputs}\n              loading={loading}\n              onSubmit={handleChangeEmail}\n              error={error}\n              status={status}\n              onBack={resetStatus}\n            />\n          </Route>\n\n          <Route exact path=\"/my-account/change-password\">\n            <ChangePassword \n              handleChange={handleChange}\n              loading={loading}\n              inputs={inputs}\n              onSubmit={handleChangePassword}\n              error={error}\n              status={status}\n            />\n          </Route>\n          \n          <Route exact path=\"/my-account/delete-account\">\n            <DeleteAccount \n              handleChange={handleChange}\n              inputs={inputs}\n              onSubmit={handleDeleteAccount}\n              error={error}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default MyAccount;","import React, {useEffect, useState} from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navlinks = ({ closeMenu, userName }) => {\n  const [firstChar, setFirstChar] = useState('');\n  const [bgColor, setBgColor] = useState('');\n\n  const getFirstChar = () => {\n    if (userName) {\n      setFirstChar(userName.charAt(0).toUpperCase());\n    }\n  }\n\n  useEffect(() => {\n    setBgColor('#' + getRandomColor());\n    console.log(bgColor);\n    getFirstChar();\n  },[userName]);\n\n  const getRandomColor = () => {\n    return Math.floor(Math.random()*16777215).toString(16)\n  }\n\n\n  \n  return (\n    <div style={{position: 'relative', display: 'flex'}}>\n      <div className=\"avatar-btn\" style={{backgroundColor: `${bgColor}`}}>\n        <div className=\"name\">{firstChar}</div>\n      </div>\n      <div className=\"avt-links\">\n        <ul>\n        <li>\n          <NavLink\n            to=\"/my-account\"\n            className=\"link\"\n            onClick={() => closeMenu()}\n          >\n            プロフィール\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/log-out\" className=\"link\" onClick={() => closeMenu()}>\n            ログアウト\n          </NavLink>\n        </li>\n        </ul>\n      </div>\n      <div style={{height: '36px', display: 'flex', alignItems: 'center', marginLeft: '8px', fontSize: '20px', color: 'white'}}>{userName}</div>\n    </div>\n  );\n};\n\nexport default Navlinks;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReply, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { firebaseAuth } from '../provider/AuthProvider';\n\n\nimport Navlinks from './Navlinks';\nimport TextInput from './TextInput';\n\nconst Nav = ({\n  onClick,\n  onSearch,\n}) => {\n  const [navClasses, setNavClasses] = useState(\"navbar\");\n  const btnClasses= \"btn btn-hamburger small-screen-only \"; \n  let location = useLocation();\n  const { user } = useContext(firebaseAuth);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n\n    if (location.pathname !== \"/\") {\n      setNavClasses(\"navbar light\");\n      return;\n    }\n\n    setNavClasses(\"navbar\");\n  }, [location])\n\n  if (!user) {\n    return null\n  }\n\n  return (\n    <header className={navClasses} style={{background: '#526CC6'}}>\n      <div className=\"navbar-inner\">\n        <div className=\"logo\">\n        <Link to=\"/\" className=\"logo\" >\n        ホーム\n        </Link>\n          </div>\n          <input\n          style={{outline: 'unset', height: 30, borderRadius: 15, paddingLeft: 10, borderColor: 'white'}}\n          id=\"search\"\n          name=\"search\"\n          placeholder='検索'\n          value={searchText}\n          onChange={(e) => {\n            setSearchText(e.target.value)\n            onSearch(e.target.value)\n          }}\n        />\n          \n        <div className=\"right-nav\">\n          <nav className=\"large-screen-only\">\n            <Navlinks closeMenu={() => null } userName={user.displayName}/>\n          </nav>\n          <button \n            className={btnClasses}\n            name=\"toggle-menu\"\n            onClick={onClick}\n          >\n            <span></span>\n            <span></span>\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Nav;","/**\n * Methods for accessing the firestore database:\n *\n * createDeck\n * deleteDeck\n * updateDeck\n * createCard\n * updateCard\n * deleteCard\n */\n\nimport { db } from \"./firebaseIndex\";\nimport firebase from \"firebase\";\n\nexport const dbMethods = {\n  createDeck: (user, title, description, cards, isPublic = true) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const document = db.collection(\"decks\").doc();\n\n    const newDeck = {\n      id: document.id,\n      numCards: cards.length,\n      title,\n      description,\n      owner: user.uid,\n      cards: cards,\n      isPublic: isPublic,\n    };\n\n    document\n      .set(newDeck)\n      .then(console.log(\"Created new deck.\"))\n      .catch((err) => {\n        console.error(\"Error creating deck: \", err.message);\n      });\n  },\n\n  deleteDeck: (deckId) => {\n\n    db.collection(\"decks\")\n      .doc(deckId)\n      .delete()\n      .then(console.log(\"Deck successfully deleted.\"))\n      .catch((err) => {\n        console.error(\"Error deleting deck: \", err.message);\n      });\n  },\n\n  deleteUser: (userId) => {\n\n    const updatedUser = {\n      isActive: false,\n    };\n\n    db.collection(\"users\")\n      .doc(userId)\n      .update(updatedUser)\n      .then(console.log(\"User successfully deleted.\"))\n      .catch((err) => {\n        console.error(\"Error deleting deck: \", err.message);\n      });\n  },\n\n  unlockUser: (userId) => {\n\n    const updatedUser = {\n      isActive: true,\n    };\n\n    db.collection(\"users\")\n      .doc(userId)\n      .update(updatedUser)\n      .then(console.log(\"User successfully deleted.\"))\n      .catch((err) => {\n        console.error(\"Error deleting deck: \", err.message);\n      });\n  },\n\n  saveDeck: (user, deck) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n    return db\n      .collection(\"users\")\n      .doc(user.uid)\n      .update({\n        save_decks: firebase.firestore.FieldValue.arrayUnion(deck),\n      })\n      .then(() => {\n        db.collection(\"decks\")\n          .doc(deck.id)\n          .update({\n            saveCount: firebase.firestore.FieldValue.increment(1)\n          })\n          .then(() => {\n            console.log(\"Updated save count number of deck with id: \", deck.id);\n          })\n          .catch((err) => {\n            console.error(\"Error updating document: \", err.message);\n          });\n        console.log(\"Updated deck with id: \", deck.id);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n\n  unsaveDeck: (user, deck) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n    return db\n      .collection(\"users\")\n      .doc(user.uid)\n      .update({\n        save_decks: firebase.firestore.FieldValue.arrayRemove({\n          id: deck.id,\n          numCards: deck.numCards,\n          owner: deck.owner,\n          title: deck.title,\n          description: deck.description,\n          cards: deck.cards,\n          isPublic: deck.isPublic,\n        }),\n      })\n      .then(() => {\n        let ref = db\n          .collection(\"decks\")\n          .doc(deck.id)\n          .get()\n          .then((doc) => {\n            if (doc.data().saveCount > 0) {\n              db.collection(\"decks\")\n                .doc(deck.id)\n                .update({\n                  saveCount: firebase.firestore.FieldValue.increment(-1),\n                })\n                .then(() => {\n                  console.log(\n                    \"Updated save count number of deck with id: \",\n                    deck.id\n                  );\n                })\n                .catch((err) => {\n                  console.error(\"Error updating document: \", err.message);\n                });\n            } else {\n              db.collection(\"decks\")\n                .doc(deck.id)\n                .update({\n                  saveCount: 0,\n                })\n                .then(() => {\n                  console.log(\n                    \"Updated save count number of deck with id: \",\n                    deck.id\n                  );\n                })\n                .catch((err) => {\n                  console.error(\"Error updating document: \", err.message);\n                });\n            }\n          })\n          .catch((err) => {\n            console.error(\"Error getting document data: \", err.message);\n          });\n        console.log(\"Updated deck with id: \", deck.id);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n\n  updateDeck: (user, deckId, title, description, cards, isPublic = true) => {\n    if (!user) {\n      console.log(\"No user selected.\");\n      return;\n    }\n\n    const updatedDeck = {\n      title,\n      description,\n      cards,\n      numCards: cards.length,\n      isPublic: isPublic,\n    };\n\n    return db\n      .collection(\"decks\")\n      .doc(deckId)\n      .update(updatedDeck)\n      .then(() => {\n        console.log(\"Updated deck with id: \", deckId);\n      })\n      .catch((err) => {\n        console.error(\"Error updating document: \", err.message);\n      });\n  },\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, Switch, Route } from 'react-router-dom';\n// import { DataGrid } from '@mui/x-data-grid';\nimport {\n  DataGrid,\n  gridPaginationSelector,\n  gridPageSelector,\n  useGridApiContext,\n  useGridSelector,\n} from '@mui/x-data-grid';\nimport Pagination from '@mui/material/Pagination';\nimport PaginationItem from '@mui/material/PaginationItem';\n\nimport { firebaseAuth } from '../../provider/AuthProvider';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleUp, faBan, faHighlighter, faLightbulb, faLock, faTrash, faUnlock } from '@fortawesome/free-solid-svg-icons';\nimport { dbMethods } from '../../firebase/dbMethods';\n\nfunction CustomPagination() {\n  const apiRef = useGridApiContext();\n  const state = useGridSelector(apiRef, gridPaginationSelector);\n\n  return (\n    <Pagination\n      color=\"primary\"\n      variant=\"outlined\"\n      shape=\"rounded\"\n      page={state.page + 1}\n      count={state.pageCount}\n      renderItem={(props2) => <PaginationItem {...props2} disableRipple />}\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n    />\n  );\n}\n\nconst Admin = ({\n  users,\n  decks,\n}) => {\n  const { user } = useContext(firebaseAuth);\n  const history = useHistory();\n  const [pageSize, setPageSize] = React.useState(5);\n  const [rowsUser, setRowUser] = useState([]);\n  const [rowsDeck, setRowDeck] = useState([]);\n  const [viewMode, setViewMode] = useState(1);\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  useEffect(() => {\n    let arr = [];\n    users.forEach(user => arr.push({\n      id: user.id,\n      username: user.username,\n      email: user.email,\n    }));\n    setRowUser(arr);\n  }, [users])\n\n  useEffect(() => {\n    let arr = [];\n    decks.forEach(deck => arr.push({\n      id: deck.id,\n      title: deck.title,\n      description: deck.description,\n      numCards: deck.cards.length,\n      isPublic: deck.isPublic,\n    }));\n    setRowDeck(arr);\n  }, [decks])\n\n  const _handleDeleteUser = (userID) => {\n    dbMethods.deleteUser(userID);\n  }\n\n  const _handleUnlockUser = (userId) => {\n    dbMethods.unlockUser(userId);\n  }\n\n  const _handleDeleteDeck = (deckId) => {\n    dbMethods.deleteDeck(deckId);\n  }\n\n  const isActive = (userID) => {\n    let userElement = users.find((element) => {\n      return element.id === userID;\n    })\n    return userElement?.isActive ?? false\n  }\n  \n  const columnsUser = [\n    { field: 'id', headerName: 'ユーザーID', width: 290},\n    { field: 'username', headerName: 'ユーザー名', width: 300 },\n    { field: 'email', headerName: 'メールアドレス', width: 200 },\n    {\n      field: \"action\",\n      headerName: \"\",\n      sortable: false,\n      width: 200,\n      renderCell: (params) => {\n        const onClick = (e) => {\n          e.stopPropagation();\n          const api = params.api;\n        const thisRow = {};\n\n        api\n          .getAllColumns()\n          .forEach(\n            (c) => (thisRow[c.field] = params.getValue(params.id, c.field)),\n          );\n        if (isActive(thisRow.id)) {\n          return _handleDeleteUser(thisRow.id);\n        } else {\n          return _handleUnlockUser(thisRow.id);\n        }\n        };\n        const api = params.api;\n        const thisRow = {};\n\n        api\n          .getAllColumns()\n          .forEach(\n            (c) => (thisRow[c.field] = params.getValue(params.id, c.field)),\n          );\n\n        return isActive(thisRow.id) ? <button style={{height: 30, width: 200, backgroundColor: 'red', color: 'white'}} onClick={onClick} >\n        <FontAwesomeIcon icon={faLock} /> {\"無効化する\"}\n      </button> : <button style={{height: 30, width: 180, backgroundColor: 'green', color: 'white'}} onClick={onClick} >\n          <FontAwesomeIcon icon={faUnlock} /> {\"アクティブ化する\"}\n        </button>\n      }\n    },\n  ];\n\n  const columnsDeck = [\n    { field: 'id', headerName: 'セットID', width: 150},\n    { field: 'title', headerName: 'タイトル', width: 150 },\n    { field: 'description', headerName: '説明', width: 150 },\n    { field: 'numCards', headerName: 'カードの数', width: 150 },\n    { field: 'isPublic', headerName: 'パブリックされている', width: 180 },\n    {\n      field: \"action\",\n      headerName: \"\",\n      sortable: false,\n      width: 200,\n      renderCell: (params) => {\n        const onClick = (e) => {\n          e.stopPropagation();\n          const api = params.api;\n        const thisRow = {};\n\n        api\n          .getAllColumns()\n          .forEach(\n            (c) => (thisRow[c.field] = params.getValue(params.id, c.field)),\n          );\n\n        return _handleDeleteDeck(thisRow.id);\n        };\n  \n        return <button style={{height: 30, width: 200, backgroundColor: 'red', color: 'white'}} onClick={onClick} >\n          <FontAwesomeIcon icon={faTrash} /> {\"削除する\"}\n        </button>;\n      }\n    },\n  ];\n\n  const _generateUserList = () => {\n    return <DataGrid\n              rows={rowsUser} \n              columns={columnsUser}\n              pageSize={pageSize}\n              disableSelectionOnClick\n              onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\n              pagination\n              components={{\n                Pagination: CustomPagination,\n              }}\n            />\n  }\n\n  const _generateSetList = () => {\n    return <DataGrid\n              rows={rowsDeck} \n              columns={columnsDeck}\n              pageSize={pageSize}\n              disableSelectionOnClick\n              onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\n              pagination\n              components={{\n                Pagination: CustomPagination,\n              }}\n            />\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/\">\n        <>\n          <section>\n            <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-around'}}>\n              <div className=\"hero-content\" style={{paddingRight: 100}}>\n                  <div className=\"buttons\">\n                    <>\n                      <div\n                        className=\"btn btn-cta\"\n                        onClick={()=>{setViewMode(1)}}\n                      >\n                        ユーザーのリスト\n                      </div>\n                    </>\n                  </div>\n                </div>\n                <div className=\"hero-content\">\n                <div className=\"buttons\">\n                  <>\n                    <div\n                      className=\"btn btn-cta\"\n                      onClick={()=>{setViewMode(2)}}\n                    >\n                      セットのリスト\n                    </div>\n                  </>\n                </div>\n              </div>\n            </div>\n          \n            <div style={{ height: 400}}>\n            {viewMode == 1 ? _generateUserList() : _generateSetList()}\n            </div>\n          </section>\n        </>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Admin;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst useOnDecksSnapshot = (user) => {\n  const db = firebase.firestore();\n  const [decks, setDecks] = useState([]);\n\n  // Get decks from collection where owner is the current user.\n  useEffect(() => {\n    if (!user) {\n      setDecks([])\n      return\n    }\n    let ref = db.collection('decks');    \n    let unsubscribe = ref.onSnapshot((snapshot) => {\n      let arr = [];\n      snapshot.forEach(deck => arr.push({\n        id: deck.id,\n        ...deck.data()\n      }));\n      setDecks(arr);\n    }, error => console.log(\"Error: \", error.message))\n\n    return () => unsubscribe();\n  }, [user]);\n\n  return { decks };\n}\n\nexport default useOnDecksSnapshot;","/**\n * Main wrapper for the app, containing the shuffle functionality\n * used by Deck and Dashboard components.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport { firebaseAuth } from './provider/AuthProvider';\nimport useOnUserSnapshot from './hooks/useOnUserSnapshot';\n\nimport Login from './components/account-management/Login';\nimport Logout from './components/account-management/Logout';\nimport MyAccount from './components/account-management/MyAccount';\nimport Nav from './components/Nav';\nimport Admin from './components/admin/Admin';\nimport useOnDecksSnapshot from './hooks/useOnDecksSnapshot';\n\nconst App = () => {\n  const history = useHistory();\n  const { user } = useContext(firebaseAuth);\n  const { users } = useOnUserSnapshot(user);\n  const { decks } = useOnDecksSnapshot(user);\n\n  const [usersData, setUserData] = useState([]);\n  const [decksData, setDeckData] = useState([]);\n\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    if (!isSearching) {\n      setUserData(users)\n    }\n  }, [users])\n\n  useEffect(() => {\n    console.log(decks);\n    if (!isSearching) {\n      setDeckData(decks)\n    }\n  }, [decks])\n\n  useEffect(() => {\n    if (!searchText || searchText.length == 0) {\n      setIsSearching(false)\n      setUserData(users)\n      setDeckData(decks)\n    } else {\n      setIsSearching(true)\n      setUserData(users.filter((element) => {return element.username.includes(searchText)}));\n      setDeckData(decks.filter((element) => {return element.title.includes(searchText)}))\n    }\n  }, [searchText])\n\n  const onSearch = (text) => {\n    setSearchText(text);\n  }\n\n  const handleButtons = (event) => {\n    switch (event.target.name) {\n      case \"exit\":\n        if (user) {\n          history.push(\"/app\");\n          return;\n        }\n        history.push(\"/\");\n        return;\n      default:\n        return;\n    }\n  }\n\n  if (!user) {\n    history.push(\"/log-in\");\n  }\n\n  return (\n    <div className=\"app\">\n      <Nav \n        onClick={handleButtons}\n        onSearch={onSearch}\n      />\n      <Switch>\n        <Route path=\"/log-in\">\n          <Login />\n        </Route>\n        <Route path=\"/log-out\">\n          <main>\n            <Logout />\n          </main>\n        </Route>\n        <Route path=\"/my-account\">\n          <main>\n            <MyAccount />\n          </main>\n        </Route>\n        <Route path=\"/\">\n          <main>\n            <Admin \n              users={usersData}\n              decks={decksData}\n            />\n          </main>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport AuthProvider from './provider/AuthProvider';\n\nimport './styles/normalize.css';\nimport './styles/styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <AuthProvider>\n        \n        <App />\n      </AuthProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}